DEBUG:asyncio:Using selector: KqueueSelector
INFO:pygls.feature_manager:Registered builtin feature exit
INFO:pygls.feature_manager:Registered builtin feature initialize
INFO:pygls.feature_manager:Registered builtin feature initialized
INFO:pygls.feature_manager:Registered builtin feature shutdown
INFO:pygls.feature_manager:Registered builtin feature textDocument/didChange
INFO:pygls.feature_manager:Registered builtin feature textDocument/didClose
INFO:pygls.feature_manager:Registered builtin feature textDocument/didOpen
INFO:pygls.feature_manager:Registered builtin feature workspace/didChangeWorkspaceFolders
INFO:pygls.feature_manager:Registered builtin feature workspace/executeCommand
INFO:pygls.feature_manager:Command antimony.getAnnotated is successfully registered.
INFO:pygls.feature_manager:Command antimony.antFiletoSBMLFile is successfully registered.
INFO:pygls.feature_manager:Command antimony.antFileToSBMLStr is successfully registered.
INFO:pygls.feature_manager:Command antimony.antStrToSBMLStr is successfully registered.
INFO:pygls.feature_manager:Command antimony.sbmlFileToAntStr is successfully registered.
INFO:pygls.feature_manager:Command antimony.sbmlStrToAntStr is successfully registered.
INFO:pygls.feature_manager:Command antimony.sbmlFileToAntFile is successfully registered.
INFO:pygls.feature_manager:Command antimony.getAnnotation is successfully registered.
INFO:pygls.feature_manager:Command antimony.sendQuery is successfully registered.
INFO:pygls.feature_manager:Command antimony.getRateLawDict is successfully registered.
INFO:pygls.feature_manager:Command antimony.recommender is successfully registered.
INFO:pygls.feature_manager:Command antimony.searchModel is successfully registered.
INFO:pygls.feature_manager:Command antimony.getModel is successfully registered.
INFO:pygls.feature_manager:Registered textDocument/hover with options {}
INFO:pygls.feature_manager:Registered textDocument/definition with options {}
INFO:pygls.feature_manager:Registered textDocument/didOpen with options {}
INFO:pygls.feature_manager:Registered textDocument/didChange with options {}
INFO:pygls.feature_manager:Registered textDocument/didSave with options {}
INFO:pygls.server:Starting IO server
DEBUG:pygls.server:Content length: 5218
DEBUG:pygls.protocol:Received b'Content-Length: 5218\r\n\r\n{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":22730,"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-us","rootPath":"/Users/evaliu/Documents/vscode-antimony/examples/BioModels","rootUri":"file:///Users/evaliu/Documents/vscode-antimony/examples/BioModels","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]},"resolveSupport":{"properties":["location.range"]}},"codeLens":{"refreshSupport":true},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"didRename":true,"didDelete":true,"willCreate":true,"willRename":true,"willDelete":true}},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"insertTextMode":2,"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionList":{"itemDefaults":["commitCharacters","editRange","insertTextFormat","insertTextMode"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]},"labelSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit"]},"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"honorsChangeAnnotations":false},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"requests":{"range":true,"full":{"delta":true}},"multilineTokenSupport":false,"overlappingTokenSupport":false,"serverCancelSupport":true,"augmentsSyntaxTokens":true},"linkedEditingRange":{"dynamicRegistration":true}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true},"workDoneProgress":true},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":["textDocument/semanticTokens/full","textDocument/semanticTokens/range","textDocument/semanticTokens/full/delta"]},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"}}},"trace":"off","workspaceFolders":[{"uri":"file:///Users/evaliu/Documents/vscode-antimony/examples/BioModels","name":"BioModels"}]}}'
DEBUG:pygls.protocol:Request message received.
INFO:pygls.protocol:Language server initialized Object(processId=22730, clientInfo=Object(name='Visual Studio Code', version='1.78.2'), locale='en-us', rootPath='/Users/evaliu/Documents/vscode-antimony/examples/BioModels', rootUri='file:///Users/evaliu/Documents/vscode-antimony/examples/BioModels', capabilities=Object(workspace=Object(applyEdit=True, workspaceEdit=Object(documentChanges=True, resourceOperations=['create', 'rename', 'delete'], failureHandling='textOnlyTransactional', normalizesLineEndings=True, changeAnnotationSupport=Object(groupsOnLabel=True)), didChangeConfiguration=Object(dynamicRegistration=True), didChangeWatchedFiles=Object(dynamicRegistration=True), symbol=Object(dynamicRegistration=True, symbolKind=Object(valueSet=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]), tagSupport=Object(valueSet=[1]), resolveSupport=Object(properties=['location.range'])), codeLens=Object(refreshSupport=True), executeCommand=Object(dynamicRegistration=True), configuration=True, workspaceFolders=True, semanticTokens=Object(refreshSupport=True), fileOperations=Object(dynamicRegistration=True, didCreate=True, didRename=True, didDelete=True, willCreate=True, willRename=True, willDelete=True)), textDocument=Object(publishDiagnostics=Object(relatedInformation=True, versionSupport=False, tagSupport=Object(valueSet=[1, 2]), codeDescriptionSupport=True, dataSupport=True), synchronization=Object(dynamicRegistration=True, willSave=True, willSaveWaitUntil=True, didSave=True), completion=Object(dynamicRegistration=True, contextSupport=True, completionItem=Object(snippetSupport=True, commitCharactersSupport=True, documentationFormat=['markdown', 'plaintext'], deprecatedSupport=True, preselectSupport=True, tagSupport=Object(valueSet=[1]), insertReplaceSupport=True, resolveSupport=Object(properties=['documentation', 'detail', 'additionalTextEdits']), insertTextModeSupport=Object(valueSet=[1, 2]), labelDetailsSupport=True), insertTextMode=2, completionItemKind=Object(valueSet=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]), completionList=Object(itemDefaults=['commitCharacters', 'editRange', 'insertTextFormat', 'insertTextMode'])), hover=Object(dynamicRegistration=True, contentFormat=['markdown', 'plaintext']), signatureHelp=Object(dynamicRegistration=True, signatureInformation=Object(documentationFormat=['markdown', 'plaintext'], parameterInformation=Object(labelOffsetSupport=True), activeParameterSupport=True), contextSupport=True), definition=Object(dynamicRegistration=True, linkSupport=True), references=Object(dynamicRegistration=True), documentHighlight=Object(dynamicRegistration=True), documentSymbol=Object(dynamicRegistration=True, symbolKind=Object(valueSet=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]), hierarchicalDocumentSymbolSupport=True, tagSupport=Object(valueSet=[1]), labelSupport=True), codeAction=Object(dynamicRegistration=True, isPreferredSupport=True, disabledSupport=True, dataSupport=True, resolveSupport=Object(properties=['edit']), codeActionLiteralSupport=Object(codeActionKind=Object(valueSet=['', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 'refactor.rewrite', 'source', 'source.organizeImports'])), honorsChangeAnnotations=False), codeLens=Object(dynamicRegistration=True), formatting=Object(dynamicRegistration=True), rangeFormatting=Object(dynamicRegistration=True), onTypeFormatting=Object(dynamicRegistration=True), rename=Object(dynamicRegistration=True, prepareSupport=True, prepareSupportDefaultBehavior=1, honorsChangeAnnotations=True), documentLink=Object(dynamicRegistration=True, tooltipSupport=True), typeDefinition=Object(dynamicRegistration=True, linkSupport=True), implementation=Object(dynamicRegistration=True, linkSupport=True), colorProvider=Object(dynamicRegistration=True), foldingRange=Object(dynamicRegistration=True, rangeLimit=5000, lineFoldingOnly=True), declaration=Object(dynamicRegistration=True, linkSupport=True), selectionRange=Object(dynamicRegistration=True), callHierarchy=Object(dynamicRegistration=True), semanticTokens=Object(dynamicRegistration=True, tokenTypes=['namespace', 'type', 'class', 'enum', 'interface', 'struct', 'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 'number', 'regexp', 'operator', 'decorator'], tokenModifiers=['declaration', 'definition', 'readonly', 'static', 'deprecated', 'abstract', 'async', 'modification', 'documentation', 'defaultLibrary'], formats=['relative'], requests=Object(range=True, full=Object(delta=True)), multilineTokenSupport=False, overlappingTokenSupport=False, serverCancelSupport=True, augmentsSyntaxTokens=True), linkedEditingRange=Object(dynamicRegistration=True)), window=Object(showMessage=Object(messageActionItem=Object(additionalPropertiesSupport=True)), showDocument=Object(support=True), workDoneProgress=True), general=Object(staleRequestSupport=Object(cancel=True, retryOnContentModified=['textDocument/semanticTokens/full', 'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta']), regularExpressions=Object(engine='ECMAScript', version='ES2020'), markdown=Object(parser='marked', version='1.1.0'))), trace='off', workspaceFolders=[Object(uri='file:///Users/evaliu/Documents/vscode-antimony/examples/BioModels', name='BioModels')])
DEBUG:pygls.protocol:Server capabilities: {'textDocumentSync': <TextDocumentSyncKind.INCREMENTAL: 2>, 'hoverProvider': True, 'definitionProvider': True, 'referencesProvider': False, 'documentHighlightProvider': False, 'documentSymbolProvider': False, 'workspaceSymbolProvider': False, 'codeActionProvider': False, 'documentFormattingProvider': False, 'documentRangeFormattingProvider': False, 'renameProvider': False, 'executeCommandProvider': <pygls.types.ExecuteCommandOptions object at 0x2b215feb0>, 'workspace': {'workspaceFolders': {'supported': True, 'changeNotifications': True}}}
INFO:pygls.protocol:Sending data: {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 2, "hoverProvider": true, "definitionProvider": true, "referencesProvider": false, "documentHighlightProvider": false, "documentSymbolProvider": false, "workspaceSymbolProvider": false, "codeActionProvider": false, "documentFormattingProvider": false, "documentRangeFormattingProvider": false, "renameProvider": false, "executeCommandProvider": {"commands": ["antimony.getAnnotated", "antimony.antFiletoSBMLFile", "antimony.antFileToSBMLStr", "antimony.antStrToSBMLStr", "antimony.sbmlFileToAntStr", "antimony.sbmlStrToAntStr", "antimony.sbmlFileToAntFile", "antimony.getAnnotation", "antimony.sendQuery", "antimony.getRateLawDict", "antimony.recommender", "antimony.searchModel", "antimony.getModel"]}, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}}}}}
DEBUG:pygls.server:Content length: 52
DEBUG:pygls.protocol:Received b'Content-Length: 52\r\n\r\n{"jsonrpc":"2.0","method":"initialized","params":{}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.server:Content length: 3346
DEBUG:pygls.protocol:Received b'Content-Length: 3346\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/evaliu/Documents/vscode-antimony/examples/BioModels/1.ant","languageId":"antimony","version":1,"text":"// Created by libAntimony v2.12.0.3\\r\\nmodel *BIOMD0000000001()\\r\\n\\r\\n  // Compartments and Species:\\r\\n  compartment comp1;\\r\\n  species BLL in comp1, IL in comp1, AL in comp1, A in comp1, BL in comp1;\\r\\n  species B in comp1, DLL in comp1, D in comp1, ILL in comp1, DL in comp1;\\r\\n  species I in comp1, ALL in comp1, BwLL;\\r\\n\\r\\n  // Reactions:\\r\\n  React0: B -> BL; comp1*(kf_0*B - kr_0*BL);\\r\\n  React1: BL -> BLL; comp1*(kf_1*BL - kr_1*BLL);\\r\\n  React2: BwLL -> ALL; comp1*(kf_2*BLL - kr_2*ALL);\\r\\n  React3: A -> AL; comp1*(kf_3*A - kr_3*AL);\\r\\n  React4: AL -> ALL; comp1*(kf_4*AL - kr_4*ALL);\\r\\n  React5: B -> A; comp1*(kf_5*B - kr_5*A);\\r\\n  React6: BL -> AL; comp1*(kf_6*BL - kr_6*AL);\\r\\n  React7: I -> IL; comp1*(kf_7*I - kr_7*IL);\\r\\n  React8: IL -> ILL; comp1*(kf_8*IL - kr_8*ILL);\\r\\n  React9: A -> I; comp1*(kf_9*A - kr_9*I);\\r\\n  React10: AL -> IL; comp1*(kf_10*AL - kr_10*IL);\\r\\n  React11: ALL -> ILL; comp1*(kf_11*ALL - kr_11*ILL);\\r\\n  React12: D -> DL; comp1*(kf_12*D - kr_12*DL);\\r\\n  React13: DL -> DLL; comp1*(kf_13*DL - kr_13*DLL);\\r\\n  React14: I -> D; comp1*(kf_14*I - kr_14*D);\\r\\n  React15: IL -> DL; comp1*(kf_15*IL - kr_15*DL);\\r\\n  React16: ILL -> DLL; comp1*(kf_16*ILL - kr_16*DLL);\\r\\n\\r\\n  // Events:\\r\\n  RemovalACh: at time > t2: kf_13 = 0, kf_8 = 0, kf_4 = 0, kf_1 = 0, kf_12 = 0, kf_7 = 0, kf_3 = 0, kf_0 = 0;\\r\\n\\r\\n  // Species initializations:\\r\\n  BLL = 0;\\r\\n  IL = 0;\\r\\n  AL = 0;\\r\\n  A = 0;\\r\\n  BL = 0;\\r\\n  B = 1.66057788110262e-21/comp1;\\r\\n  DLL = 0;\\r\\n  D = 0;\\r\\n  ILL = 0;\\r\\n  DL = 0;\\r\\n  I = 0;\\r\\n  ALL = 0;\\r\\n  BwLL = 3;\\r\\n\\r\\n  // Compartment initializations:\\r\\n  comp1 = 1e-16;\\r\\n\\r\\n  // Variable initializations:\\r\\n  t2 = 20;\\r\\n  kf_0 = 30002;\\r\\n  kf_3 = 3000;\\r\\n  kf_7 = 3000;\\r\\n  kf_12 = 3000;\\r\\n  kf_1 = 1500;\\r\\n  kf_4 = 1500;\\r\\n  kf_8 = 1500;\\r\\n  kf_13 = 1500;\\r\\n  kr_0 = 8000;\\r\\n  kr_1 = 16000;\\r\\n  kf_2 = 30000;\\r\\n  kr_2 = 700;\\r\\n  kr_3 = 8.64;\\r\\n  kr_4 = 17.28;\\r\\n  kf_5 = 0.54;\\r\\n  kr_5 = 10800;\\r\\n  kf_6 = 130;\\r\\n  kr_6 = 2740;\\r\\n  kr_7 = 4;\\r\\n  kr_8 = 8;\\r\\n  kf_9 = 19.7;\\r\\n  kr_9 = 3.74;\\r\\n  kf_10 = 19.85;\\r\\n  kr_10 = 1.74;\\r\\n  kf_11 = 20;\\r\\n  kr_11 = 0.81;\\r\\n  kr_12 = 4;\\r\\n  kr_13 = 8;\\r\\n  kf_14 = 0.05;\\r\\n  kr_14 = 0.0012;\\r\\n  kf_15 = 0.05;\\r\\n  kr_15 = 0.0012;\\r\\n  kf_16 = 0.05;\\r\\n  kr_16 = 0.0012;\\r\\n\\r\\n  // Other declarations: \\r\\n  var kf_0, kf_3, kf_7, kf_12, kf_1, kf_4, kf_8, kf_13;\\r\\n  const comp1, t2, kr_0, kr_1, kf_2, kr_2, kr_3, kr_4, kf_5, kr_5, kf_6, kr_6;\\r\\n  const kr_7, kr_8, kf_9, kr_9, kf_10, kr_10, kf_11, kr_11, kr_12, kr_13;\\r\\n  const kf_14, kr_14, kf_15, kr_15, kf_16, kr_16;\\r\\n\\r\\n  // Display Names:\\r\\n  comp1 is \\"compartment1\\";\\r\\n  BLL is \\"BasalACh2\\";\\r\\n  IL is \\"IntermediateACh\\";\\r\\n  AL is \\"ActiveACh\\";\\r\\n  A is \\"Active\\";\\r\\n  BL is \\"BasalACh\\";\\r\\n  B is \\"Basal\\";\\r\\n  DLL is \\"DesensitisedACh2\\";\\r\\n  D is \\"Desensitised\\";\\r\\n  ILL is \\"IntermediateACh2\\";\\r\\n  DL is \\"DesensitisedACh\\";\\r\\n  I is \\"Intermediate\\";\\r\\n  ALL is \\"ActiveACh2\\";\\r\\n  RemovalACh is \\"removal of ACh\\";\\r\\n\\r\\n\\r\\n  BLL identity \\"http://identifiers.org/chebi/CHEBI:27732\\"\\r\\nend\\r\\n"}}}'
DEBUG:pygls.protocol:Notification message received.
INFO:vscode-antimony logger:Parse tree:
INFO:vscode-antimony logger:Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'BIOMD0000000001'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BLL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'IL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'AL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DLL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'D')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ILL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'I')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ALL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BwLL')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'B')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_0')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'B')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_0')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_1')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_1')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React2')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BwLL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_2')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BLL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_2')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React3')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_3')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_3')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React4')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_4')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_4')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React5')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'B')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_5')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'B')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_5')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React6')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_6')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_6')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React7')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_7')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_7')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React8')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_8')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_8')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React9')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_9')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_9')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React10')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_10')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_10')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React11')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_11')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_11')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React12')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'D')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_12')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'D')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_12')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React13')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_13')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_13')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React14')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'D')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_14')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_14')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'D')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React15')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_15')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_15')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React16')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_16')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_16')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'RemovalACh')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 't2')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_13')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_8')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_4')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_12')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_7')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_3')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_0')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'IL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'AL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '1.66057788110262e-21'), Token('SLASH', '/'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'D')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ILL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'I')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ALL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BwLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1e-16')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 't2')]), None]), Token('EQUAL', '='), Token('NUMBER', '20')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_0')]), None]), Token('EQUAL', '='), Token('NUMBER', '30002')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_3')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_7')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_12')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_4')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_8')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_13')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_0')]), None]), Token('EQUAL', '='), Token('NUMBER', '8000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_1')]), None]), Token('EQUAL', '='), Token('NUMBER', '16000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_2')]), None]), Token('EQUAL', '='), Token('NUMBER', '30000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_2')]), None]), Token('EQUAL', '='), Token('NUMBER', '700')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_3')]), None]), Token('EQUAL', '='), Token('NUMBER', '8.64')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_4')]), None]), Token('EQUAL', '='), Token('NUMBER', '17.28')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_5')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.54')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_5')]), None]), Token('EQUAL', '='), Token('NUMBER', '10800')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_6')]), None]), Token('EQUAL', '='), Token('NUMBER', '130')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_6')]), None]), Token('EQUAL', '='), Token('NUMBER', '2740')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_7')]), None]), Token('EQUAL', '='), Token('NUMBER', '4')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_8')]), None]), Token('EQUAL', '='), Token('NUMBER', '8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_9')]), None]), Token('EQUAL', '='), Token('NUMBER', '19.7')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_9')]), None]), Token('EQUAL', '='), Token('NUMBER', '3.74')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_10')]), None]), Token('EQUAL', '='), Token('NUMBER', '19.85')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_10')]), None]), Token('EQUAL', '='), Token('NUMBER', '1.74')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_11')]), None]), Token('EQUAL', '='), Token('NUMBER', '20')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_11')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.81')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_12')]), None]), Token('EQUAL', '='), Token('NUMBER', '4')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_13')]), None]), Token('EQUAL', '='), Token('NUMBER', '8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_14')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_14')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_15')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_15')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_16')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_16')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_0')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_3')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_7')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_12')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_4')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_8')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_13')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 't2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_0')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_3')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_4')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_5')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_5')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_6')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_6')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_7')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_8')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_9')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_9')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_10')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_10')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_11')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_11')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_12')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_13')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_14')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_14')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_15')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_15')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_16')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_16')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'comp1'), Token('IS', 'is'), Token('ESCAPED_STRING', '"compartment1"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'BLL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"BasalACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'IL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"IntermediateACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'AL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"ActiveACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'A'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Active"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'BL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"BasalACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'B'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Basal"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'DLL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"DesensitisedACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'D'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Desensitised"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'ILL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"IntermediateACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'DL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"DesensitisedACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'I'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Intermediate"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'ALL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"ActiveACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'RemovalACh'), Token('IS', 'is'), Token('ESCAPED_STRING', '"removal of ACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n\r\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'BLL')]), Token('ANNOT_KEYWORD', 'identity'), Token('ESCAPED_STRING', '"http://identifiers.org/chebi/CHEBI:27732"'), None]), Token('NEWLINE', '\r\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')])])
DEBUG:suds.wsdl:reading WSDL at: http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl ...
DEBUG:suds.transport.http:opening (http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl)
DEBUG:suds.metrics:b'<?xml version=\'1.0\' encoding=\'UTF-8\'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI\'s version is JAX-WS RI 2.3.0.2 svn-revision#b53771461f7d15f7842d8b88fd794780f6b9c4b4. --><definitions xmlns:tns="https://www.ebi.ac.uk/webservices/chebi" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" name="ChebiWebServices" targetNamespace="https://www.ebi.ac.uk/webservices/chebi">\n   <types>\n      <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://www.ebi.ac.uk/webservices/chebi">\n\n         <xsd:complexType name="LiteEntity">\n            <xsd:sequence>\n               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="chebiAsciiName" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="searchScore" type="xsd:float"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n         <xsd:complexType name="LiteEntityList">\n            <xsd:sequence>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:LiteEntity"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n         <xsd:complexType name="OntologyDataItemList">\n            <xsd:sequence>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:OntologyDataItem"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n         <xsd:complexType name="CommentDataItem">\n            <xsd:sequence>\n               <xsd:element maxOccurs="1" minOccurs="1" name="text" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="date" type="xsd:string"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n         <xsd:complexType name="DataItem">\n            <xsd:sequence>\n               <xsd:element maxOccurs="1" minOccurs="1" name="data" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="type" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="source" type="xsd:string"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n         <xsd:complexType name="StructureDataItem">\n            <xsd:sequence>\n               <xsd:element maxOccurs="1" minOccurs="1" name="structure" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="dimension" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="defaultStructure" type="xsd:boolean"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n         <xsd:complexType name="OntologyDataItem">\n            <xsd:sequence>\n               <xsd:element maxOccurs="1" minOccurs="1" name="chebiName" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="cyclicRelationship" type="xsd:boolean"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyElement" type="tns:OntologyDataItem"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n          <xsd:complexType name="CompoundOriginDataItem">\n              <xsd:sequence>\n                  <xsd:element maxOccurs="1" minOccurs="1" name="speciesText" type="xsd:string"/>\n                  <xsd:element maxOccurs="1" minOccurs="0" name="speciesAccession" type="xsd:string"/>\n                  <xsd:element maxOccurs="1" minOccurs="0" name="componentText" type="xsd:string"/>\n                  <xsd:element maxOccurs="1" minOccurs="0" name="componentAccession" type="xsd:string"/>\n                  <xsd:element maxOccurs="1" minOccurs="0" name="strainText" type="xsd:string"/>\n                  <xsd:element maxOccurs="1" minOccurs="0" name="strainAccession" type="xsd:string"/>\n                  <xsd:element maxOccurs="1" minOccurs="1" name="SourceType" type="xsd:string"/>\n                  <xsd:element maxOccurs="1" minOccurs="1" name="SourceAccession" type="xsd:string"/>\n              </xsd:sequence>\n          </xsd:complexType>\n\n         <xsd:complexType name="Entity">\n            <xsd:sequence>\n               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="chebiAsciiName" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="definition" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="smiles" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="inchi" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="inchiKey" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="charge" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="mass" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="monoisotopicMass" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="SecondaryChEBIIds" type="xsd:string"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Synonyms" type="tns:DataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="IupacNames" type="tns:DataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Formulae" type="tns:DataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="RegistryNumbers" type="tns:DataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Citations" type="tns:DataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChemicalStructures" type="tns:StructureDataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="DatabaseLinks" type="tns:DataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyParents" type="tns:OntologyDataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyChildren" type="tns:OntologyDataItem"/>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="GeneralComments" type="tns:CommentDataItem"/>\n                <xsd:element maxOccurs="unbounded" minOccurs="0" name="CompoundOrigins" type="tns:CompoundOriginDataItem"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n         <xsd:complexType name="UpdatedPolymer">\n            <xsd:sequence>\n               <xsd:element maxOccurs="1" minOccurs="1" name="updatedStructure" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="globalFormula" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="globalCharge" type="xsd:string"/>\n               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>\n            </xsd:sequence>\n         </xsd:complexType>\n\n\n         <complexType name="getLiteEntityResponse">\n            <sequence>\n               <element name="return" type="tns:LiteEntityList"/>\n            </sequence>\n         </complexType>\n         <element name="getLiteEntityResponse" type="tns:getLiteEntityResponse"/>\n\n         <simpleType name="SearchCategory">\n            <restriction base="xsd:string">\n               <enumeration value="ALL"/>\n               <enumeration value="CHEBI ID"/>\n               <enumeration value="CHEBI NAME"/>\n                <enumeration value="DEFINITION"/>\n               <enumeration value="ALL NAMES"/>\n               <enumeration value="IUPAC NAME"/>\n               <enumeration value="CITATIONS"/>\n               <enumeration value="REGISTRY NUMBERS"/>\n               <enumeration value="MANUAL XREFS"/>\n               <enumeration value="AUTOMATIC XREFS"/>\n               <enumeration value="FORMULA"/>\n               <enumeration value="MASS"/>\n               <enumeration value="MONOISOTOPIC MASS"/>\n               <enumeration value="CHARGE"/>\n               <enumeration value="INCHI/INCHI KEY"/>\n               <enumeration value="SMILES"/>\n               <enumeration value="SPECIES"/>\n            </restriction>\n         </simpleType>\n\n         <simpleType name="StructureSearchCategory">\n            <restriction base="xsd:string">\n               <enumeration value="IDENTITY"/>\n               <enumeration value="SUBSTRUCTURE"/>\n               <enumeration value="SIMILARITY"/>\n            </restriction>\n         </simpleType>\n\n         <simpleType name="StructureType">\n            <restriction base="xsd:string">\n               <enumeration value="MOLFILE"/>\n               <enumeration value="CML"/>\n               <enumeration value="SMILES"/>\n               <!--<enumeration value="INCHI"/>-->\n            </restriction>\n         </simpleType>\n\n         <simpleType name="RelationshipType">\n            <restriction base="xsd:string">\n               <enumeration value="is a"/>\n               <enumeration value="has part"/>\n               <enumeration value="is conjugate base of"/>\n               <enumeration value="is conjugate acid of"/>\n               <enumeration value="is tautomer of"/>\n               <enumeration value="is enantiomer of"/>\n               <enumeration value="has functional parent"/>\n               <enumeration value="has parent hydride"/>\n               <enumeration value="is substituent group from"/>\n               <enumeration value="has role"/>\n            </restriction>\n         </simpleType>\n\n         <simpleType name="StarsCategory">\n            <restriction base="xsd:string">\n               <enumeration value="ALL"/>\n               <enumeration value="TWO ONLY"/>\n               <enumeration value="THREE ONLY"/>\n            </restriction>\n         </simpleType>\n\n         <complexType name="getLiteEntity">\n            <sequence>\n               <element name="search" type="xsd:string"/>\n               <element name="searchCategory" type="tns:SearchCategory"/>\n               <element name="maximumResults" type="xsd:int"/>\n               <element name="stars" type="tns:StarsCategory"/>\n            </sequence>\n         </complexType>\n         <element name="getLiteEntity" type="tns:getLiteEntity"/>\n\n         <complexType name="getCompleteEntityResponse">\n            <sequence>\n               <element name="return" type="tns:Entity"/>\n            </sequence>\n         </complexType>\n         <element name="getCompleteEntityResponse" type="tns:getCompleteEntityResponse"/>\n\n         <complexType name="getCompleteEntity">\n            <sequence>\n               <element name="chebiId" type="xsd:string"/>\n            </sequence>\n         </complexType>\n         <element name="getCompleteEntity" type="tns:getCompleteEntity"/>\n\n          <!--Returns a the complete entity\'s using a list of LiteEntities. The maximum list passed is 50-->\n         <complexType name="getCompleteEntityByListResponse">\n            <sequence>\n               <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:Entity"/>\n            </sequence>\n         </complexType>\n         <element name="getCompleteEntityByListResponse" type="tns:getCompleteEntityByListResponse"/>\n\n         <complexType name="getCompleteEntityByList">\n            <sequence>\n               <xsd:element maxOccurs="50" minOccurs="0" name="ListOfChEBIIds" type="xsd:string"/>\n            </sequence>\n         </complexType>\n         <element name="getCompleteEntityByList" type="tns:getCompleteEntityByList"/>\n\n         <complexType name="getOntologyParentsResponse">\n            <sequence>\n               <element name="return" type="tns:OntologyDataItemList"/>\n            </sequence>\n         </complexType>\n         <element name="getOntologyParentsResponse" type="tns:getOntologyParentsResponse"/>\n\n         <complexType name="getOntologyParents">\n            <sequence>\n               <element name="chebiId" type="xsd:string"/>\n            </sequence>\n         </complexType>\n         <element name="getOntologyParents" type="tns:getOntologyParents"/>\n\n         <complexType name="getOntologyChildrenResponse">\n            <sequence>\n               <element name="return" type="tns:OntologyDataItemList"/>\n            </sequence>\n         </complexType>\n         <element name="getOntologyChildrenResponse" type="tns:getOntologyChildrenResponse"/>\n\n         <complexType name="getOntologyChildren">\n            <sequence>\n               <element name="chebiId" type="xsd:string"/>\n            </sequence>\n         </complexType>\n         <element name="getOntologyChildren" type="tns:getOntologyChildren"/>\n         <complexType name="getAllOntologyChildrenInPathResponse">\n            <sequence>\n               <element name="return" type="tns:OntologyDataItemList"/>\n            </sequence>\n         </complexType>\n         <element name="getAllOntologyChildrenInPathResponse" type="tns:getAllOntologyChildrenInPathResponse"/>\n\n         <complexType name="getAllOntologyChildrenInPath">\n            <sequence>\n               <element name="chebiId" type="xsd:string"/>\n               <element name="relationshipType" type="tns:RelationshipType"/>\n               <element name="structureOnly" type="xsd:boolean"/>\n            </sequence>\n         </complexType>\n         <element name="getAllOntologyChildrenInPath" type="tns:getAllOntologyChildrenInPath"/>\n\n         <complexType name="getStructureSearchResponse">\n            <sequence>\n               <element name="return" type="tns:LiteEntityList"/>\n            </sequence>\n         </complexType>\n         <element name="getStructureSearchResponse" type="tns:getLiteEntityResponse"/>\n\n         <complexType name="getStructureSearch">\n            <sequence>\n               <element name="structure" type="xsd:string"/>\n               <element name="type" type="tns:StructureType"/>\n               <element name="structureSearchCategory" type="tns:StructureSearchCategory"/>\n               <element name="totalResults" type="xsd:int"/>\n               <element name="tanimotoCutoff" type="xsd:float"/>\n            </sequence>\n         </complexType>\n         <element name="getStructureSearch" type="tns:getStructureSearch"/>\n\n          <complexType name="getUpdatedPolymer">\n              <sequence>\n                  <element name="chebiId" type="xsd:string"/>\n                  <xsd:element maxOccurs="unbounded" minOccurs="1" name="polymerisationIndex" type="xsd:string"/>\n              </sequence>\n          </complexType>\n         <element name="getUpdatedPolymer" type="tns:getUpdatedPolymer"/>\n\n         <complexType name="getUpdatedPolymerResponse">\n            <sequence>\n               <element name="return" type="tns:UpdatedPolymer"/>\n            </sequence>\n         </complexType>\n         <element name="getUpdatedPolymerResponse" type="tns:getUpdatedPolymerResponse"/>\n\n         <element name="ChebiWebServiceFault" type="tns:ChebiWebServiceFault"/>\n\n         <complexType name="ChebiWebServiceFault">\n            <sequence>\n               <element name="faultInfo" type="xsd:string"/>\n               <element name="message" type="xsd:string"/>\n            </sequence>\n         </complexType>\n\n      </xsd:schema>\n   </types>\n   <message name="getLiteEntity">\n      <part name="parameters" element="tns:getLiteEntity"/>\n   </message>\n   <message name="getLiteEntityResponse">\n      <part name="result" element="tns:getLiteEntityResponse"/>\n   </message>\n   <message name="getCompleteEntity">\n      <part name="parameters" element="tns:getCompleteEntity"/>\n   </message>\n   <message name="getCompleteEntityResponse">\n      <part name="result" element="tns:getCompleteEntityResponse"/>\n   </message>\n   <message name="getCompleteEntityByList">\n      <part name="parameters" element="tns:getCompleteEntityByList"/>\n   </message>\n   <message name="getCompleteEntityByListResponse">\n      <part name="result" element="tns:getCompleteEntityByListResponse"/>\n   </message>\n   <message name="getOntologyParents">\n      <part name="parameters" element="tns:getOntologyParents"/>\n   </message>\n   <message name="getOntologyParentsResponse">\n      <part name="result" element="tns:getOntologyParentsResponse"/>\n   </message>\n   <message name="getOntologyChildren">\n      <part name="parameters" element="tns:getOntologyChildren"/>\n   </message>\n   <message name="getOntologyChildrenResponse">\n      <part name="result" element="tns:getOntologyChildrenResponse"/>\n   </message>\n   <message name="getAllOntologyChildrenInPath">\n      <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>\n   </message>\n   <message name="getAllOntologyChildrenInPathResponse">\n      <part name="result" element="tns:getAllOntologyChildrenInPathResponse"/>\n   </message>\n   <message name="getStructureSearch">\n      <part name="parameters" element="tns:getStructureSearch"/>\n   </message>\n   <message name="getStructureSearchResponse">\n      <part name="result" element="tns:getStructureSearchResponse"/>\n   </message>\n   <message name="getUpdatedPolymer">\n      <part name="parameters" element="tns:getUpdatedPolymer"/>\n   </message>\n   <message name="getUpdatedPolymerResponse">\n      <part name="result" element="tns:getUpdatedPolymerResponse"/>\n   </message>\n   <message name="chebiWebServiceFault">\n      <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>\n   </message>\n   <portType name="ChebiWebServicePortType">\n      <operation name="getLiteEntity">\n         <input message="tns:getLiteEntity"/>\n         <output message="tns:getLiteEntityResponse"/>\n         <fault name="chebiWebServiceFault" message="tns:chebiWebServiceFault"/>\n      </operation>\n      <operation name="getCompleteEntity">\n         <input message="tns:getCompleteEntity"/>\n         <output message="tns:getCompleteEntityResponse"/>\n         <fault name="chebiWebServiceFault" message="tns:chebiWebServiceFault"/>\n      </operation>\n      <operation name="getCompleteEntityByList">\n         <input message="tns:getCompleteEntityByList"/>\n         <output message="tns:getCompleteEntityByListResponse"/>\n         <fault name="chebiWebServiceFault" message="tns:chebiWebServiceFault"/>\n      </operation>\n      <operation name="getOntologyParents">\n         <input message="tns:getOntologyParents"/>\n         <output message="tns:getOntologyParentsResponse"/>\n         <fault name="chebiWebServiceFault" message="tns:chebiWebServiceFault"/>\n      </operation>\n      <operation name="getOntologyChildren">\n         <input message="tns:getOntologyChildren"/>\n         <output message="tns:getOntologyChildrenResponse"/>\n         <fault name="chebiWebServiceFault" message="tns:chebiWebServiceFault"/>\n      </operation>\n      <operation name="getAllOntologyChildrenInPath">\n         <input message="tns:getAllOntologyChildrenInPath"/>\n         <output message="tns:getLiteEntityResponse"/>\n         <fault name="chebiWebServiceFault" message="tns:chebiWebServiceFault"/>\n      </operation>\n      <operation name="getStructureSearch">\n         <input message="tns:getStructureSearch"/>\n         <output message="tns:getStructureSearchResponse"/>\n         <fault name="chebiWebServiceFault" message="tns:chebiWebServiceFault"/>\n      </operation>\n      <operation name="getUpdatedPolymer">\n         <input message="tns:getUpdatedPolymer"/>\n         <output message="tns:getUpdatedPolymerResponse"/>\n         <fault name="chebiWebServiceFault" message="tns:chebiWebServiceFault"/>\n      </operation>\n   </portType>\n   <binding name="ChebiWebServiceBinding" type="tns:ChebiWebServicePortType">\n      <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>\n      <operation name="getCompleteEntity">\n         <soap:operation soapAction=""/>\n         <input>\n            <soap:body use="literal"/>\n         </input>\n         <output>\n            <soap:body use="literal"/>\n         </output>\n         <fault name="chebiWebServiceFault">\n            <soap:fault name="chebiWebServiceFault" use="literal"/>\n         </fault>\n      </operation>\n      <operation name="getCompleteEntityByList">\n         <soap:operation soapAction=""/>\n         <input>\n            <soap:body use="literal"/>\n         </input>\n         <output>\n            <soap:body use="literal"/>\n         </output>\n         <fault name="chebiWebServiceFault">\n            <soap:fault name="chebiWebServiceFault" use="literal"/>\n         </fault>\n      </operation>\n      <operation name="getLiteEntity">\n         <soap:operation soapAction=""/>\n         <input>\n            <soap:body use="literal"/>\n         </input>\n         <output>\n            <soap:body use="literal"/>\n         </output>\n         <fault name="chebiWebServiceFault">\n            <soap:fault name="chebiWebServiceFault" use="literal"/>\n         </fault>\n      </operation>\n      <operation name="getOntologyParents">\n         <soap:operation soapAction=""/>\n         <input>\n            <soap:body use="literal"/>\n         </input>\n         <output>\n            <soap:body use="literal"/>\n         </output>\n         <fault name="chebiWebServiceFault">\n            <soap:fault name="chebiWebServiceFault" use="literal"/>\n         </fault>\n      </operation>\n      <operation name="getOntologyChildren">\n         <soap:operation soapAction=""/>\n         <input>\n            <soap:body use="literal"/>\n         </input>\n         <output>\n            <soap:body use="literal"/>\n         </output>\n         <fault name="chebiWebServiceFault">\n            <soap:fault name="chebiWebServiceFault" use="literal"/>\n         </fault>\n      </operation>\n      <operation name="getAllOntologyChildrenInPath">\n         <soap:operation soapAction=""/>\n         <input>\n            <soap:body use="literal"/>\n         </input>\n         <output>\n            <soap:body use="literal"/>\n         </output>\n         <fault name="chebiWebServiceFault">\n            <soap:fault name="chebiWebServiceFault" use="literal"/>\n         </fault>\n      </operation>\n      <operation name="getStructureSearch">\n         <soap:operation soapAction=""/>\n         <input>\n            <soap:body use="literal"/>\n         </input>\n         <output>\n            <soap:body use="literal"/>\n         </output>\n         <fault name="chebiWebServiceFault">\n            <soap:fault name="chebiWebServiceFault" use="literal"/>\n         </fault>\n      </operation>\n      <operation name="getUpdatedPolymer">\n         <soap:operation soapAction=""/>\n         <input>\n            <soap:body use="literal"/>\n         </input>\n         <output>\n            <soap:body use="literal"/>\n         </output>\n         <fault name="chebiWebServiceFault">\n            <soap:fault name="chebiWebServiceFault" use="literal"/>\n         </fault>\n      </operation>\n   </binding>\n   <service name="ChebiWebServiceService">\n      <port name="ChebiWebServicePort" binding="tns:ChebiWebServiceBinding">\n         <soap:address location="http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"/>\n      </port>\n   </service>\n</definitions>'
sax duration: 6 (ms)
DEBUG:suds.xsd.sxbase:Element:0x2b25a9f40, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25a9fd0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25a9fa0, convert type='xsd:float' to ('float', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5070, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5040, convert type='tns:LiteEntity' to ('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5100, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5190, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5250, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5220, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5310, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5340, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5370, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b52e0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5430, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5460, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5490, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b54c0, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5400, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5580, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b55b0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b55e0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5610, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5640, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5670, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5550, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5730, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5760, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5790, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b57c0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b57f0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5820, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5850, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5700, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5910, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5940, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5970, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b59a0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b59d0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5a00, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5a30, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5a60, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5a90, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5ac0, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5af0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5b20, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5b50, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5b80, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5bb0, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5be0, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5c10, convert type='tns:StructureDataItem' to ('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5c40, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5c70, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5ca0, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5cd0, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5d00, convert type='tns:CompoundOriginDataItem' to ('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b58e0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5dc0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5df0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5e20, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5d90, convert type='tns:LiteEntityList' to ('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25b5e50, convert type='tns:getLiteEntityResponse' to ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Restriction:0x2b25b5e80, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6580, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x2b25bc2e0, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b25c65e0, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x2b25bc310, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6700, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x2b25bc400, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6670, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x2b25bc520, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6580, found builtin (string)
DEBUG:suds.xsd.sxbase:Element:0x2b25bc790, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25bc8b0, convert type='tns:SearchCategory' to ('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bc8e0, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25bc910, convert type='tns:StarsCategory' to ('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bc820, convert type='tns:getLiteEntity' to ('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bc970, convert type='tns:Entity' to ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bc880, convert type='tns:getCompleteEntityResponse' to ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bca30, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25bc9d0, convert type='tns:getCompleteEntity' to ('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcaf0, convert type='tns:Entity' to ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bca90, convert type='tns:getCompleteEntityByListResponse' to ('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcbb0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcb50, convert type='tns:getCompleteEntityByList' to ('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcc70, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcc10, convert type='tns:getOntologyParentsResponse' to ('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcd30, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25bccd0, convert type='tns:getOntologyParents' to ('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcdf0, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcd90, convert type='tns:getOntologyChildrenResponse' to ('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bceb0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25bce50, convert type='tns:getOntologyChildren' to ('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcf70, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcf10, convert type='tns:getAllOntologyChildrenInPathResponse' to ('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6070, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6100, convert type='tns:RelationshipType' to ('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6130, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25bcfa0, convert type='tns:getAllOntologyChildrenInPath' to ('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6190, convert type='tns:LiteEntityList' to ('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c60d0, convert type='tns:getLiteEntityResponse' to ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6250, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25c62e0, convert type='tns:StructureType' to ('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6310, convert type='tns:StructureSearchCategory' to ('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6340, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6370, convert type='xsd:float' to ('float', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25c61f0, convert type='tns:getStructureSearch' to ('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c63d0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6460, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25c62b0, convert type='tns:getUpdatedPolymer' to ('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c64c0, convert type='tns:UpdatedPolymer' to ('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6430, convert type='tns:getUpdatedPolymerResponse' to ('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6550, convert type='tns:ChebiWebServiceFault' to ('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b25c65b0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b25c6640, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.schema:loaded:

schema collection
   Schema:0x2b25a9d90
   (raw)
      <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://www.ebi.ac.uk/webservices/chebi">
         <xsd:complexType name="LiteEntity">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="chebiAsciiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="searchScore" type="xsd:float"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="LiteEntityList">
            <xsd:sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:LiteEntity"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="OntologyDataItemList">
            <xsd:sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:OntologyDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="CommentDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="text" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="date" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="DataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="data" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="source" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="StructureDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="structure" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="dimension" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="defaultStructure" type="xsd:boolean"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="OntologyDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="cyclicRelationship" type="xsd:boolean"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyElement" type="tns:OntologyDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="CompoundOriginDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="speciesText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="speciesAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="componentText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="componentAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="strainText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="strainAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="SourceType" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="SourceAccession" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="Entity">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiAsciiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="definition" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="smiles" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="inchi" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="inchiKey" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="charge" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="mass" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="monoisotopicMass" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="SecondaryChEBIIds" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Synonyms" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="IupacNames" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Formulae" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="RegistryNumbers" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Citations" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChemicalStructures" type="tns:StructureDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="DatabaseLinks" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyParents" type="tns:OntologyDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyChildren" type="tns:OntologyDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="GeneralComments" type="tns:CommentDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="CompoundOrigins" type="tns:CompoundOriginDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="UpdatedPolymer">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="updatedStructure" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="globalFormula" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="globalCharge" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <complexType name="getLiteEntityResponse">
            <sequence>
               <element name="return" type="tns:LiteEntityList"/>
            </sequence>
         </complexType>
         <element name="getLiteEntityResponse" type="tns:getLiteEntityResponse"/>
         <simpleType name="SearchCategory">
            <restriction base="xsd:string">
               <enumeration value="ALL"/>
               <enumeration value="CHEBI ID"/>
               <enumeration value="CHEBI NAME"/>
               <enumeration value="DEFINITION"/>
               <enumeration value="ALL NAMES"/>
               <enumeration value="IUPAC NAME"/>
               <enumeration value="CITATIONS"/>
               <enumeration value="REGISTRY NUMBERS"/>
               <enumeration value="MANUAL XREFS"/>
               <enumeration value="AUTOMATIC XREFS"/>
               <enumeration value="FORMULA"/>
               <enumeration value="MASS"/>
               <enumeration value="MONOISOTOPIC MASS"/>
               <enumeration value="CHARGE"/>
               <enumeration value="INCHI/INCHI KEY"/>
               <enumeration value="SMILES"/>
               <enumeration value="SPECIES"/>
            </restriction>
         </simpleType>
         <simpleType name="StructureSearchCategory">
            <restriction base="xsd:string">
               <enumeration value="IDENTITY"/>
               <enumeration value="SUBSTRUCTURE"/>
               <enumeration value="SIMILARITY"/>
            </restriction>
         </simpleType>
         <simpleType name="StructureType">
            <restriction base="xsd:string">
               <enumeration value="MOLFILE"/>
               <enumeration value="CML"/>
               <enumeration value="SMILES"/>
            </restriction>
         </simpleType>
         <simpleType name="RelationshipType">
            <restriction base="xsd:string">
               <enumeration value="is a"/>
               <enumeration value="has part"/>
               <enumeration value="is conjugate base of"/>
               <enumeration value="is conjugate acid of"/>
               <enumeration value="is tautomer of"/>
               <enumeration value="is enantiomer of"/>
               <enumeration value="has functional parent"/>
               <enumeration value="has parent hydride"/>
               <enumeration value="is substituent group from"/>
               <enumeration value="has role"/>
            </restriction>
         </simpleType>
         <simpleType name="StarsCategory">
            <restriction base="xsd:string">
               <enumeration value="ALL"/>
               <enumeration value="TWO ONLY"/>
               <enumeration value="THREE ONLY"/>
            </restriction>
         </simpleType>
         <complexType name="getLiteEntity">
            <sequence>
               <element name="search" type="xsd:string"/>
               <element name="searchCategory" type="tns:SearchCategory"/>
               <element name="maximumResults" type="xsd:int"/>
               <element name="stars" type="tns:StarsCategory"/>
            </sequence>
         </complexType>
         <element name="getLiteEntity" type="tns:getLiteEntity"/>
         <complexType name="getCompleteEntityResponse">
            <sequence>
               <element name="return" type="tns:Entity"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityResponse" type="tns:getCompleteEntityResponse"/>
         <complexType name="getCompleteEntity">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntity" type="tns:getCompleteEntity"/>
         <complexType name="getCompleteEntityByListResponse">
            <sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:Entity"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityByListResponse" type="tns:getCompleteEntityByListResponse"/>
         <complexType name="getCompleteEntityByList">
            <sequence>
               <xsd:element maxOccurs="50" minOccurs="0" name="ListOfChEBIIds" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityByList" type="tns:getCompleteEntityByList"/>
         <complexType name="getOntologyParentsResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getOntologyParentsResponse" type="tns:getOntologyParentsResponse"/>
         <complexType name="getOntologyParents">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getOntologyParents" type="tns:getOntologyParents"/>
         <complexType name="getOntologyChildrenResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getOntologyChildrenResponse" type="tns:getOntologyChildrenResponse"/>
         <complexType name="getOntologyChildren">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getOntologyChildren" type="tns:getOntologyChildren"/>
         <complexType name="getAllOntologyChildrenInPathResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getAllOntologyChildrenInPathResponse" type="tns:getAllOntologyChildrenInPathResponse"/>
         <complexType name="getAllOntologyChildrenInPath">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
               <element name="relationshipType" type="tns:RelationshipType"/>
               <element name="structureOnly" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <element name="getAllOntologyChildrenInPath" type="tns:getAllOntologyChildrenInPath"/>
         <complexType name="getStructureSearchResponse">
            <sequence>
               <element name="return" type="tns:LiteEntityList"/>
            </sequence>
         </complexType>
         <element name="getStructureSearchResponse" type="tns:getLiteEntityResponse"/>
         <complexType name="getStructureSearch">
            <sequence>
               <element name="structure" type="xsd:string"/>
               <element name="type" type="tns:StructureType"/>
               <element name="structureSearchCategory" type="tns:StructureSearchCategory"/>
               <element name="totalResults" type="xsd:int"/>
               <element name="tanimotoCutoff" type="xsd:float"/>
            </sequence>
         </complexType>
         <element name="getStructureSearch" type="tns:getStructureSearch"/>
         <complexType name="getUpdatedPolymer">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="1" name="polymerisationIndex" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getUpdatedPolymer" type="tns:getUpdatedPolymer"/>
         <complexType name="getUpdatedPolymerResponse">
            <sequence>
               <element name="return" type="tns:UpdatedPolymer"/>
            </sequence>
         </complexType>
         <element name="getUpdatedPolymerResponse" type="tns:getUpdatedPolymerResponse"/>
         <element name="ChebiWebServiceFault" type="tns:ChebiWebServiceFault"/>
         <complexType name="ChebiWebServiceFault">
            <sequence>
               <element name="faultInfo" type="xsd:string"/>
               <element name="message" type="xsd:string"/>
            </sequence>
         </complexType>
      </xsd:schema>
   (model)
      <Complex:0x2b25a9e80 name="LiteEntity">
         <Sequence:0x2b25a9ee0>
            <Element:0x2b25a9f40 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25a9fd0 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25a9fa0 name="searchScore" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5070 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25a9f10 name="LiteEntityList">
         <Sequence:0x2b25b50a0>
            <Element:0x2b25b5040 name="ListElement" type="('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25a9f70 name="OntologyDataItemList">
         <Sequence:0x2b25b50d0>
            <Element:0x2b25b5100 name="ListElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25b5130 name="CommentDataItem">
         <Sequence:0x2b25b5160>
            <Element:0x2b25b5190 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5250 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25b51c0 name="DataItem">
         <Sequence:0x2b25b51f0>
            <Element:0x2b25b5220 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5310 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5340 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5370 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25b5280 name="StructureDataItem">
         <Sequence:0x2b25b52b0>
            <Element:0x2b25b52e0 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5430 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5460 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5490 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b54c0 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25b53a0 name="OntologyDataItem">
         <Sequence:0x2b25b53d0>
            <Element:0x2b25b5400 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b55b0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b55e0 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5610 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5640 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5670 name="OntologyElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25b54f0 name="CompoundOriginDataItem">
         <Sequence:0x2b25b5520>
            <Element:0x2b25b5550 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5730 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5760 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5790 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b57c0 name="strainText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b57f0 name="strainAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5820 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5850 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25b56a0 name="Entity">
         <Sequence:0x2b25b56d0>
            <Element:0x2b25b5700 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5910 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5940 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5970 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b59a0 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b59d0 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5a00 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5a30 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5a60 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5a90 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5ac0 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5af0 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5b20 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5b50 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5b80 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5bb0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5be0 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5c10 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5c40 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5c70 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5ca0 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5cd0 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25b5d00 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25b5880 name="UpdatedPolymer">
         <Sequence:0x2b25b58b0>
            <Element:0x2b25b58e0 name="updatedStructure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5dc0 name="globalFormula" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5df0 name="globalCharge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25b5e20 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x2b25b5d30 name="getLiteEntityResponse">
         <Sequence:0x2b25b5d60>
            <Element:0x2b25b5d90 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25b5e50 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Simple:0x2b25b5ee0 name="SearchCategory">
         <Restriction:0x2b25b5e80 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x2b25b5f10 name="ALL" />
            <Enumeration:0x2b25b5fa0 name="CHEBI ID" />
            <Enumeration:0x2b25b5fd0 name="CHEBI NAME" />
            <Enumeration:0x2b25b5f70 name="DEFINITION" />
            <Enumeration:0x2b25bc070 name="ALL NAMES" />
            <Enumeration:0x2b25bc0a0 name="IUPAC NAME" />
            <Enumeration:0x2b25bc0d0 name="CITATIONS" />
            <Enumeration:0x2b25bc100 name="REGISTRY NUMBERS" />
            <Enumeration:0x2b25bc130 name="MANUAL XREFS" />
            <Enumeration:0x2b25bc160 name="AUTOMATIC XREFS" />
            <Enumeration:0x2b25bc190 name="FORMULA" />
            <Enumeration:0x2b25bc1c0 name="MASS" />
            <Enumeration:0x2b25bc1f0 name="MONOISOTOPIC MASS" />
            <Enumeration:0x2b25bc220 name="CHARGE" />
            <Enumeration:0x2b25bc250 name="INCHI/INCHI KEY" />
            <Enumeration:0x2b25bc280 name="SMILES" />
            <Enumeration:0x2b25bc2b0 name="SPECIES" />
         </Restriction>
      </Simple>
      <Simple:0x2b25b5eb0 name="StructureSearchCategory">
         <Restriction:0x2b25bc2e0 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x2b25bc040 name="IDENTITY" />
            <Enumeration:0x2b25bc370 name="SUBSTRUCTURE" />
            <Enumeration:0x2b25bc3a0 name="SIMILARITY" />
         </Restriction>
      </Simple>
      <Simple:0x2b25b5f40 name="StructureType">
         <Restriction:0x2b25bc310 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x2b25bc340 name="MOLFILE" />
            <Enumeration:0x2b25bc460 name="CML" />
            <Enumeration:0x2b25bc4c0 name="SMILES" />
         </Restriction>
      </Simple>
      <Simple:0x2b25bc3d0 name="RelationshipType">
         <Restriction:0x2b25bc400 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x2b25bc490 name="is a" />
            <Enumeration:0x2b25bc580 name="has part" />
            <Enumeration:0x2b25bc5b0 name="is conjugate base of" />
            <Enumeration:0x2b25bc5e0 name="is conjugate acid of" />
            <Enumeration:0x2b25bc610 name="is tautomer of" />
            <Enumeration:0x2b25bc640 name="is enantiomer of" />
            <Enumeration:0x2b25bc670 name="has functional parent" />
            <Enumeration:0x2b25bc6a0 name="has parent hydride" />
            <Enumeration:0x2b25bc6d0 name="is substituent group from" />
            <Enumeration:0x2b25bc700 name="has role" />
         </Restriction>
      </Simple>
      <Simple:0x2b25bc4f0 name="StarsCategory">
         <Restriction:0x2b25bc520 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x2b25bc550 name="ALL" />
            <Enumeration:0x2b25bc7c0 name="TWO ONLY" />
            <Enumeration:0x2b25bc7f0 name="THREE ONLY" />
         </Restriction>
      </Simple>
      <Complex:0x2b25bc730 name="getLiteEntity">
         <Sequence:0x2b25bc760>
            <Element:0x2b25bc790 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25bc8b0 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25bc8e0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25bc910 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bc820 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bc940 name="getCompleteEntityResponse">
         <Sequence:0x2b25bc850>
            <Element:0x2b25bc970 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bc880 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bca00 name="getCompleteEntity">
         <Sequence:0x2b25bc9a0>
            <Element:0x2b25bca30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bc9d0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bcac0 name="getCompleteEntityByListResponse">
         <Sequence:0x2b25bca60>
            <Element:0x2b25bcaf0 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bca90 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bcb80 name="getCompleteEntityByList">
         <Sequence:0x2b25bcb20>
            <Element:0x2b25bcbb0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bcb50 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bcc40 name="getOntologyParentsResponse">
         <Sequence:0x2b25bcbe0>
            <Element:0x2b25bcc70 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bcc10 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bcd00 name="getOntologyParents">
         <Sequence:0x2b25bcca0>
            <Element:0x2b25bcd30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bccd0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bcdc0 name="getOntologyChildrenResponse">
         <Sequence:0x2b25bcd60>
            <Element:0x2b25bcdf0 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bcd90 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bce80 name="getOntologyChildren">
         <Sequence:0x2b25bce20>
            <Element:0x2b25bceb0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bce50 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bcf40 name="getAllOntologyChildrenInPathResponse">
         <Sequence:0x2b25bcee0>
            <Element:0x2b25bcf70 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bcf10 name="getAllOntologyChildrenInPathResponse" type="('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25bcfd0 name="getAllOntologyChildrenInPath">
         <Sequence:0x2b25c6040>
            <Element:0x2b25c6070 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25c6100 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25c6130 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b25bcfa0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25c6160 name="getStructureSearchResponse">
         <Sequence:0x2b25c60a0>
            <Element:0x2b25c6190 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25c60d0 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25c6220 name="getStructureSearch">
         <Sequence:0x2b25c61c0>
            <Element:0x2b25c6250 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25c62e0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25c6310 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b25c6340 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25c6370 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b25c61f0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25c63a0 name="getUpdatedPolymer">
         <Sequence:0x2b25c6280>
            <Element:0x2b25c63d0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25c6460 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b25c62b0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25c6490 name="getUpdatedPolymerResponse">
         <Sequence:0x2b25c6400>
            <Element:0x2b25c64c0 name="return" type="('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b25c6430 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Element:0x2b25c6550 name="ChebiWebServiceFault" type="('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b25c6520 name="ChebiWebServiceFault">
         <Sequence:0x2b25c64f0>
            <Element:0x2b25c65b0 name="faultInfo" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b25c6640 name="message" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>

DEBUG:suds.xsd.schema:MERGED:
Schema:0x2b25a9d90
(raw)
   <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://www.ebi.ac.uk/webservices/chebi">
      <xsd:complexType name="LiteEntity">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="chebiAsciiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="searchScore" type="xsd:float"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LiteEntityList">
         <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:LiteEntity"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OntologyDataItemList">
         <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:OntologyDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CommentDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="text" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="date" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="data" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="source" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StructureDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="structure" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dimension" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="defaultStructure" type="xsd:boolean"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OntologyDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="cyclicRelationship" type="xsd:boolean"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyElement" type="tns:OntologyDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CompoundOriginDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="speciesText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="speciesAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="componentText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="componentAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="strainText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="strainAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="SourceType" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="SourceAccession" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Entity">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiAsciiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="definition" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="smiles" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="inchi" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="inchiKey" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="charge" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mass" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monoisotopicMass" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="SecondaryChEBIIds" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Synonyms" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="IupacNames" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Formulae" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="RegistryNumbers" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Citations" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChemicalStructures" type="tns:StructureDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="DatabaseLinks" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyParents" type="tns:OntologyDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyChildren" type="tns:OntologyDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="GeneralComments" type="tns:CommentDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="CompoundOrigins" type="tns:CompoundOriginDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UpdatedPolymer">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="updatedStructure" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="globalFormula" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="globalCharge" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <complexType name="getLiteEntityResponse">
         <sequence>
            <element name="return" type="tns:LiteEntityList"/>
         </sequence>
      </complexType>
      <element name="getLiteEntityResponse" type="tns:getLiteEntityResponse"/>
      <simpleType name="SearchCategory">
         <restriction base="xsd:string">
            <enumeration value="ALL"/>
            <enumeration value="CHEBI ID"/>
            <enumeration value="CHEBI NAME"/>
            <enumeration value="DEFINITION"/>
            <enumeration value="ALL NAMES"/>
            <enumeration value="IUPAC NAME"/>
            <enumeration value="CITATIONS"/>
            <enumeration value="REGISTRY NUMBERS"/>
            <enumeration value="MANUAL XREFS"/>
            <enumeration value="AUTOMATIC XREFS"/>
            <enumeration value="FORMULA"/>
            <enumeration value="MASS"/>
            <enumeration value="MONOISOTOPIC MASS"/>
            <enumeration value="CHARGE"/>
            <enumeration value="INCHI/INCHI KEY"/>
            <enumeration value="SMILES"/>
            <enumeration value="SPECIES"/>
         </restriction>
      </simpleType>
      <simpleType name="StructureSearchCategory">
         <restriction base="xsd:string">
            <enumeration value="IDENTITY"/>
            <enumeration value="SUBSTRUCTURE"/>
            <enumeration value="SIMILARITY"/>
         </restriction>
      </simpleType>
      <simpleType name="StructureType">
         <restriction base="xsd:string">
            <enumeration value="MOLFILE"/>
            <enumeration value="CML"/>
            <enumeration value="SMILES"/>
         </restriction>
      </simpleType>
      <simpleType name="RelationshipType">
         <restriction base="xsd:string">
            <enumeration value="is a"/>
            <enumeration value="has part"/>
            <enumeration value="is conjugate base of"/>
            <enumeration value="is conjugate acid of"/>
            <enumeration value="is tautomer of"/>
            <enumeration value="is enantiomer of"/>
            <enumeration value="has functional parent"/>
            <enumeration value="has parent hydride"/>
            <enumeration value="is substituent group from"/>
            <enumeration value="has role"/>
         </restriction>
      </simpleType>
      <simpleType name="StarsCategory">
         <restriction base="xsd:string">
            <enumeration value="ALL"/>
            <enumeration value="TWO ONLY"/>
            <enumeration value="THREE ONLY"/>
         </restriction>
      </simpleType>
      <complexType name="getLiteEntity">
         <sequence>
            <element name="search" type="xsd:string"/>
            <element name="searchCategory" type="tns:SearchCategory"/>
            <element name="maximumResults" type="xsd:int"/>
            <element name="stars" type="tns:StarsCategory"/>
         </sequence>
      </complexType>
      <element name="getLiteEntity" type="tns:getLiteEntity"/>
      <complexType name="getCompleteEntityResponse">
         <sequence>
            <element name="return" type="tns:Entity"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityResponse" type="tns:getCompleteEntityResponse"/>
      <complexType name="getCompleteEntity">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntity" type="tns:getCompleteEntity"/>
      <complexType name="getCompleteEntityByListResponse">
         <sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:Entity"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityByListResponse" type="tns:getCompleteEntityByListResponse"/>
      <complexType name="getCompleteEntityByList">
         <sequence>
            <xsd:element maxOccurs="50" minOccurs="0" name="ListOfChEBIIds" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityByList" type="tns:getCompleteEntityByList"/>
      <complexType name="getOntologyParentsResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getOntologyParentsResponse" type="tns:getOntologyParentsResponse"/>
      <complexType name="getOntologyParents">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getOntologyParents" type="tns:getOntologyParents"/>
      <complexType name="getOntologyChildrenResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getOntologyChildrenResponse" type="tns:getOntologyChildrenResponse"/>
      <complexType name="getOntologyChildren">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getOntologyChildren" type="tns:getOntologyChildren"/>
      <complexType name="getAllOntologyChildrenInPathResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getAllOntologyChildrenInPathResponse" type="tns:getAllOntologyChildrenInPathResponse"/>
      <complexType name="getAllOntologyChildrenInPath">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
            <element name="relationshipType" type="tns:RelationshipType"/>
            <element name="structureOnly" type="xsd:boolean"/>
         </sequence>
      </complexType>
      <element name="getAllOntologyChildrenInPath" type="tns:getAllOntologyChildrenInPath"/>
      <complexType name="getStructureSearchResponse">
         <sequence>
            <element name="return" type="tns:LiteEntityList"/>
         </sequence>
      </complexType>
      <element name="getStructureSearchResponse" type="tns:getLiteEntityResponse"/>
      <complexType name="getStructureSearch">
         <sequence>
            <element name="structure" type="xsd:string"/>
            <element name="type" type="tns:StructureType"/>
            <element name="structureSearchCategory" type="tns:StructureSearchCategory"/>
            <element name="totalResults" type="xsd:int"/>
            <element name="tanimotoCutoff" type="xsd:float"/>
         </sequence>
      </complexType>
      <element name="getStructureSearch" type="tns:getStructureSearch"/>
      <complexType name="getUpdatedPolymer">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="1" name="polymerisationIndex" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getUpdatedPolymer" type="tns:getUpdatedPolymer"/>
      <complexType name="getUpdatedPolymerResponse">
         <sequence>
            <element name="return" type="tns:UpdatedPolymer"/>
         </sequence>
      </complexType>
      <element name="getUpdatedPolymerResponse" type="tns:getUpdatedPolymerResponse"/>
      <element name="ChebiWebServiceFault" type="tns:ChebiWebServiceFault"/>
      <complexType name="ChebiWebServiceFault">
         <sequence>
            <element name="faultInfo" type="xsd:string"/>
            <element name="message" type="xsd:string"/>
         </sequence>
      </complexType>
   </xsd:schema>
(model)
   <Complex:0x2b25a9e80 name="LiteEntity">
      <Sequence:0x2b25a9ee0>
         <Element:0x2b25a9f40 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25a9fd0 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25a9fa0 name="searchScore" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5070 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25a9f10 name="LiteEntityList">
      <Sequence:0x2b25b50a0>
         <Element:0x2b25b5040 name="ListElement" type="('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25a9f70 name="OntologyDataItemList">
      <Sequence:0x2b25b50d0>
         <Element:0x2b25b5100 name="ListElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25b5130 name="CommentDataItem">
      <Sequence:0x2b25b5160>
         <Element:0x2b25b5190 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5250 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25b51c0 name="DataItem">
      <Sequence:0x2b25b51f0>
         <Element:0x2b25b5220 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5310 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5340 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5370 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25b5280 name="StructureDataItem">
      <Sequence:0x2b25b52b0>
         <Element:0x2b25b52e0 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5430 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5460 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5490 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b54c0 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25b53a0 name="OntologyDataItem">
      <Sequence:0x2b25b53d0>
         <Element:0x2b25b5400 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b55b0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b55e0 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5610 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5640 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5670 name="OntologyElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25b54f0 name="CompoundOriginDataItem">
      <Sequence:0x2b25b5520>
         <Element:0x2b25b5550 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5730 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5760 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5790 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b57c0 name="strainText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b57f0 name="strainAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5820 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5850 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25b56a0 name="Entity">
      <Sequence:0x2b25b56d0>
         <Element:0x2b25b5700 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5910 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5940 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5970 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b59a0 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b59d0 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5a00 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5a30 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5a60 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5a90 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5ac0 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5af0 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5b20 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5b50 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5b80 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5bb0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5be0 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5c10 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5c40 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5c70 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5ca0 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5cd0 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25b5d00 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25b5880 name="UpdatedPolymer">
      <Sequence:0x2b25b58b0>
         <Element:0x2b25b58e0 name="updatedStructure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5dc0 name="globalFormula" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5df0 name="globalCharge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25b5e20 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x2b25b5d30 name="getLiteEntityResponse">
      <Sequence:0x2b25b5d60>
         <Element:0x2b25b5d90 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25b5e50 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Simple:0x2b25b5ee0 name="SearchCategory">
      <Restriction:0x2b25b5e80 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x2b25b5f10 name="ALL" />
         <Enumeration:0x2b25b5fa0 name="CHEBI ID" />
         <Enumeration:0x2b25b5fd0 name="CHEBI NAME" />
         <Enumeration:0x2b25b5f70 name="DEFINITION" />
         <Enumeration:0x2b25bc070 name="ALL NAMES" />
         <Enumeration:0x2b25bc0a0 name="IUPAC NAME" />
         <Enumeration:0x2b25bc0d0 name="CITATIONS" />
         <Enumeration:0x2b25bc100 name="REGISTRY NUMBERS" />
         <Enumeration:0x2b25bc130 name="MANUAL XREFS" />
         <Enumeration:0x2b25bc160 name="AUTOMATIC XREFS" />
         <Enumeration:0x2b25bc190 name="FORMULA" />
         <Enumeration:0x2b25bc1c0 name="MASS" />
         <Enumeration:0x2b25bc1f0 name="MONOISOTOPIC MASS" />
         <Enumeration:0x2b25bc220 name="CHARGE" />
         <Enumeration:0x2b25bc250 name="INCHI/INCHI KEY" />
         <Enumeration:0x2b25bc280 name="SMILES" />
         <Enumeration:0x2b25bc2b0 name="SPECIES" />
      </Restriction>
   </Simple>
   <Simple:0x2b25b5eb0 name="StructureSearchCategory">
      <Restriction:0x2b25bc2e0 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x2b25bc040 name="IDENTITY" />
         <Enumeration:0x2b25bc370 name="SUBSTRUCTURE" />
         <Enumeration:0x2b25bc3a0 name="SIMILARITY" />
      </Restriction>
   </Simple>
   <Simple:0x2b25b5f40 name="StructureType">
      <Restriction:0x2b25bc310 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x2b25bc340 name="MOLFILE" />
         <Enumeration:0x2b25bc460 name="CML" />
         <Enumeration:0x2b25bc4c0 name="SMILES" />
      </Restriction>
   </Simple>
   <Simple:0x2b25bc3d0 name="RelationshipType">
      <Restriction:0x2b25bc400 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x2b25bc490 name="is a" />
         <Enumeration:0x2b25bc580 name="has part" />
         <Enumeration:0x2b25bc5b0 name="is conjugate base of" />
         <Enumeration:0x2b25bc5e0 name="is conjugate acid of" />
         <Enumeration:0x2b25bc610 name="is tautomer of" />
         <Enumeration:0x2b25bc640 name="is enantiomer of" />
         <Enumeration:0x2b25bc670 name="has functional parent" />
         <Enumeration:0x2b25bc6a0 name="has parent hydride" />
         <Enumeration:0x2b25bc6d0 name="is substituent group from" />
         <Enumeration:0x2b25bc700 name="has role" />
      </Restriction>
   </Simple>
   <Simple:0x2b25bc4f0 name="StarsCategory">
      <Restriction:0x2b25bc520 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x2b25bc550 name="ALL" />
         <Enumeration:0x2b25bc7c0 name="TWO ONLY" />
         <Enumeration:0x2b25bc7f0 name="THREE ONLY" />
      </Restriction>
   </Simple>
   <Complex:0x2b25bc730 name="getLiteEntity">
      <Sequence:0x2b25bc760>
         <Element:0x2b25bc790 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25bc8b0 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25bc8e0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25bc910 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bc820 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bc940 name="getCompleteEntityResponse">
      <Sequence:0x2b25bc850>
         <Element:0x2b25bc970 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bc880 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bca00 name="getCompleteEntity">
      <Sequence:0x2b25bc9a0>
         <Element:0x2b25bca30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bc9d0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bcac0 name="getCompleteEntityByListResponse">
      <Sequence:0x2b25bca60>
         <Element:0x2b25bcaf0 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bca90 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bcb80 name="getCompleteEntityByList">
      <Sequence:0x2b25bcb20>
         <Element:0x2b25bcbb0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bcb50 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bcc40 name="getOntologyParentsResponse">
      <Sequence:0x2b25bcbe0>
         <Element:0x2b25bcc70 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bcc10 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bcd00 name="getOntologyParents">
      <Sequence:0x2b25bcca0>
         <Element:0x2b25bcd30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bccd0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bcdc0 name="getOntologyChildrenResponse">
      <Sequence:0x2b25bcd60>
         <Element:0x2b25bcdf0 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bcd90 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bce80 name="getOntologyChildren">
      <Sequence:0x2b25bce20>
         <Element:0x2b25bceb0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bce50 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bcf40 name="getAllOntologyChildrenInPathResponse">
      <Sequence:0x2b25bcee0>
         <Element:0x2b25bcf70 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bcf10 name="getAllOntologyChildrenInPathResponse" type="('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25bcfd0 name="getAllOntologyChildrenInPath">
      <Sequence:0x2b25c6040>
         <Element:0x2b25c6070 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25c6100 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25c6130 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b25bcfa0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25c6160 name="getStructureSearchResponse">
      <Sequence:0x2b25c60a0>
         <Element:0x2b25c6190 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25c60d0 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25c6220 name="getStructureSearch">
      <Sequence:0x2b25c61c0>
         <Element:0x2b25c6250 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25c62e0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25c6310 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b25c6340 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25c6370 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b25c61f0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25c63a0 name="getUpdatedPolymer">
      <Sequence:0x2b25c6280>
         <Element:0x2b25c63d0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25c6460 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b25c62b0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25c6490 name="getUpdatedPolymerResponse">
      <Sequence:0x2b25c6400>
         <Element:0x2b25c64c0 name="return" type="('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b25c6430 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Element:0x2b25c6550 name="ChebiWebServiceFault" type="('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b25c6520 name="ChebiWebServiceFault">
      <Sequence:0x2b25c64f0>
         <Element:0x2b25c65b0 name="faultInfo" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b25c6640 name="message" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>

DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bc9d0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc9d0, resolving: ('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6700"
   ref[] = 
      "getCompleteEntity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bc9d0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bca00 name="getCompleteEntity" />
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bc880 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc880, resolving: ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c66a0"
   ref[] = 
      "getCompleteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bc880 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bc940 name="getCompleteEntityResponse" />
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bcb50 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bcb50, resolving: ('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6700"
   ref[] = 
      "getCompleteEntityByList",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bcb50 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bcb80 name="getCompleteEntityByList" />
DEBUG:suds.xsd.query:('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bca90 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bca90, resolving: ('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c66a0"
   ref[] = 
      "getCompleteEntityByListResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bca90 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bcac0 name="getCompleteEntityByListResponse" />
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bc820 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc820, resolving: ('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6700"
   ref[] = 
      "getLiteEntity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bc820 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bc730 name="getLiteEntity" />
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25b5e50 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5e50, resolving: ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c66a0"
   ref[] = 
      "getLiteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5e50 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b5d30 name="getLiteEntityResponse" />
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bccd0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bccd0, resolving: ('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6700"
   ref[] = 
      "getOntologyParents",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bccd0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bcd00 name="getOntologyParents" />
DEBUG:suds.xsd.query:('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bcc10 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bcc10, resolving: ('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c66a0"
   ref[] = 
      "getOntologyParentsResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bcc10 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bcc40 name="getOntologyParentsResponse" />
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bce50 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bce50, resolving: ('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6700"
   ref[] = 
      "getOntologyChildren",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bce50 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bce80 name="getOntologyChildren" />
DEBUG:suds.xsd.query:('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bcd90 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bcd90, resolving: ('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c66a0"
   ref[] = 
      "getOntologyChildrenResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bcd90 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bcdc0 name="getOntologyChildrenResponse" />
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bcfa0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bcfa0, resolving: ('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6700"
   ref[] = 
      "getAllOntologyChildrenInPath",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bcfa0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bcfd0 name="getAllOntologyChildrenInPath" />
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25b5e50 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25c61f0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25c61f0, resolving: ('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6700"
   ref[] = 
      "getStructureSearch",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25c61f0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25c6220 name="getStructureSearch" />
DEBUG:suds.xsd.query:('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25c60d0 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25c60d0, resolving: ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c66a0"
   ref[] = 
      "getLiteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25c60d0 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b5d30 name="getLiteEntityResponse" />
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25c62b0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25c62b0, resolving: ('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6700"
   ref[] = 
      "getUpdatedPolymer",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25c62b0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25c63a0 name="getUpdatedPolymer" />
DEBUG:suds.xsd.query:('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25c6430 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6430, resolving: ('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c66a0"
   ref[] = 
      "getUpdatedPolymerResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25c6430 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25c6490 name="getUpdatedPolymerResponse" />
DEBUG:suds.wsdl:WSDL at 'http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl' loaded:
(Definitions){
   _WObject__resolved = False
   id = "Definitions:0x2b24e7d60"
   options = Definitions:
	cache: classes=(<class 'suds.cache.Cache'>,), default=<suds.cache.NoCache object at 0x28ff16640>
	documentStore: classes=(<class 'suds.store.DocumentStore'>,), default=<suds.store.DocumentStore object at 0x2b24931f0>
	extraArgumentErrors: classes=(<class 'bool'>,), default=True
	allowUnknownMessageParts: classes=(<class 'bool'>,), default=False
	faults: classes=(<class 'bool'>,), default=True
	transport: classes=(<class 'suds.transport.Transport'>,), default=None
	service: classes=(<class 'int'>, <class 'str'>), default=None
	port: classes=(<class 'int'>, <class 'str'>), default=None
	location: classes=(<class 'str'>,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(<class 'suds.wsse.Security'>,), default=None
	doctor: classes=(<class 'suds.xsd.doctor.Doctor'>,), default=None
	xstq: classes=(<class 'bool'>,), default=True
	prefixes: classes=(<class 'bool'>,), default=True
	retxml: classes=(<class 'bool'>,), default=False
	prettyxml: classes=(<class 'bool'>,), default=False
	autoblend: classes=(<class 'bool'>,), default=False
	cachingpolicy: classes=(<class 'int'>,), default=0
	plugins: classes=(<class 'list'>, <class 'tuple'>), default=[]
	nosend: classes=(<class 'bool'>,), default=False
	unwrap: classes=(<class 'bool'>,), default=True
	sortNamespaces: classes=(<class 'bool'>,), default=True
Content:
	('cache', <suds.cache.ObjectCache object at 0x2b24e7af0>)
	('documentStore', <suds.store.DocumentStore object at 0x2b24931f0>)
	('extraArgumentErrors', True)
	('allowUnknownMessageParts', False)
	('faults', True)
	('transport', <suds.transport.https.HttpAuthenticated object at 0x2b24e73d0>)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
	('sortNamespaces', True)
Linked:
Definitions:
	proxy: classes=(<class 'dict'>,), default={}
	timeout: classes=(<class 'int'>, <class 'float'>), default=90
	headers: classes=(<class 'dict'>,), default={}
	username: classes=(<class 'str'>,), default=None
	password: classes=(<class 'str'>,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(<class 'suds.cache.Cache'>,), default=<suds.cache.NoCache object at 0x28ff16640>
	documentStore: classes=(<class 'suds.store.DocumentStore'>,), default=<suds.store.DocumentStore object at 0x2b24931f0>
	extraArgumentErrors: classes=(<class 'bool'>,), default=True
	allowUnknownMessageParts: classes=(<class 'bool'>,), default=False
	faults: classes=(<class 'bool'>,), default=True
	transport: classes=(<class 'suds.transport.Transport'>,), default=None
	service: classes=(<class 'int'>, <class 'str'>), default=None
	port: classes=(<class 'int'>, <class 'str'>), default=None
	location: classes=(<class 'str'>,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(<class 'suds.wsse.Security'>,), default=None
	doctor: classes=(<class 'suds.xsd.doctor.Doctor'>,), default=None
	xstq: classes=(<class 'bool'>,), default=True
	prefixes: classes=(<class 'bool'>,), default=True
	retxml: classes=(<class 'bool'>,), default=False
	prettyxml: classes=(<class 'bool'>,), default=False
	autoblend: classes=(<class 'bool'>,), default=False
	cachingpolicy: classes=(<class 'int'>,), default=0
	plugins: classes=(<class 'list'>, <class 'tuple'>), default=[]
	nosend: classes=(<class 'bool'>,), default=False
	unwrap: classes=(<class 'bool'>,), default=True
	sortNamespaces: classes=(<class 'bool'>,), default=True
Content:
	('cache', <suds.cache.ObjectCache object at 0x2b24e7af0>)
	('documentStore', <suds.store.DocumentStore object at 0x2b24931f0>)
	('extraArgumentErrors', True)
	('allowUnknownMessageParts', False)
	('faults', True)
	('transport', <suds.transport.https.HttpAuthenticated object at 0x2b24e73d0>)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
	('sortNamespaces', True)
   url = "http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl"
   tns[] = 
      "tns",
      "https://www.ebi.ac.uk/webservices/chebi",
   types[] = 
      (Types){
         _WObject__resolved = True
         definitions = (Definitions)...
      },
   schema = "<Schema:0x2b25a9d90 tns="https://www.ebi.ac.uk/webservices/chebi"/>"
   imports[] = <empty>
   messages = 
      {
         (getLiteEntity, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getLiteEntity"
               qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getLiteEntity"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getLiteEntityResponse"
               qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getLiteEntityResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntity"
               qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getCompleteEntity"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityResponse"
               qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getCompleteEntityResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityByList"
               qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityByListResponse"
               qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyParents, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyParents"
               qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getOntologyParents"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyParentsResponse"
               qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getOntologyParentsResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyChildren"
               qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getOntologyChildren"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyChildrenResponse"
               qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getAllOntologyChildrenInPath"
               qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getAllOntologyChildrenInPathResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getAllOntologyChildrenInPathResponse"
               qname = "(getAllOntologyChildrenInPathResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getAllOntologyChildrenInPathResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getStructureSearch, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getStructureSearch"
               qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getStructureSearch"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getStructureSearchResponse"
               qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getStructureSearchResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getUpdatedPolymer"
               qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getUpdatedPolymerResponse"
               qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "chebiWebServiceFault"
               qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                     _WObject__resolved = False
                     name = "ChebiWebServiceFault"
                     qname[] = 
                        "ChebiWebServiceFault",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (PortType){
               _WObject__resolved = True
               name = "ChebiWebServicePortType"
               qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
               operations = 
                  {
                     getLiteEntity = 
                        (Operation){
                           name = "getLiteEntity"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntity"
                                 qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getLiteEntity"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntityResponse"
                                 qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getLiteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getCompleteEntity = 
                        (Operation){
                           name = "getCompleteEntity"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntity"
                                 qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getCompleteEntity"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityResponse"
                                 qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getCompleteEntityByList = 
                        (Operation){
                           name = "getCompleteEntityByList"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityByList"
                                 qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityByListResponse"
                                 qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getOntologyParents = 
                        (Operation){
                           name = "getOntologyParents"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyParents"
                                 qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getOntologyParents"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyParentsResponse"
                                 qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getOntologyChildren = 
                        (Operation){
                           name = "getOntologyChildren"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyChildren"
                                 qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getOntologyChildren"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyChildrenResponse"
                                 qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getAllOntologyChildrenInPath = 
                        (Operation){
                           name = "getAllOntologyChildrenInPath"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getAllOntologyChildrenInPath"
                                 qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntityResponse"
                                 qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getLiteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getStructureSearch = 
                        (Operation){
                           name = "getStructureSearch"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getStructureSearch"
                                 qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getStructureSearch"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getStructureSearchResponse"
                                 qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getStructureSearchResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getUpdatedPolymer = 
                        (Operation){
                           name = "getUpdatedPolymer"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getUpdatedPolymer"
                                 qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getUpdatedPolymerResponse"
                                 qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                  }
            }
      }
   bindings = 
      {
         (ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Binding){
               _WObject__resolved = True
               name = "ChebiWebServiceBinding"
               qname = "(ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi)"
               operations = 
                  {
                     getCompleteEntity = 
                        (Operation){
                           name = "getCompleteEntity"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntityByList = 
                        (Operation){
                           name = "getCompleteEntityByList"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getLiteEntity = 
                        (Operation){
                           name = "getLiteEntity"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyParents = 
                        (Operation){
                           name = "getOntologyParents"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyChildren = 
                        (Operation){
                           name = "getOntologyChildren"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getAllOntologyChildrenInPath = 
                        (Operation){
                           name = "getAllOntologyChildrenInPath"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getStructureSearch = 
                        (Operation){
                           name = "getStructureSearch"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getUpdatedPolymer = 
                        (Operation){
                           name = "getUpdatedPolymer"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                  }
               type = 
                  (PortType){
                     _WObject__resolved = True
                     name = "ChebiWebServicePortType"
                     qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
                     operations = 
                        {
                           getLiteEntity = 
                              (Operation){
                                 name = "getLiteEntity"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntity"
                                       qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getLiteEntity"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntityResponse"
                                       qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getLiteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getCompleteEntity = 
                              (Operation){
                                 name = "getCompleteEntity"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntity"
                                       qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getCompleteEntity"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityResponse"
                                       qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getCompleteEntityByList = 
                              (Operation){
                                 name = "getCompleteEntityByList"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityByList"
                                       qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityByListResponse"
                                       qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getOntologyParents = 
                              (Operation){
                                 name = "getOntologyParents"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyParents"
                                       qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getOntologyParents"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyParentsResponse"
                                       qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getOntologyChildren = 
                              (Operation){
                                 name = "getOntologyChildren"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyChildren"
                                       qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getOntologyChildren"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyChildrenResponse"
                                       qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getAllOntologyChildrenInPath = 
                              (Operation){
                                 name = "getAllOntologyChildrenInPath"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getAllOntologyChildrenInPath"
                                       qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntityResponse"
                                       qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getLiteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getStructureSearch = 
                              (Operation){
                                 name = "getStructureSearch"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getStructureSearch"
                                       qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getStructureSearch"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getStructureSearchResponse"
                                       qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getStructureSearchResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getUpdatedPolymer = 
                              (Operation){
                                 name = "getUpdatedPolymer"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getUpdatedPolymer"
                                       qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getUpdatedPolymerResponse"
                                       qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         _WObject__resolved = True
         name = "ChebiWebServiceService"
         qname = "(ChebiWebServiceService, https://www.ebi.ac.uk/webservices/chebi)"
         ports[] = 
            (Port){
               _WObject__resolved = False
               name = "ChebiWebServicePort"
               qname = "(ChebiWebServicePort, https://www.ebi.ac.uk/webservices/chebi)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     _WObject__resolved = True
                     name = "ChebiWebServiceBinding"
                     qname = "(ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi)"
                     operations = 
                        {
                           getCompleteEntity = 
                              (Operation){
                                 name = "getCompleteEntity"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getCompleteEntityByList = 
                              (Operation){
                                 name = "getCompleteEntityByList"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getLiteEntity = 
                              (Operation){
                                 name = "getLiteEntity"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getLiteEntity"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getOntologyParents = 
                              (Operation){
                                 name = "getOntologyParents"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getOntologyParents"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getOntologyChildren = 
                              (Operation){
                                 name = "getOntologyChildren"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getAllOntologyChildrenInPath = 
                              (Operation){
                                 name = "getAllOntologyChildrenInPath"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getStructureSearch = 
                              (Operation){
                                 name = "getStructureSearch"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getStructureSearch"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getUpdatedPolymer = 
                              (Operation){
                                 name = "getUpdatedPolymer"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           _WObject__resolved = True
                           name = "ChebiWebServicePortType"
                           qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
                           operations = 
                              {
                                 getLiteEntity = 
                                    (Operation){
                                       name = "getLiteEntity"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntity"
                                             qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntityResponse"
                                             qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getCompleteEntity = 
                                    (Operation){
                                       name = "getCompleteEntity"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntity"
                                             qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityResponse"
                                             qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getCompleteEntityByList = 
                                    (Operation){
                                       name = "getCompleteEntityByList"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityByList"
                                             qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityByListResponse"
                                             qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getOntologyParents = 
                                    (Operation){
                                       name = "getOntologyParents"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyParents"
                                             qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyParentsResponse"
                                             qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getOntologyChildren = 
                                    (Operation){
                                       name = "getOntologyChildren"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyChildren"
                                             qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyChildrenResponse"
                                             qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getAllOntologyChildrenInPath = 
                                    (Operation){
                                       name = "getAllOntologyChildrenInPath"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getAllOntologyChildrenInPath"
                                             qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntityResponse"
                                             qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getStructureSearch = 
                                    (Operation){
                                       name = "getStructureSearch"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getStructureSearch"
                                             qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getStructureSearchResponse"
                                             qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getUpdatedPolymer = 
                                    (Operation){
                                       name = "getUpdatedPolymer"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getUpdatedPolymer"
                                             qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getUpdatedPolymerResponse"
                                             qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
               methods = 
                  {
                     getLiteEntity = 
                        (Method){
                           name = "getLiteEntity"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x2b25a9eb0>
                                 output = <suds.bindings.document.Document object at 0x2b25a9eb0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntity = 
                        (Method){
                           name = "getCompleteEntity"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x2b25a9eb0>
                                 output = <suds.bindings.document.Document object at 0x2b25a9eb0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntityByList = 
                        (Method){
                           name = "getCompleteEntityByList"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x2b25a9eb0>
                                 output = <suds.bindings.document.Document object at 0x2b25a9eb0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyParents = 
                        (Method){
                           name = "getOntologyParents"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x2b25a9eb0>
                                 output = <suds.bindings.document.Document object at 0x2b25a9eb0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyChildren = 
                        (Method){
                           name = "getOntologyChildren"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x2b25a9eb0>
                                 output = <suds.bindings.document.Document object at 0x2b25a9eb0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getAllOntologyChildrenInPath = 
                        (Method){
                           name = "getAllOntologyChildrenInPath"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x2b25a9eb0>
                                 output = <suds.bindings.document.Document object at 0x2b25a9eb0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getStructureSearch = 
                        (Method){
                           name = "getStructureSearch"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x2b25a9eb0>
                                 output = <suds.bindings.document.Document object at 0x2b25a9eb0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getUpdatedPolymer = 
                        (Method){
                           name = "getUpdatedPolymer"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x2b25a9eb0>
                                 output = <suds.bindings.document.Document object at 0x2b25a9eb0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                  }
            },
      },
 }
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bc9d0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getCompleteEntity' created: started: 1686224053 (running)
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bcb50 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getCompleteEntityByList' created: started: 1686224053 (running)
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bc820 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getLiteEntity' created: started: 1686224053 (running)
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bccd0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getOntologyParents' created: started: 1686224053 (running)
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bce50 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getOntologyChildren' created: started: 1686224053 (running)
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bcfa0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getAllOntologyChildrenInPath' created: started: 1686224053 (running)
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25c61f0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getStructureSearch' created: started: 1686224053 (running)
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25c62b0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getUpdatedPolymer' created: started: 1686224053 (running)
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6070, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25c6070 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6100, resolving: ('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "RelationshipType",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25c6100 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x2b25bc3d0 name="RelationshipType" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6130, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25c6130 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (boolean)
DEBUG:suds.xsd.sxbasic:Element:0x2b25bca30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25bca30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b25bcbb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25bcbb0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc790, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25bc790 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc8b0, resolving: ('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "SearchCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bc8b0 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x2b25b5ee0 name="SearchCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc8e0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25bc8e0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (int)
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc910, resolving: ('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "StarsCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bc910 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x2b25bc4f0 name="StarsCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bceb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25bceb0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b25bcd30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25bcd30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6250, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25c6250 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b25c62e0, resolving: ('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "StructureType",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25c62e0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureType', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x2b25b5f40 name="StructureType" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6310, resolving: ('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "StructureSearchCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25c6310 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x2b25b5eb0 name="StructureSearchCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6340, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25c6340 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (int)
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6370, resolving: ('float', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "float",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25c6370 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (float)
DEBUG:suds.xsd.sxbasic:Element:0x2b25c63d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25c63d0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b25c6460, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25c6880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25c6460 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25c6880, found builtin (string)
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bc9d0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bc9d0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.mx.core:processing:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x2b25bca30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x2b25e1550 />
 }
DEBUG:suds.mx.core:appending parent:
<?xml version="1.0" encoding="UTF-8"?>
content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x2b25bca30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x2b25e1550 />
 }
DEBUG:suds.mx.literal:starting content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x2b25bca30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x2b25e1550 />
 }
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25f0490>)
<suds.resolver.Frame object at 0x2b25f0490>
DEBUG:suds.mx.literal:created - node:
<tns:chebiId xmlns:tns="https://www.ebi.ac.uk/webservices/chebi"/>
DEBUG:suds.mx.literal:ending content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x2b25bca30 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x2b25e1550 />
   ancestry[] = <empty>
 }
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25f0490>)

DEBUG:suds.metrics:message for 'getCompleteEntity' created: 0 (ms)
DEBUG:suds.client:sending to (http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice)
message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="https://www.ebi.ac.uk/webservices/chebi">
   <SOAP-ENV:Header/>
   <ns0:Body>
      <ns1:getCompleteEntity>
         <ns1:chebiId>CHEBI:27732</ns1:chebiId>
      </ns1:getCompleteEntity>
   </ns0:Body>
</SOAP-ENV:Envelope>
DEBUG:suds.client:headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'""'}
DEBUG:suds.transport.http:sending:
URL: http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'""', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'""'}
MESSAGE:
<?xml version="1.0" encoding="UTF-8"?><SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="https://www.ebi.ac.uk/webservices/chebi"><SOAP-ENV:Header/><ns0:Body><ns1:getCompleteEntity><ns1:chebiId>CHEBI:27732</ns1:chebiId></ns1:getCompleteEntity></ns0:Body></SOAP-ENV:Envelope>
DEBUG:suds.transport.http:received:
CODE: HTTPStatus.OK
HEADERS: Server: Apache-Coyote/1.1
Content-Type: text/xml;charset=utf-8
Date: Thu, 08 Jun 2023 11:34:13 GMT
Transfer-Encoding: chunked
Connection: close


MESSAGE:
<?xml version='1.0' encoding='UTF-8'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>
  Marvin  02080816422D          

 14 15  0  0  0  0            999 V2000
   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
 10  1  2  0  0  0  0
  1  2  1  0  0  0  0
 14  2  1  0  0  0  0
  8  3  1  0  0  0  0
  4  3  2  0  0  0  0
  7  4  1  0  0  0  0
  1  5  1  0  0  0  0
  5  3  1  0  0  0  0
 12  5  1  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  1  0  0  0  0
 13  7  1  0  0  0  0
  9  8  2  0  0  0  0
M  END
</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>
  Marvin  02080816422D          

 14 15  0  0  0  0            999 V2000
   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0
   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0
    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0
    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0
    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0
    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0
   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0
   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0
   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0
    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
  8  1  1  0  0  0  0
  2  1  2  0  0  0  0
  7  2  1  0  0  0  0
  3  1  1  0  0  0  0
  5  4  1  0  0  0  0
  5  3  1  0  0  0  0
 10  5  2  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  1  0  0  0  0
  9  8  2  0  0  0  0
 12  3  1  0  0  0  0
 13  7  1  0  0  0  0
 14  4  1  0  0  0  0
M  APO  3  12   1  13   1  14   1
M  STY  3   1 SUP   2 SUP   3 SUP
M  SAL   1  1  12
M  SBL   1  1  13
M  SMT   1 Me
M  SAL   2  1  13
M  SBL   2  1  14
M  SMT   2 Me
M  SAL   3  1  14
M  SBL   3  1  15
M  SMT   3 Me
M  END
</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>
  Marvin  02080816533D          

 24 25  0  0  0  0            999 V2000
   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0
    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0
   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0
    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0
   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0
    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0
    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0
   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0
   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0
   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0
    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0
   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0
    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0
   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0
   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0
   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0
   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0
    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0
    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0
  8  1  4  0  0  0  0
  2  1  4  0  0  0  0
  7  2  4  0  0  0  0
  3  1  1  0  0  0  0
  5  4  1  0  0  0  0
  5  3  1  0  0  0  0
 10  5  2  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  4  0  0  0  0
  9  8  4  0  0  0  0
  9 15  1  0  0  0  0
 12  3  1  0  0  0  0
 13  7  1  0  0  0  0
 14  4  1  0  0  0  0
 12 16  1  0  0  0  0
 12 17  1  0  0  0  0
 12 18  1  0  0  0  0
 13 19  1  0  0  0  0
 13 20  1  0  0  0  0
 13 21  1  0  0  0  0
 14 22  1  0  0  0  0
 14 23  1  0  0  0  0
 14 24  1  0  0  0  0
M  APO  3  12   1  13   1  14   1
M  STY  3   1 SUP   2 SUP   3 SUP
M  SAL   1  4  12  16  17  18
M  SBL   1  1  14
M  SMT   1 Me
M  SDS EXP  1   1
M  SAL   2  4  13  19  20  21
M  SBL   2  1  15
M  SMT   2 Me
M  SDS EXP  1   2
M  SAL   3  4  14  22  23  24
M  SBL   3  1  16
M  SMT   3 Me
M  SDS EXP  1   3
M  END
</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>
DEBUG:suds.metrics:waited 476 (ms) on server reply
DEBUG:suds.client:Reply HTTP status - 200
b'<?xml version=\'1.0\' encoding=\'UTF-8\'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n 10  1  2  0  0  0  0\n  1  2  1  0  0  0  0\n 14  2  1  0  0  0  0\n  8  3  1  0  0  0  0\n  4  3  2  0  0  0  0\n  7  4  1  0  0  0  0\n  1  5  1  0  0  0  0\n  5  3  1  0  0  0  0\n 12  5  1  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n 13  7  1  0  0  0  0\n  9  8  2  0  0  0  0\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0\n   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0\n   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0\n    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  1  0  0  0  0\n  2  1  2  0  0  0  0\n  7  2  1  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n  9  8  2  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  1  12\nM  SBL   1  1  13\nM  SMT   1 Me\nM  SAL   2  1  13\nM  SBL   2  1  14\nM  SMT   2 Me\nM  SAL   3  1  14\nM  SBL   3  1  15\nM  SMT   3 Me\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816533D          \n\n 24 25  0  0  0  0            999 V2000\n   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0\n    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0\n   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0\n   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0\n    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0\n    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0\n   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0\n    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0\n    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0\n    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  4  0  0  0  0\n  2  1  4  0  0  0  0\n  7  2  4  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  4  0  0  0  0\n  9  8  4  0  0  0  0\n  9 15  1  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\n 12 16  1  0  0  0  0\n 12 17  1  0  0  0  0\n 12 18  1  0  0  0  0\n 13 19  1  0  0  0  0\n 13 20  1  0  0  0  0\n 13 21  1  0  0  0  0\n 14 22  1  0  0  0  0\n 14 23  1  0  0  0  0\n 14 24  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  4  12  16  17  18\nM  SBL   1  1  14\nM  SMT   1 Me\nM  SDS EXP  1   1\nM  SAL   2  4  13  19  20  21\nM  SBL   2  1  15\nM  SMT   2 Me\nM  SDS EXP  1   2\nM  SAL   3  4  14  22  23  24\nM  SBL   3  1  16\nM  SMT   3 Me\nM  SDS EXP  1   3\nM  END\n</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>'
DEBUG:suds.metrics:b'<?xml version=\'1.0\' encoding=\'UTF-8\'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n 10  1  2  0  0  0  0\n  1  2  1  0  0  0  0\n 14  2  1  0  0  0  0\n  8  3  1  0  0  0  0\n  4  3  2  0  0  0  0\n  7  4  1  0  0  0  0\n  1  5  1  0  0  0  0\n  5  3  1  0  0  0  0\n 12  5  1  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n 13  7  1  0  0  0  0\n  9  8  2  0  0  0  0\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0\n   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0\n   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0\n    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  1  0  0  0  0\n  2  1  2  0  0  0  0\n  7  2  1  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n  9  8  2  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  1  12\nM  SBL   1  1  13\nM  SMT   1 Me\nM  SAL   2  1  13\nM  SBL   2  1  14\nM  SMT   2 Me\nM  SAL   3  1  14\nM  SBL   3  1  15\nM  SMT   3 Me\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816533D          \n\n 24 25  0  0  0  0            999 V2000\n   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0\n    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0\n   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0\n   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0\n    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0\n    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0\n   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0\n    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0\n    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0\n    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  4  0  0  0  0\n  2  1  4  0  0  0  0\n  7  2  4  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  4  0  0  0  0\n  9  8  4  0  0  0  0\n  9 15  1  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\n 12 16  1  0  0  0  0\n 12 17  1  0  0  0  0\n 12 18  1  0  0  0  0\n 13 19  1  0  0  0  0\n 13 20  1  0  0  0  0\n 13 21  1  0  0  0  0\n 14 22  1  0  0  0  0\n 14 23  1  0  0  0  0\n 14 24  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  4  12  16  17  18\nM  SBL   1  1  14\nM  SMT   1 Me\nM  SDS EXP  1   1\nM  SAL   2  4  13  19  20  21\nM  SBL   2  1  15\nM  SMT   2 Me\nM  SDS EXP  1   2\nM  SAL   3  4  14  22  23  24\nM  SBL   3  1  16\nM  SMT   3 Me\nM  SDS EXP  1   3\nM  END\n</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>'
sax duration: 3 (ms)
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b25bc880 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc880, resolving: ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b266b220"
   ref[] = 
      "getCompleteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bc880 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25bc940 name="getCompleteEntityResponse" />
DEBUG:suds.xsd.sxbasic:Element:0x2b25bc970, resolving: ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b266b220"
   ref[] = 
      "Entity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25bc970 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('Entity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b56a0 name="Entity" />
DEBUG:suds.umx.typed:reset
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b265a8e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (chebiId)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5700, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25f0a60"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5700 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25f0a60, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261a1f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b261a1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261a1f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (chebiAsciiName)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5910, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a190"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5910 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a190, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b261afa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (definition)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5940, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a190"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5940 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a190, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261a1f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b261a1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261a1f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (status)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5970, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a1f0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5970 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a1f0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b261afa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (smiles)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b59a0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a1f0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b59a0 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a1f0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (inchi)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b59d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a190"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b59d0 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a190, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b261afa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (inchiKey)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5a00, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a1f0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5a00 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a1f0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (charge)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5a30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a190"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5a30 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a190, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b261afa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (mass)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5a60, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a1f0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5a60 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a1f0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (monoisotopicMass)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5a90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a190"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5a90 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a190, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b261afa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (entityStar)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5ac0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b261a1f0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5ac0 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b261a1f0, found builtin (int)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5af0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25f09d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5af0 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25f09d0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25f0b20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b25f0b20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25f0b20>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5b20, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25f0bb0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5b20 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b51c0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5220, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26997c0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5220 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26997c0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b261afa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5310, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26997f0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5310 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26997f0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261a190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b261a190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261a190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5340, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2699670"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5340 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2699670, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b261afa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261afa0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26996a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26996a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26996a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26998e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26998e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26998e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26996a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26996a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26996a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699820>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699820>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26998b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26998b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26998b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699670>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699670>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26998b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26998b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26998b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699a90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699a90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699a60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699a60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699a60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699a90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699a90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699b50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699b50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699b50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699cd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699cd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699760>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699760>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699cd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699cd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699ca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699ca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699d90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699d90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699a60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699a60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699a60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b2699fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2699fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b2699fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2699fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af130>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af130>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af2e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af2e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af2e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af2e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af2e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af2e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af4c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af4c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af4c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af4c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af3a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af3a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af3a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af7c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af7c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (IupacNames)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5b50, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26af3a0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5b50 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b51c0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af6d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af6d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af6d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Formulae)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5b80, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26af550"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5b80 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b51c0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5bb0, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26af610"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5bb0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b51c0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afaf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afaf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afaf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afaf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afaf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afaf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af3a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af3a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af3a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af3a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af3a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af3a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afbb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afbb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afbb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afbb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afc70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afa90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afc70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afdf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afdf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afdf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afdf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afdf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afdf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5be0, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26afa90"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5be0 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b51c0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afd00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afd00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26aff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26aff70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26aff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afdc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afdc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afdc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26aff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26aff70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26aff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26afee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26af1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26af1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26af1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26afb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26afb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26afb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb0d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb0d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb0a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb0a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb0a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb0d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb0d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb1f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb1f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb070>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb070>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb4f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb4f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb430>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb430>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb4f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb4f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb5b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb5b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb5b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb5b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb670>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb670>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb3d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb3d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb3d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb670>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb670>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb730>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb730>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb730>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb730>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb7f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb7f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb7f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb7f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb7f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb7f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb8b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb8b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb8b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb8b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb8b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb8b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb7c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bba30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bba30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bba30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bb880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bba30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bba30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bba30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbaf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbaf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbaf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bb940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bb940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bb940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbaf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbaf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbaf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbbb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbbb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bba00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bba00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bba00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbbb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbbb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbc70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbc70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbdf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbdf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbdf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbdf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbdf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbdf0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbd00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbd00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbf70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbf70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbdc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbdc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbdc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbf70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbf70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bba00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bba00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bba00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bbee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bba00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26bba00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bba00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bba00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bba00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bba00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26bbb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26bbb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26bbb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c10d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c10d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c10d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c10a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c10a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c10a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c10d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c10d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c10d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c10d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c10d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c10d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c13a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c13a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c13a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c11f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c11f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c11f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c13a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c13a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c13a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c14c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c14c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c14c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1130>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1130>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1460>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1460>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c17c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c17c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c17c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c17c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c17c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c17c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c16d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c16d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c16d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1a00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1a00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1a00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1850>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1850>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1a00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1a00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1a00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1ac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1ac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1ac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1ac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1b80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1b80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1b80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c19d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c19d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c19d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1b80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1b80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1b80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1c40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1c40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1a90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1a90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1c40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1c40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1d00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1d00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1b50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1b50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1b50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1d00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1d00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1cd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1cd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1d90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1d90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c1fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c1fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c1fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c1fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c9250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c9250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c9250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c9190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c9190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c9190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c9250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c9250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c9250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7130>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7130>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c72e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c72e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c72e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c72e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c72e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c72e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c74c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c74c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c74c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c74c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c74c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c74c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c71c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c71c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c71c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c73a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c73a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c73a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c77c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c77c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c77c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c77c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c77c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c77c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c76d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c76d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c76d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7a00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7a00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7a00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7850>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7850>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7a00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7a00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7a00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7ac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7ac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7ac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7ac0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7b80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7b80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7b80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c79d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c79d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c79d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7b80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7b80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7b80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7c40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7c40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7a90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7a90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7c40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7c40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7d00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7d00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7b50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7b50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7b50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7d00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7d00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7dc0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7cd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7cd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7e80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7d90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7d90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7f40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26c7fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7c10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26c7fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26c7fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26c7fd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5c10, resolving: ('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26c7910"
   ref[] = 
      "StructureDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5c10 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b5280 name="StructureDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (structure)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b52e0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cf070"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b52e0 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cf070, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5430, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cf2b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5430 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cf2b0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (dimension)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5460, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cf280"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5460 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cf280, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5490, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cf400"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5490 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cf400, found builtin (boolean)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (structure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf4f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf4f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf2e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf2e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf2e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (dimension)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf4f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf4f0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf2e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf2e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf2e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (structure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (dimension)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5280 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5c40, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cf4c0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5c40 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b51c0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf5b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf5b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf7c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf8b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf8b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf8b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cf880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf9a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf9a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf9a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cf970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cf970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cf970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfa90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfa60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfa60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfa60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cfb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfb50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cfb50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfb50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfc70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfc70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfd60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cfd60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfd60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cfd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfd30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfe50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfe50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfe50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfe20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfe20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfe20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cff40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cff40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cff40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b51c0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cff10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cff10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cff10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5c70, resolving: ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cfd60"
   ref[] = 
      "OntologyDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5c70 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b53a0 name="OntologyDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5400, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cfd90"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5400 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cfd90, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfd00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfd00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5580, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cfc10"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cfc10, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cff70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b55b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cffa0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b55b0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cffa0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfd00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfd00>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b55e0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cfd00"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b55e0 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cfd00, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cff70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5610, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26cff10"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5610 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26cff10, found builtin (boolean)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfd60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cfd60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfd60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d60d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cfee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d60d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cfee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cfe50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cfe50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cfe50>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d60a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d60a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d60a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d60a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d60a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d60a0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cff40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26cff40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cff40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26cff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26cff70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26cff70>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d60d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d60d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62e0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d60d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d60d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6430>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6430>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d67c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d67c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d67c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d67c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d67c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d67c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6370>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d68b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d68b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d68b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d68b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d68b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d68b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6a30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6a30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6a30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6a30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d67c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d67c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d67c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d68b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d68b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d68b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6bb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6bb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6bb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6bb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6bb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6bb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6ca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6ca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6ca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6ca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6a30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6a30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6d60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6d60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6d60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6d60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6af0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6e20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6e20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6e20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6e20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6bb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6bb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6bb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6ee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6ee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d62b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d62b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6ee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6ee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6ca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6ca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6460>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6460>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6460>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6460>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6d60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6d60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyChildren)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5ca0, resolving: ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26d6e20"
   ref[] = 
      "OntologyDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5ca0 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b53a0 name="OntologyDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e0040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e0040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e0040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6f10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6f10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e0040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e0040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e0040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6f10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6f10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6e20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6e20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyChildren)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df0d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df0d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df100>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df0d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df0d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6ee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26d6ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6ee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (OntologyChildren)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df160>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b53a0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26d6460>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26d6460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26d6460>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (GeneralComments)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5cd0, resolving: ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df1f0"
   ref[] = 
      "CommentDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5cd0 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b5130 name="CommentDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5130 name="CommentDataItem" />) for (text)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5190, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df430"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5190 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26df430, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b5130 name="CommentDataItem" />) for (date)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5250, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df3d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5250 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26df3d0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df190>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5d00, resolving: ('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df130"
   ref[] = 
      "CompoundOriginDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b25b5d00 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b25b54f0 name="CompoundOriginDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5550, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df5e0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5550 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26df5e0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5730, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5730 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26df610, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5820, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df340"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5820 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26df340, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5850, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df6d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5850 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26df6d0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df7c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df7c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df7c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df850>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df850>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df850>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df850>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df910>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df9d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df9d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df9d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df880>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df9d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df9d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df9d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfa90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5760, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26df880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5760 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26df880, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df940>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.xsd.sxbasic:Element:0x2b25b5790, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b26dfaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b25b5790 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b26dfaf0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfa90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfa90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfa90>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df700>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df970>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfa30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfa30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfa30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfca0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfa30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfa30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfa30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df130>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df130>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfa30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfa30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfa30>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfd60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfd60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfd60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfd60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfd60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfd60>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26df1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df1c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfb80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfb80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfe20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfe20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfe20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfe20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfe20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfe20>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26df250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26df250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26df250>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc10>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfee0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfe80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfe80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfe80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dffd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dffd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dffd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfe80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfe80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfe80>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dffd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dffd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dffd0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfeb0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26dfc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dff40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dff40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dff40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dfc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dfc40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26dff40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26dff40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26dff40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8070>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8070>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8070>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8070>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e82b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e82b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e82b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e82b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e82b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e82b0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8220>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e83d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e83d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e83d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8280>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e83d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e83d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e83d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8490>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8490>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8340>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8490>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8490>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8400>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8550>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e84c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e84c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e84c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e84c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e84c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e84c0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8610>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e86d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e86d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e86d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e8580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8580>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e86d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
<suds.resolver.Frame object at 0x2b26e86d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e86d0>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b267cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf40>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b56a0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8640>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:searching parent (<Complex:0x2b25b54f0 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b26e8790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
<suds.resolver.Frame object at 0x2b26e8790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b26e8790>)
<suds.resolver.Frame object at 0x2b265a8e0>
<suds.resolver.Frame object at 0x2b268b040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b268b040>)
<suds.resolver.Frame object at 0x2b265a8e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b265a8e0>)

DEBUG:suds.metrics:method 'getCompleteEntity' invoked: 534 (ms)
DEBUG:pygls.protocol:Sending notification: textDocument/publishDiagnostics <pygls.types.PublishDiagnosticsParams object at 0x28ff0d5b0>
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/evaliu/Documents/vscode-antimony/examples/BioModels/1.ant", "diagnostics": []}}
DEBUG:pygls.server:Content length: 194
DEBUG:pygls.protocol:Received b'Content-Length: 194\r\n\r\n{"jsonrpc":"2.0","id":1,"method":"workspace/executeCommand","params":{"command":"antimony.getAnnotation","arguments":["file:///Users/evaliu/Documents/vscode-antimony/examples/BioModels/1.ant"]}}'
DEBUG:pygls.protocol:Request message received.
DEBUG:pygls.server:Content length: 194
INFO:vscode-antimony logger:Parse tree:
INFO:vscode-antimony logger:Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'BIOMD0000000001'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BLL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'IL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'AL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DLL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'D')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ILL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'I')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ALL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BwLL')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'B')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_0')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'B')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_0')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_1')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_1')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React2')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BwLL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_2')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BLL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_2')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React3')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_3')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_3')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React4')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_4')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_4')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React5')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'B')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_5')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'B')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_5')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React6')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_6')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_6')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React7')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_7')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_7')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React8')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_8')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_8')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React9')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_9')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_9')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React10')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_10')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_10')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React11')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_11')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_11')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React12')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'D')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_12')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'D')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_12')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React13')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_13')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_13')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React14')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'D')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_14')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_14')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'D')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React15')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_15')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_15')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React16')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_16')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_16')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'RemovalACh')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 't2')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_13')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_8')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_4')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_12')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_7')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_3')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_0')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'IL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'AL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '1.66057788110262e-21'), Token('SLASH', '/'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'D')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ILL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'I')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ALL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BwLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1e-16')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 't2')]), None]), Token('EQUAL', '='), Token('NUMBER', '20')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_0')]), None]), Token('EQUAL', '='), Token('NUMBER', '30002')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_3')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_7')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_12')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_4')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_8')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_13')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_0')]), None]), Token('EQUAL', '='), Token('NUMBER', '8000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_1')]), None]), Token('EQUAL', '='), Token('NUMBER', '16000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_2')]), None]), Token('EQUAL', '='), Token('NUMBER', '30000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_2')]), None]), Token('EQUAL', '='), Token('NUMBER', '700')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_3')]), None]), Token('EQUAL', '='), Token('NUMBER', '8.64')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_4')]), None]), Token('EQUAL', '='), Token('NUMBER', '17.28')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_5')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.54')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_5')]), None]), Token('EQUAL', '='), Token('NUMBER', '10800')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_6')]), None]), Token('EQUAL', '='), Token('NUMBER', '130')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_6')]), None]), Token('EQUAL', '='), Token('NUMBER', '2740')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_7')]), None]), Token('EQUAL', '='), Token('NUMBER', '4')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_8')]), None]), Token('EQUAL', '='), Token('NUMBER', '8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_9')]), None]), Token('EQUAL', '='), Token('NUMBER', '19.7')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_9')]), None]), Token('EQUAL', '='), Token('NUMBER', '3.74')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_10')]), None]), Token('EQUAL', '='), Token('NUMBER', '19.85')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_10')]), None]), Token('EQUAL', '='), Token('NUMBER', '1.74')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_11')]), None]), Token('EQUAL', '='), Token('NUMBER', '20')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_11')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.81')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_12')]), None]), Token('EQUAL', '='), Token('NUMBER', '4')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_13')]), None]), Token('EQUAL', '='), Token('NUMBER', '8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_14')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_14')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_15')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_15')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_16')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_16')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_0')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_3')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_7')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_12')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_4')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_8')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_13')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 't2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_0')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_3')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_4')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_5')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_5')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_6')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_6')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_7')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_8')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_9')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_9')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_10')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_10')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_11')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_11')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_12')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_13')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_14')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_14')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_15')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_15')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_16')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_16')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'comp1'), Token('IS', 'is'), Token('ESCAPED_STRING', '"compartment1"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'BLL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"BasalACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'IL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"IntermediateACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'AL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"ActiveACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'A'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Active"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'BL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"BasalACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'B'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Basal"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'DLL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"DesensitisedACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'D'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Desensitised"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'ILL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"IntermediateACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'DL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"DesensitisedACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'I'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Intermediate"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'ALL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"ActiveACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'RemovalACh'), Token('IS', 'is'), Token('ESCAPED_STRING', '"removal of ACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n\r\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'BLL')]), Token('ANNOT_KEYWORD', 'identity'), Token('ESCAPED_STRING', '"http://identifiers.org/chebi/CHEBI:27732"'), None]), Token('NEWLINE', '\r\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')])])
DEBUG:pygls.protocol:Received b'Content-Length: 194\r\n\r\n{"jsonrpc":"2.0","id":2,"method":"workspace/executeCommand","params":{"command":"antimony.getAnnotation","arguments":["file:///Users/evaliu/Documents/vscode-antimony/examples/BioModels/1.ant"]}}'
DEBUG:pygls.protocol:Request message received.
INFO:vscode-antimony logger:Parse tree:
INFO:vscode-antimony logger:Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'BIOMD0000000001'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BLL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'IL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'AL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DLL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'D')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ILL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'I')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ALL')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BwLL')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'B')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_0')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'B')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_0')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_1')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_1')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React2')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BwLL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_2')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BLL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_2')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React3')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_3')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_3')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React4')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_4')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_4')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React5')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'B')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_5')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'B')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_5')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React6')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'BL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_6')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'BL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_6')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React7')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_7')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_7')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React8')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_8')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_8')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React9')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_9')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'A')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_9')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React10')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'AL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_10')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'AL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_10')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React11')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ALL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_11')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ALL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_11')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React12')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'D')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_12')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'D')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_12')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React13')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_13')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_13')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React14')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'I')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'D')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_14')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'I')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_14')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'D')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React15')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'IL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_15')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'IL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_15')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'React16')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'ILL')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'DLL')])]), Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'comp1')]), Token('STAR', '*'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('product', [Tree('var_name', [None, Token('NAME', 'kf_16')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ILL')])]), Token('MINUS', '-'), Tree('product', [Tree('var_name', [None, Token('NAME', 'kr_16')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'DLL')])])]), Token('RPAR', ')')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'RemovalACh')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 't2')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_13')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_8')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_4')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_12')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_7')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_3')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'kf_0')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'IL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'AL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '1.66057788110262e-21'), Token('SLASH', '/'), Tree('var_name', [None, Token('NAME', 'comp1')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'D')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ILL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'I')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ALL')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'BwLL')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1e-16')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 't2')]), None]), Token('EQUAL', '='), Token('NUMBER', '20')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_0')]), None]), Token('EQUAL', '='), Token('NUMBER', '30002')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_3')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_7')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_12')]), None]), Token('EQUAL', '='), Token('NUMBER', '3000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_4')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_8')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_13')]), None]), Token('EQUAL', '='), Token('NUMBER', '1500')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_0')]), None]), Token('EQUAL', '='), Token('NUMBER', '8000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_1')]), None]), Token('EQUAL', '='), Token('NUMBER', '16000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_2')]), None]), Token('EQUAL', '='), Token('NUMBER', '30000')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_2')]), None]), Token('EQUAL', '='), Token('NUMBER', '700')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_3')]), None]), Token('EQUAL', '='), Token('NUMBER', '8.64')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_4')]), None]), Token('EQUAL', '='), Token('NUMBER', '17.28')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_5')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.54')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_5')]), None]), Token('EQUAL', '='), Token('NUMBER', '10800')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_6')]), None]), Token('EQUAL', '='), Token('NUMBER', '130')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_6')]), None]), Token('EQUAL', '='), Token('NUMBER', '2740')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_7')]), None]), Token('EQUAL', '='), Token('NUMBER', '4')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_8')]), None]), Token('EQUAL', '='), Token('NUMBER', '8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_9')]), None]), Token('EQUAL', '='), Token('NUMBER', '19.7')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_9')]), None]), Token('EQUAL', '='), Token('NUMBER', '3.74')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_10')]), None]), Token('EQUAL', '='), Token('NUMBER', '19.85')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_10')]), None]), Token('EQUAL', '='), Token('NUMBER', '1.74')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_11')]), None]), Token('EQUAL', '='), Token('NUMBER', '20')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_11')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.81')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_12')]), None]), Token('EQUAL', '='), Token('NUMBER', '4')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_13')]), None]), Token('EQUAL', '='), Token('NUMBER', '8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_14')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_14')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_15')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_15')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_16')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.05')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_16')]), None]), Token('EQUAL', '='), Token('NUMBER', '0.0012')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_0')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_3')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_7')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_12')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_4')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_8')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_13')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'comp1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 't2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_0')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_3')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_4')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_5')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_5')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_6')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_6')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_7')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_8')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_9')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_9')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_10')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_10')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_11')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_11')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_12')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_13')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_14')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_14')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_15')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_15')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kf_16')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kr_16')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'comp1'), Token('IS', 'is'), Token('ESCAPED_STRING', '"compartment1"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'BLL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"BasalACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'IL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"IntermediateACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'AL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"ActiveACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'A'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Active"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'BL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"BasalACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'B'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Basal"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'DLL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"DesensitisedACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'D'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Desensitised"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'ILL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"IntermediateACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'DL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"DesensitisedACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'I'), Token('IS', 'is'), Token('ESCAPED_STRING', '"Intermediate"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'ALL'), Token('IS', 'is'), Token('ESCAPED_STRING', '"ActiveACh2"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'RemovalACh'), Token('IS', 'is'), Token('ESCAPED_STRING', '"removal of ACh"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n\r\n\r\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'BLL')]), Token('ANNOT_KEYWORD', 'identity'), Token('ESCAPED_STRING', '"http://identifiers.org/chebi/CHEBI:27732"'), None]), Token('NEWLINE', '\r\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\r\n')])])
DEBUG:suds.wsdl:reading WSDL at: http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl ...
DEBUG:suds.xsd.sxbase:Element:0x16fcf2d60, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fcf2df0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fcf2e20, convert type='xsd:float' to ('float', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fcf2e50, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fcf2dc0, convert type='tns:LiteEntity' to ('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fcf2ee0, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fcf2f70, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710070, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710040, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710130, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710160, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710190, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710100, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710250, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710280, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27102b0, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27102e0, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710220, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27103a0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27103d0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710400, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710430, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710460, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710490, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710370, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710550, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710580, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27105b0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27105e0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710610, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710640, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710670, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710520, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710730, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710760, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710790, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27107c0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27107f0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710820, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710850, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710880, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27108b0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b27108e0, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710910, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710940, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710970, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b27109a0, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b27109d0, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710a00, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710a30, convert type='tns:StructureDataItem' to ('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710a60, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710a90, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710ac0, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710af0, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710b20, convert type='tns:CompoundOriginDataItem' to ('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710700, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710be0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710c10, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710c40, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b2710bb0, convert type='tns:LiteEntityList' to ('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b2710c70, convert type='tns:getLiteEntityResponse' to ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Restriction:0x2b2710ca0, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b370, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x16fc65100, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b3d0, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x16fc65130, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b4f0, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x16fc65220, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b460, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x16fc65310, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b370, found builtin (string)
DEBUG:suds.xsd.sxbase:Element:0x16fc65580, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc656a0, convert type='tns:SearchCategory' to ('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc656d0, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc65700, convert type='tns:StarsCategory' to ('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65610, convert type='tns:getLiteEntity' to ('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65760, convert type='tns:Entity' to ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65670, convert type='tns:getCompleteEntityResponse' to ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65820, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc657c0, convert type='tns:getCompleteEntity' to ('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc658e0, convert type='tns:Entity' to ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65880, convert type='tns:getCompleteEntityByListResponse' to ('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc659a0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc65940, convert type='tns:getCompleteEntityByList' to ('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65a60, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65a00, convert type='tns:getOntologyParentsResponse' to ('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65b20, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc65ac0, convert type='tns:getOntologyParents' to ('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65be0, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65b80, convert type='tns:getOntologyChildrenResponse' to ('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65ca0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc65c40, convert type='tns:getOntologyChildren' to ('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65d60, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65d00, convert type='tns:getAllOntologyChildrenInPathResponse' to ('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65e20, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc65eb0, convert type='tns:RelationshipType' to ('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65ee0, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc65dc0, convert type='tns:getAllOntologyChildrenInPath' to ('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65f40, convert type='tns:LiteEntityList' to ('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fc65e80, convert type='tns:getLiteEntityResponse' to ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b040, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b0d0, convert type='tns:StructureType' to ('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b100, convert type='tns:StructureSearchCategory' to ('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b130, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b160, convert type='xsd:float' to ('float', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fc65fa0, convert type='tns:getStructureSearch' to ('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b1c0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b250, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b0a0, convert type='tns:getUpdatedPolymer' to ('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b2b0, convert type='tns:UpdatedPolymer' to ('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b220, convert type='tns:getUpdatedPolymerResponse' to ('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b340, convert type='tns:ChebiWebServiceFault' to ('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b3a0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fe1b430, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.schema:loaded:

schema collection
   Schema:0x16fcf2bb0
   (raw)
      <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://www.ebi.ac.uk/webservices/chebi">
         <xsd:complexType name="LiteEntity">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="chebiAsciiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="searchScore" type="xsd:float"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="LiteEntityList">
            <xsd:sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:LiteEntity"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="OntologyDataItemList">
            <xsd:sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:OntologyDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="CommentDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="text" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="date" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="DataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="data" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="source" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="StructureDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="structure" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="dimension" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="defaultStructure" type="xsd:boolean"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="OntologyDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="cyclicRelationship" type="xsd:boolean"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyElement" type="tns:OntologyDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="CompoundOriginDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="speciesText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="speciesAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="componentText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="componentAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="strainText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="strainAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="SourceType" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="SourceAccession" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="Entity">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiAsciiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="definition" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="smiles" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="inchi" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="inchiKey" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="charge" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="mass" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="monoisotopicMass" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="SecondaryChEBIIds" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Synonyms" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="IupacNames" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Formulae" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="RegistryNumbers" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Citations" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChemicalStructures" type="tns:StructureDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="DatabaseLinks" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyParents" type="tns:OntologyDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyChildren" type="tns:OntologyDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="GeneralComments" type="tns:CommentDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="CompoundOrigins" type="tns:CompoundOriginDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="UpdatedPolymer">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="updatedStructure" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="globalFormula" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="globalCharge" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <complexType name="getLiteEntityResponse">
            <sequence>
               <element name="return" type="tns:LiteEntityList"/>
            </sequence>
         </complexType>
         <element name="getLiteEntityResponse" type="tns:getLiteEntityResponse"/>
         <simpleType name="SearchCategory">
            <restriction base="xsd:string">
               <enumeration value="ALL"/>
               <enumeration value="CHEBI ID"/>
               <enumeration value="CHEBI NAME"/>
               <enumeration value="DEFINITION"/>
               <enumeration value="ALL NAMES"/>
               <enumeration value="IUPAC NAME"/>
               <enumeration value="CITATIONS"/>
               <enumeration value="REGISTRY NUMBERS"/>
               <enumeration value="MANUAL XREFS"/>
               <enumeration value="AUTOMATIC XREFS"/>
               <enumeration value="FORMULA"/>
               <enumeration value="MASS"/>
               <enumeration value="MONOISOTOPIC MASS"/>
               <enumeration value="CHARGE"/>
               <enumeration value="INCHI/INCHI KEY"/>
               <enumeration value="SMILES"/>
               <enumeration value="SPECIES"/>
            </restriction>
         </simpleType>
         <simpleType name="StructureSearchCategory">
            <restriction base="xsd:string">
               <enumeration value="IDENTITY"/>
               <enumeration value="SUBSTRUCTURE"/>
               <enumeration value="SIMILARITY"/>
            </restriction>
         </simpleType>
         <simpleType name="StructureType">
            <restriction base="xsd:string">
               <enumeration value="MOLFILE"/>
               <enumeration value="CML"/>
               <enumeration value="SMILES"/>
            </restriction>
         </simpleType>
         <simpleType name="RelationshipType">
            <restriction base="xsd:string">
               <enumeration value="is a"/>
               <enumeration value="has part"/>
               <enumeration value="is conjugate base of"/>
               <enumeration value="is conjugate acid of"/>
               <enumeration value="is tautomer of"/>
               <enumeration value="is enantiomer of"/>
               <enumeration value="has functional parent"/>
               <enumeration value="has parent hydride"/>
               <enumeration value="is substituent group from"/>
               <enumeration value="has role"/>
            </restriction>
         </simpleType>
         <simpleType name="StarsCategory">
            <restriction base="xsd:string">
               <enumeration value="ALL"/>
               <enumeration value="TWO ONLY"/>
               <enumeration value="THREE ONLY"/>
            </restriction>
         </simpleType>
         <complexType name="getLiteEntity">
            <sequence>
               <element name="search" type="xsd:string"/>
               <element name="searchCategory" type="tns:SearchCategory"/>
               <element name="maximumResults" type="xsd:int"/>
               <element name="stars" type="tns:StarsCategory"/>
            </sequence>
         </complexType>
         <element name="getLiteEntity" type="tns:getLiteEntity"/>
         <complexType name="getCompleteEntityResponse">
            <sequence>
               <element name="return" type="tns:Entity"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityResponse" type="tns:getCompleteEntityResponse"/>
         <complexType name="getCompleteEntity">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntity" type="tns:getCompleteEntity"/>
         <complexType name="getCompleteEntityByListResponse">
            <sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:Entity"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityByListResponse" type="tns:getCompleteEntityByListResponse"/>
         <complexType name="getCompleteEntityByList">
            <sequence>
               <xsd:element maxOccurs="50" minOccurs="0" name="ListOfChEBIIds" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityByList" type="tns:getCompleteEntityByList"/>
         <complexType name="getOntologyParentsResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getOntologyParentsResponse" type="tns:getOntologyParentsResponse"/>
         <complexType name="getOntologyParents">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getOntologyParents" type="tns:getOntologyParents"/>
         <complexType name="getOntologyChildrenResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getOntologyChildrenResponse" type="tns:getOntologyChildrenResponse"/>
         <complexType name="getOntologyChildren">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getOntologyChildren" type="tns:getOntologyChildren"/>
         <complexType name="getAllOntologyChildrenInPathResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getAllOntologyChildrenInPathResponse" type="tns:getAllOntologyChildrenInPathResponse"/>
         <complexType name="getAllOntologyChildrenInPath">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
               <element name="relationshipType" type="tns:RelationshipType"/>
               <element name="structureOnly" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <element name="getAllOntologyChildrenInPath" type="tns:getAllOntologyChildrenInPath"/>
         <complexType name="getStructureSearchResponse">
            <sequence>
               <element name="return" type="tns:LiteEntityList"/>
            </sequence>
         </complexType>
         <element name="getStructureSearchResponse" type="tns:getLiteEntityResponse"/>
         <complexType name="getStructureSearch">
            <sequence>
               <element name="structure" type="xsd:string"/>
               <element name="type" type="tns:StructureType"/>
               <element name="structureSearchCategory" type="tns:StructureSearchCategory"/>
               <element name="totalResults" type="xsd:int"/>
               <element name="tanimotoCutoff" type="xsd:float"/>
            </sequence>
         </complexType>
         <element name="getStructureSearch" type="tns:getStructureSearch"/>
         <complexType name="getUpdatedPolymer">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="1" name="polymerisationIndex" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getUpdatedPolymer" type="tns:getUpdatedPolymer"/>
         <complexType name="getUpdatedPolymerResponse">
            <sequence>
               <element name="return" type="tns:UpdatedPolymer"/>
            </sequence>
         </complexType>
         <element name="getUpdatedPolymerResponse" type="tns:getUpdatedPolymerResponse"/>
         <element name="ChebiWebServiceFault" type="tns:ChebiWebServiceFault"/>
         <complexType name="ChebiWebServiceFault">
            <sequence>
               <element name="faultInfo" type="xsd:string"/>
               <element name="message" type="xsd:string"/>
            </sequence>
         </complexType>
      </xsd:schema>
   (model)
      <Complex:0x16fcf2ca0 name="LiteEntity">
         <Sequence:0x16fcf2d00>
            <Element:0x16fcf2d60 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fcf2df0 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fcf2e20 name="searchScore" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fcf2e50 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x16fcf2d30 name="LiteEntityList">
         <Sequence:0x16fcf2d90>
            <Element:0x16fcf2dc0 name="ListElement" type="('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16fcf2e80 name="OntologyDataItemList">
         <Sequence:0x16fcf2eb0>
            <Element:0x16fcf2ee0 name="ListElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16fcf2f10 name="CommentDataItem">
         <Sequence:0x16fcf2f40>
            <Element:0x16fcf2f70 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710070 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x16fcf2fa0 name="DataItem">
         <Sequence:0x2b27100a0>
            <Element:0x2b2710040 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710130 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710160 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710190 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16fcf2fd0 name="StructureDataItem">
         <Sequence:0x2b27100d0>
            <Element:0x2b2710100 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710250 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710280 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27102b0 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27102e0 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b27101c0 name="OntologyDataItem">
         <Sequence:0x2b27101f0>
            <Element:0x2b2710220 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27103a0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27103d0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710400 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710430 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710460 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710490 name="OntologyElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b2710310 name="CompoundOriginDataItem">
         <Sequence:0x2b2710340>
            <Element:0x2b2710370 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710550 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710580 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27105b0 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27105e0 name="strainText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710610 name="strainAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710640 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710670 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x2b27104c0 name="Entity">
         <Sequence:0x2b27104f0>
            <Element:0x2b2710520 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710730 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710760 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710790 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27107c0 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27107f0 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710820 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710850 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710880 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27108b0 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b27108e0 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710910 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710940 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710970 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b27109a0 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b27109d0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710a00 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710a30 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710a60 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710a90 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710ac0 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710af0 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b2710b20 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x2b27106a0 name="UpdatedPolymer">
         <Sequence:0x2b27106d0>
            <Element:0x2b2710700 name="updatedStructure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710be0 name="globalFormula" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710c10 name="globalCharge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b2710c40 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x2b2710b50 name="getLiteEntityResponse">
         <Sequence:0x2b2710b80>
            <Element:0x2b2710bb0 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b2710c70 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Simple:0x2b2710d00 name="SearchCategory">
         <Restriction:0x2b2710ca0 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x2b2710d30 name="ALL" />
            <Enumeration:0x2b2710dc0 name="CHEBI ID" />
            <Enumeration:0x2b2710df0 name="CHEBI NAME" />
            <Enumeration:0x2b2710e20 name="DEFINITION" />
            <Enumeration:0x2b2710e50 name="ALL NAMES" />
            <Enumeration:0x2b2710e80 name="IUPAC NAME" />
            <Enumeration:0x2b2710eb0 name="CITATIONS" />
            <Enumeration:0x2b2710ee0 name="REGISTRY NUMBERS" />
            <Enumeration:0x2b2710f10 name="MANUAL XREFS" />
            <Enumeration:0x2b2710f40 name="AUTOMATIC XREFS" />
            <Enumeration:0x2b2710f70 name="FORMULA" />
            <Enumeration:0x2b2710fa0 name="MASS" />
            <Enumeration:0x2b2710fd0 name="MONOISOTOPIC MASS" />
            <Enumeration:0x2b2710d90 name="CHARGE" />
            <Enumeration:0x16fc65070 name="INCHI/INCHI KEY" />
            <Enumeration:0x16fc650a0 name="SMILES" />
            <Enumeration:0x16fc650d0 name="SPECIES" />
         </Restriction>
      </Simple>
      <Simple:0x2b2710cd0 name="StructureSearchCategory">
         <Restriction:0x16fc65100 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16fc65040 name="IDENTITY" />
            <Enumeration:0x16fc65190 name="SUBSTRUCTURE" />
            <Enumeration:0x16fc651c0 name="SIMILARITY" />
         </Restriction>
      </Simple>
      <Simple:0x2b2710d60 name="StructureType">
         <Restriction:0x16fc65130 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16fc65160 name="MOLFILE" />
            <Enumeration:0x16fc65280 name="CML" />
            <Enumeration:0x16fc652b0 name="SMILES" />
         </Restriction>
      </Simple>
      <Simple:0x16fc651f0 name="RelationshipType">
         <Restriction:0x16fc65220 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16fc65250 name="is a" />
            <Enumeration:0x16fc65370 name="has part" />
            <Enumeration:0x16fc653a0 name="is conjugate base of" />
            <Enumeration:0x16fc653d0 name="is conjugate acid of" />
            <Enumeration:0x16fc65400 name="is tautomer of" />
            <Enumeration:0x16fc65430 name="is enantiomer of" />
            <Enumeration:0x16fc65460 name="has functional parent" />
            <Enumeration:0x16fc65490 name="has parent hydride" />
            <Enumeration:0x16fc654c0 name="is substituent group from" />
            <Enumeration:0x16fc654f0 name="has role" />
         </Restriction>
      </Simple>
      <Simple:0x16fc652e0 name="StarsCategory">
         <Restriction:0x16fc65310 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16fc65340 name="ALL" />
            <Enumeration:0x16fc655b0 name="TWO ONLY" />
            <Enumeration:0x16fc655e0 name="THREE ONLY" />
         </Restriction>
      </Simple>
      <Complex:0x16fc65520 name="getLiteEntity">
         <Sequence:0x16fc65550>
            <Element:0x16fc65580 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fc656a0 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16fc656d0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fc65700 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65610 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65730 name="getCompleteEntityResponse">
         <Sequence:0x16fc65640>
            <Element:0x16fc65760 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65670 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc657f0 name="getCompleteEntity">
         <Sequence:0x16fc65790>
            <Element:0x16fc65820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16fc657c0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc658b0 name="getCompleteEntityByListResponse">
         <Sequence:0x16fc65850>
            <Element:0x16fc658e0 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65880 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65970 name="getCompleteEntityByList">
         <Sequence:0x16fc65910>
            <Element:0x16fc659a0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65940 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65a30 name="getOntologyParentsResponse">
         <Sequence:0x16fc659d0>
            <Element:0x16fc65a60 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65a00 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65af0 name="getOntologyParents">
         <Sequence:0x16fc65a90>
            <Element:0x16fc65b20 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65ac0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65bb0 name="getOntologyChildrenResponse">
         <Sequence:0x16fc65b50>
            <Element:0x16fc65be0 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65b80 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65c70 name="getOntologyChildren">
         <Sequence:0x16fc65c10>
            <Element:0x16fc65ca0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65c40 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65d30 name="getAllOntologyChildrenInPathResponse">
         <Sequence:0x16fc65cd0>
            <Element:0x16fc65d60 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65d00 name="getAllOntologyChildrenInPathResponse" type="('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65df0 name="getAllOntologyChildrenInPath">
         <Sequence:0x16fc65d90>
            <Element:0x16fc65e20 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fc65eb0 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16fc65ee0 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65dc0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65f10 name="getStructureSearchResponse">
         <Sequence:0x16fc65e50>
            <Element:0x16fc65f40 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65e80 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fc65fd0 name="getStructureSearch">
         <Sequence:0x16fc65f70>
            <Element:0x16fe1b040 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fe1b0d0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16fe1b100 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16fe1b130 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fe1b160 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16fc65fa0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fe1b190 name="getUpdatedPolymer">
         <Sequence:0x16fe1b070>
            <Element:0x16fe1b1c0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fe1b250 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16fe1b0a0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fe1b280 name="getUpdatedPolymerResponse">
         <Sequence:0x16fe1b1f0>
            <Element:0x16fe1b2b0 name="return" type="('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16fe1b220 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Element:0x16fe1b340 name="ChebiWebServiceFault" type="('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16fe1b310 name="ChebiWebServiceFault">
         <Sequence:0x16fe1b2e0>
            <Element:0x16fe1b3a0 name="faultInfo" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fe1b430 name="message" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>

DEBUG:suds.xsd.schema:MERGED:
Schema:0x16fcf2bb0
(raw)
   <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://www.ebi.ac.uk/webservices/chebi">
      <xsd:complexType name="LiteEntity">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="chebiAsciiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="searchScore" type="xsd:float"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LiteEntityList">
         <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:LiteEntity"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OntologyDataItemList">
         <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:OntologyDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CommentDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="text" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="date" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="data" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="source" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StructureDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="structure" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dimension" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="defaultStructure" type="xsd:boolean"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OntologyDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="cyclicRelationship" type="xsd:boolean"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyElement" type="tns:OntologyDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CompoundOriginDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="speciesText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="speciesAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="componentText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="componentAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="strainText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="strainAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="SourceType" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="SourceAccession" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Entity">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiAsciiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="definition" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="smiles" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="inchi" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="inchiKey" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="charge" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mass" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monoisotopicMass" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="SecondaryChEBIIds" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Synonyms" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="IupacNames" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Formulae" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="RegistryNumbers" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Citations" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChemicalStructures" type="tns:StructureDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="DatabaseLinks" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyParents" type="tns:OntologyDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyChildren" type="tns:OntologyDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="GeneralComments" type="tns:CommentDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="CompoundOrigins" type="tns:CompoundOriginDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UpdatedPolymer">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="updatedStructure" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="globalFormula" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="globalCharge" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <complexType name="getLiteEntityResponse">
         <sequence>
            <element name="return" type="tns:LiteEntityList"/>
         </sequence>
      </complexType>
      <element name="getLiteEntityResponse" type="tns:getLiteEntityResponse"/>
      <simpleType name="SearchCategory">
         <restriction base="xsd:string">
            <enumeration value="ALL"/>
            <enumeration value="CHEBI ID"/>
            <enumeration value="CHEBI NAME"/>
            <enumeration value="DEFINITION"/>
            <enumeration value="ALL NAMES"/>
            <enumeration value="IUPAC NAME"/>
            <enumeration value="CITATIONS"/>
            <enumeration value="REGISTRY NUMBERS"/>
            <enumeration value="MANUAL XREFS"/>
            <enumeration value="AUTOMATIC XREFS"/>
            <enumeration value="FORMULA"/>
            <enumeration value="MASS"/>
            <enumeration value="MONOISOTOPIC MASS"/>
            <enumeration value="CHARGE"/>
            <enumeration value="INCHI/INCHI KEY"/>
            <enumeration value="SMILES"/>
            <enumeration value="SPECIES"/>
         </restriction>
      </simpleType>
      <simpleType name="StructureSearchCategory">
         <restriction base="xsd:string">
            <enumeration value="IDENTITY"/>
            <enumeration value="SUBSTRUCTURE"/>
            <enumeration value="SIMILARITY"/>
         </restriction>
      </simpleType>
      <simpleType name="StructureType">
         <restriction base="xsd:string">
            <enumeration value="MOLFILE"/>
            <enumeration value="CML"/>
            <enumeration value="SMILES"/>
         </restriction>
      </simpleType>
      <simpleType name="RelationshipType">
         <restriction base="xsd:string">
            <enumeration value="is a"/>
            <enumeration value="has part"/>
            <enumeration value="is conjugate base of"/>
            <enumeration value="is conjugate acid of"/>
            <enumeration value="is tautomer of"/>
            <enumeration value="is enantiomer of"/>
            <enumeration value="has functional parent"/>
            <enumeration value="has parent hydride"/>
            <enumeration value="is substituent group from"/>
            <enumeration value="has role"/>
         </restriction>
      </simpleType>
      <simpleType name="StarsCategory">
         <restriction base="xsd:string">
            <enumeration value="ALL"/>
            <enumeration value="TWO ONLY"/>
            <enumeration value="THREE ONLY"/>
         </restriction>
      </simpleType>
      <complexType name="getLiteEntity">
         <sequence>
            <element name="search" type="xsd:string"/>
            <element name="searchCategory" type="tns:SearchCategory"/>
            <element name="maximumResults" type="xsd:int"/>
            <element name="stars" type="tns:StarsCategory"/>
         </sequence>
      </complexType>
      <element name="getLiteEntity" type="tns:getLiteEntity"/>
      <complexType name="getCompleteEntityResponse">
         <sequence>
            <element name="return" type="tns:Entity"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityResponse" type="tns:getCompleteEntityResponse"/>
      <complexType name="getCompleteEntity">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntity" type="tns:getCompleteEntity"/>
      <complexType name="getCompleteEntityByListResponse">
         <sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:Entity"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityByListResponse" type="tns:getCompleteEntityByListResponse"/>
      <complexType name="getCompleteEntityByList">
         <sequence>
            <xsd:element maxOccurs="50" minOccurs="0" name="ListOfChEBIIds" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityByList" type="tns:getCompleteEntityByList"/>
      <complexType name="getOntologyParentsResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getOntologyParentsResponse" type="tns:getOntologyParentsResponse"/>
      <complexType name="getOntologyParents">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getOntologyParents" type="tns:getOntologyParents"/>
      <complexType name="getOntologyChildrenResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getOntologyChildrenResponse" type="tns:getOntologyChildrenResponse"/>
      <complexType name="getOntologyChildren">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getOntologyChildren" type="tns:getOntologyChildren"/>
      <complexType name="getAllOntologyChildrenInPathResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getAllOntologyChildrenInPathResponse" type="tns:getAllOntologyChildrenInPathResponse"/>
      <complexType name="getAllOntologyChildrenInPath">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
            <element name="relationshipType" type="tns:RelationshipType"/>
            <element name="structureOnly" type="xsd:boolean"/>
         </sequence>
      </complexType>
      <element name="getAllOntologyChildrenInPath" type="tns:getAllOntologyChildrenInPath"/>
      <complexType name="getStructureSearchResponse">
         <sequence>
            <element name="return" type="tns:LiteEntityList"/>
         </sequence>
      </complexType>
      <element name="getStructureSearchResponse" type="tns:getLiteEntityResponse"/>
      <complexType name="getStructureSearch">
         <sequence>
            <element name="structure" type="xsd:string"/>
            <element name="type" type="tns:StructureType"/>
            <element name="structureSearchCategory" type="tns:StructureSearchCategory"/>
            <element name="totalResults" type="xsd:int"/>
            <element name="tanimotoCutoff" type="xsd:float"/>
         </sequence>
      </complexType>
      <element name="getStructureSearch" type="tns:getStructureSearch"/>
      <complexType name="getUpdatedPolymer">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="1" name="polymerisationIndex" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getUpdatedPolymer" type="tns:getUpdatedPolymer"/>
      <complexType name="getUpdatedPolymerResponse">
         <sequence>
            <element name="return" type="tns:UpdatedPolymer"/>
         </sequence>
      </complexType>
      <element name="getUpdatedPolymerResponse" type="tns:getUpdatedPolymerResponse"/>
      <element name="ChebiWebServiceFault" type="tns:ChebiWebServiceFault"/>
      <complexType name="ChebiWebServiceFault">
         <sequence>
            <element name="faultInfo" type="xsd:string"/>
            <element name="message" type="xsd:string"/>
         </sequence>
      </complexType>
   </xsd:schema>
(model)
   <Complex:0x16fcf2ca0 name="LiteEntity">
      <Sequence:0x16fcf2d00>
         <Element:0x16fcf2d60 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fcf2df0 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fcf2e20 name="searchScore" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fcf2e50 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x16fcf2d30 name="LiteEntityList">
      <Sequence:0x16fcf2d90>
         <Element:0x16fcf2dc0 name="ListElement" type="('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16fcf2e80 name="OntologyDataItemList">
      <Sequence:0x16fcf2eb0>
         <Element:0x16fcf2ee0 name="ListElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16fcf2f10 name="CommentDataItem">
      <Sequence:0x16fcf2f40>
         <Element:0x16fcf2f70 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710070 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x16fcf2fa0 name="DataItem">
      <Sequence:0x2b27100a0>
         <Element:0x2b2710040 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710130 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710160 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710190 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16fcf2fd0 name="StructureDataItem">
      <Sequence:0x2b27100d0>
         <Element:0x2b2710100 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710250 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710280 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27102b0 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27102e0 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b27101c0 name="OntologyDataItem">
      <Sequence:0x2b27101f0>
         <Element:0x2b2710220 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27103a0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27103d0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710400 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710430 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710460 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710490 name="OntologyElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b2710310 name="CompoundOriginDataItem">
      <Sequence:0x2b2710340>
         <Element:0x2b2710370 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710550 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710580 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27105b0 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27105e0 name="strainText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710610 name="strainAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710640 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710670 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x2b27104c0 name="Entity">
      <Sequence:0x2b27104f0>
         <Element:0x2b2710520 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710730 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710760 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710790 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27107c0 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27107f0 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710820 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710850 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710880 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27108b0 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b27108e0 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710910 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710940 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710970 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b27109a0 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b27109d0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710a00 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710a30 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710a60 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710a90 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710ac0 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710af0 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b2710b20 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x2b27106a0 name="UpdatedPolymer">
      <Sequence:0x2b27106d0>
         <Element:0x2b2710700 name="updatedStructure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710be0 name="globalFormula" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710c10 name="globalCharge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b2710c40 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x2b2710b50 name="getLiteEntityResponse">
      <Sequence:0x2b2710b80>
         <Element:0x2b2710bb0 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b2710c70 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Simple:0x2b2710d00 name="SearchCategory">
      <Restriction:0x2b2710ca0 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x2b2710d30 name="ALL" />
         <Enumeration:0x2b2710dc0 name="CHEBI ID" />
         <Enumeration:0x2b2710df0 name="CHEBI NAME" />
         <Enumeration:0x2b2710e20 name="DEFINITION" />
         <Enumeration:0x2b2710e50 name="ALL NAMES" />
         <Enumeration:0x2b2710e80 name="IUPAC NAME" />
         <Enumeration:0x2b2710eb0 name="CITATIONS" />
         <Enumeration:0x2b2710ee0 name="REGISTRY NUMBERS" />
         <Enumeration:0x2b2710f10 name="MANUAL XREFS" />
         <Enumeration:0x2b2710f40 name="AUTOMATIC XREFS" />
         <Enumeration:0x2b2710f70 name="FORMULA" />
         <Enumeration:0x2b2710fa0 name="MASS" />
         <Enumeration:0x2b2710fd0 name="MONOISOTOPIC MASS" />
         <Enumeration:0x2b2710d90 name="CHARGE" />
         <Enumeration:0x16fc65070 name="INCHI/INCHI KEY" />
         <Enumeration:0x16fc650a0 name="SMILES" />
         <Enumeration:0x16fc650d0 name="SPECIES" />
      </Restriction>
   </Simple>
   <Simple:0x2b2710cd0 name="StructureSearchCategory">
      <Restriction:0x16fc65100 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16fc65040 name="IDENTITY" />
         <Enumeration:0x16fc65190 name="SUBSTRUCTURE" />
         <Enumeration:0x16fc651c0 name="SIMILARITY" />
      </Restriction>
   </Simple>
   <Simple:0x2b2710d60 name="StructureType">
      <Restriction:0x16fc65130 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16fc65160 name="MOLFILE" />
         <Enumeration:0x16fc65280 name="CML" />
         <Enumeration:0x16fc652b0 name="SMILES" />
      </Restriction>
   </Simple>
   <Simple:0x16fc651f0 name="RelationshipType">
      <Restriction:0x16fc65220 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16fc65250 name="is a" />
         <Enumeration:0x16fc65370 name="has part" />
         <Enumeration:0x16fc653a0 name="is conjugate base of" />
         <Enumeration:0x16fc653d0 name="is conjugate acid of" />
         <Enumeration:0x16fc65400 name="is tautomer of" />
         <Enumeration:0x16fc65430 name="is enantiomer of" />
         <Enumeration:0x16fc65460 name="has functional parent" />
         <Enumeration:0x16fc65490 name="has parent hydride" />
         <Enumeration:0x16fc654c0 name="is substituent group from" />
         <Enumeration:0x16fc654f0 name="has role" />
      </Restriction>
   </Simple>
   <Simple:0x16fc652e0 name="StarsCategory">
      <Restriction:0x16fc65310 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16fc65340 name="ALL" />
         <Enumeration:0x16fc655b0 name="TWO ONLY" />
         <Enumeration:0x16fc655e0 name="THREE ONLY" />
      </Restriction>
   </Simple>
   <Complex:0x16fc65520 name="getLiteEntity">
      <Sequence:0x16fc65550>
         <Element:0x16fc65580 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fc656a0 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16fc656d0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fc65700 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65610 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65730 name="getCompleteEntityResponse">
      <Sequence:0x16fc65640>
         <Element:0x16fc65760 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65670 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc657f0 name="getCompleteEntity">
      <Sequence:0x16fc65790>
         <Element:0x16fc65820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16fc657c0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc658b0 name="getCompleteEntityByListResponse">
      <Sequence:0x16fc65850>
         <Element:0x16fc658e0 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65880 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65970 name="getCompleteEntityByList">
      <Sequence:0x16fc65910>
         <Element:0x16fc659a0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65940 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65a30 name="getOntologyParentsResponse">
      <Sequence:0x16fc659d0>
         <Element:0x16fc65a60 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65a00 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65af0 name="getOntologyParents">
      <Sequence:0x16fc65a90>
         <Element:0x16fc65b20 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65ac0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65bb0 name="getOntologyChildrenResponse">
      <Sequence:0x16fc65b50>
         <Element:0x16fc65be0 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65b80 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65c70 name="getOntologyChildren">
      <Sequence:0x16fc65c10>
         <Element:0x16fc65ca0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65c40 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65d30 name="getAllOntologyChildrenInPathResponse">
      <Sequence:0x16fc65cd0>
         <Element:0x16fc65d60 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65d00 name="getAllOntologyChildrenInPathResponse" type="('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65df0 name="getAllOntologyChildrenInPath">
      <Sequence:0x16fc65d90>
         <Element:0x16fc65e20 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fc65eb0 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16fc65ee0 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65dc0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65f10 name="getStructureSearchResponse">
      <Sequence:0x16fc65e50>
         <Element:0x16fc65f40 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65e80 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fc65fd0 name="getStructureSearch">
      <Sequence:0x16fc65f70>
         <Element:0x16fe1b040 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fe1b0d0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16fe1b100 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16fe1b130 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fe1b160 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16fc65fa0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fe1b190 name="getUpdatedPolymer">
      <Sequence:0x16fe1b070>
         <Element:0x16fe1b1c0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fe1b250 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16fe1b0a0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fe1b280 name="getUpdatedPolymerResponse">
      <Sequence:0x16fe1b1f0>
         <Element:0x16fe1b2b0 name="return" type="('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16fe1b220 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Element:0x16fe1b340 name="ChebiWebServiceFault" type="('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16fe1b310 name="ChebiWebServiceFault">
      <Sequence:0x16fe1b2e0>
         <Element:0x16fe1b3a0 name="faultInfo" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fe1b430 name="message" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>

DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc657c0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc657c0, resolving: ('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b4f0"
   ref[] = 
      "getCompleteEntity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc657c0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc657f0 name="getCompleteEntity" />
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65670 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65670, resolving: ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b490"
   ref[] = 
      "getCompleteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65670 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65730 name="getCompleteEntityResponse" />
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65940 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65940, resolving: ('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b4f0"
   ref[] = 
      "getCompleteEntityByList",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65940 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65970 name="getCompleteEntityByList" />
DEBUG:suds.xsd.query:('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65880 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65880, resolving: ('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b490"
   ref[] = 
      "getCompleteEntityByListResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65880 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc658b0 name="getCompleteEntityByListResponse" />
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65610 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65610, resolving: ('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b4f0"
   ref[] = 
      "getLiteEntity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65610 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65520 name="getLiteEntity" />
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b2710c70 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b2710c70, resolving: ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b490"
   ref[] = 
      "getLiteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710c70 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b2710b50 name="getLiteEntityResponse" />
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65ac0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65ac0, resolving: ('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b4f0"
   ref[] = 
      "getOntologyParents",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65ac0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65af0 name="getOntologyParents" />
DEBUG:suds.xsd.query:('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65a00 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65a00, resolving: ('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b490"
   ref[] = 
      "getOntologyParentsResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65a00 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65a30 name="getOntologyParentsResponse" />
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65c40 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65c40, resolving: ('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b4f0"
   ref[] = 
      "getOntologyChildren",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65c40 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65c70 name="getOntologyChildren" />
DEBUG:suds.xsd.query:('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65b80 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65b80, resolving: ('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b490"
   ref[] = 
      "getOntologyChildrenResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65b80 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65bb0 name="getOntologyChildrenResponse" />
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65dc0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65dc0, resolving: ('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b4f0"
   ref[] = 
      "getAllOntologyChildrenInPath",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65dc0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65df0 name="getAllOntologyChildrenInPath" />
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b2710c70 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65fa0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65fa0, resolving: ('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b4f0"
   ref[] = 
      "getStructureSearch",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65fa0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65fd0 name="getStructureSearch" />
DEBUG:suds.xsd.query:('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65e80 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65e80, resolving: ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b490"
   ref[] = 
      "getLiteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65e80 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b2710b50 name="getLiteEntityResponse" />
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fe1b0a0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b0a0, resolving: ('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b4f0"
   ref[] = 
      "getUpdatedPolymer",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fe1b0a0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fe1b190 name="getUpdatedPolymer" />
DEBUG:suds.xsd.query:('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fe1b220 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b220, resolving: ('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b490"
   ref[] = 
      "getUpdatedPolymerResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fe1b220 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fe1b280 name="getUpdatedPolymerResponse" />
DEBUG:suds.wsdl:WSDL at 'http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl' loaded:
(Definitions){
   _WObject__resolved = False
   id = "Definitions:0x16fee0a00"
   options = Definitions:
	cache: classes=(<class 'suds.cache.Cache'>,), default=<suds.cache.NoCache object at 0x16fef8c70>
	documentStore: classes=(<class 'suds.store.DocumentStore'>,), default=<suds.store.DocumentStore object at 0x2b24931f0>
	extraArgumentErrors: classes=(<class 'bool'>,), default=True
	allowUnknownMessageParts: classes=(<class 'bool'>,), default=False
	faults: classes=(<class 'bool'>,), default=True
	transport: classes=(<class 'suds.transport.Transport'>,), default=None
	service: classes=(<class 'int'>, <class 'str'>), default=None
	port: classes=(<class 'int'>, <class 'str'>), default=None
	location: classes=(<class 'str'>,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(<class 'suds.wsse.Security'>,), default=None
	doctor: classes=(<class 'suds.xsd.doctor.Doctor'>,), default=None
	xstq: classes=(<class 'bool'>,), default=True
	prefixes: classes=(<class 'bool'>,), default=True
	retxml: classes=(<class 'bool'>,), default=False
	prettyxml: classes=(<class 'bool'>,), default=False
	autoblend: classes=(<class 'bool'>,), default=False
	cachingpolicy: classes=(<class 'int'>,), default=0
	plugins: classes=(<class 'list'>, <class 'tuple'>), default=[]
	nosend: classes=(<class 'bool'>,), default=False
	unwrap: classes=(<class 'bool'>,), default=True
	sortNamespaces: classes=(<class 'bool'>,), default=True
Content:
	('cache', <suds.cache.ObjectCache object at 0x16fee08b0>)
	('documentStore', <suds.store.DocumentStore object at 0x2b24931f0>)
	('extraArgumentErrors', True)
	('allowUnknownMessageParts', False)
	('faults', True)
	('transport', <suds.transport.https.HttpAuthenticated object at 0x16fee04c0>)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
	('sortNamespaces', True)
Linked:
Definitions:
	proxy: classes=(<class 'dict'>,), default={}
	timeout: classes=(<class 'int'>, <class 'float'>), default=90
	headers: classes=(<class 'dict'>,), default={}
	username: classes=(<class 'str'>,), default=None
	password: classes=(<class 'str'>,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(<class 'suds.cache.Cache'>,), default=<suds.cache.NoCache object at 0x16fef8c70>
	documentStore: classes=(<class 'suds.store.DocumentStore'>,), default=<suds.store.DocumentStore object at 0x2b24931f0>
	extraArgumentErrors: classes=(<class 'bool'>,), default=True
	allowUnknownMessageParts: classes=(<class 'bool'>,), default=False
	faults: classes=(<class 'bool'>,), default=True
	transport: classes=(<class 'suds.transport.Transport'>,), default=None
	service: classes=(<class 'int'>, <class 'str'>), default=None
	port: classes=(<class 'int'>, <class 'str'>), default=None
	location: classes=(<class 'str'>,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(<class 'suds.wsse.Security'>,), default=None
	doctor: classes=(<class 'suds.xsd.doctor.Doctor'>,), default=None
	xstq: classes=(<class 'bool'>,), default=True
	prefixes: classes=(<class 'bool'>,), default=True
	retxml: classes=(<class 'bool'>,), default=False
	prettyxml: classes=(<class 'bool'>,), default=False
	autoblend: classes=(<class 'bool'>,), default=False
	cachingpolicy: classes=(<class 'int'>,), default=0
	plugins: classes=(<class 'list'>, <class 'tuple'>), default=[]
	nosend: classes=(<class 'bool'>,), default=False
	unwrap: classes=(<class 'bool'>,), default=True
	sortNamespaces: classes=(<class 'bool'>,), default=True
Content:
	('cache', <suds.cache.ObjectCache object at 0x16fee08b0>)
	('documentStore', <suds.store.DocumentStore object at 0x2b24931f0>)
	('extraArgumentErrors', True)
	('allowUnknownMessageParts', False)
	('faults', True)
	('transport', <suds.transport.https.HttpAuthenticated object at 0x16fee04c0>)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
	('sortNamespaces', True)
   url = "http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl"
   tns[] = 
      "tns",
      "https://www.ebi.ac.uk/webservices/chebi",
   types[] = 
      (Types){
         _WObject__resolved = True
         definitions = (Definitions)...
      },
   schema = "<Schema:0x16fcf2bb0 tns="https://www.ebi.ac.uk/webservices/chebi"/>"
   imports[] = <empty>
   messages = 
      {
         (getLiteEntity, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getLiteEntity"
               qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getLiteEntity"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getLiteEntityResponse"
               qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getLiteEntityResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntity"
               qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getCompleteEntity"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityResponse"
               qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getCompleteEntityResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityByList"
               qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityByListResponse"
               qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyParents, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyParents"
               qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getOntologyParents"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyParentsResponse"
               qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getOntologyParentsResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyChildren"
               qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getOntologyChildren"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyChildrenResponse"
               qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getAllOntologyChildrenInPath"
               qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getAllOntologyChildrenInPathResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getAllOntologyChildrenInPathResponse"
               qname = "(getAllOntologyChildrenInPathResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getAllOntologyChildrenInPathResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getStructureSearch, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getStructureSearch"
               qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getStructureSearch"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getStructureSearchResponse"
               qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getStructureSearchResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getUpdatedPolymer"
               qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getUpdatedPolymerResponse"
               qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "chebiWebServiceFault"
               qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                     _WObject__resolved = False
                     name = "ChebiWebServiceFault"
                     qname[] = 
                        "ChebiWebServiceFault",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (PortType){
               _WObject__resolved = True
               name = "ChebiWebServicePortType"
               qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
               operations = 
                  {
                     getLiteEntity = 
                        (Operation){
                           name = "getLiteEntity"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntity"
                                 qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getLiteEntity"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntityResponse"
                                 qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getLiteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getCompleteEntity = 
                        (Operation){
                           name = "getCompleteEntity"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntity"
                                 qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getCompleteEntity"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityResponse"
                                 qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getCompleteEntityByList = 
                        (Operation){
                           name = "getCompleteEntityByList"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityByList"
                                 qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityByListResponse"
                                 qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getOntologyParents = 
                        (Operation){
                           name = "getOntologyParents"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyParents"
                                 qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getOntologyParents"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyParentsResponse"
                                 qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getOntologyChildren = 
                        (Operation){
                           name = "getOntologyChildren"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyChildren"
                                 qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getOntologyChildren"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyChildrenResponse"
                                 qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getAllOntologyChildrenInPath = 
                        (Operation){
                           name = "getAllOntologyChildrenInPath"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getAllOntologyChildrenInPath"
                                 qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntityResponse"
                                 qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getLiteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getStructureSearch = 
                        (Operation){
                           name = "getStructureSearch"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getStructureSearch"
                                 qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getStructureSearch"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getStructureSearchResponse"
                                 qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getStructureSearchResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getUpdatedPolymer = 
                        (Operation){
                           name = "getUpdatedPolymer"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getUpdatedPolymer"
                                 qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getUpdatedPolymerResponse"
                                 qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                  }
            }
      }
   bindings = 
      {
         (ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Binding){
               _WObject__resolved = True
               name = "ChebiWebServiceBinding"
               qname = "(ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi)"
               operations = 
                  {
                     getCompleteEntity = 
                        (Operation){
                           name = "getCompleteEntity"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntityByList = 
                        (Operation){
                           name = "getCompleteEntityByList"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getLiteEntity = 
                        (Operation){
                           name = "getLiteEntity"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyParents = 
                        (Operation){
                           name = "getOntologyParents"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyChildren = 
                        (Operation){
                           name = "getOntologyChildren"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getAllOntologyChildrenInPath = 
                        (Operation){
                           name = "getAllOntologyChildrenInPath"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getStructureSearch = 
                        (Operation){
                           name = "getStructureSearch"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getUpdatedPolymer = 
                        (Operation){
                           name = "getUpdatedPolymer"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                  }
               type = 
                  (PortType){
                     _WObject__resolved = True
                     name = "ChebiWebServicePortType"
                     qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
                     operations = 
                        {
                           getLiteEntity = 
                              (Operation){
                                 name = "getLiteEntity"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntity"
                                       qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getLiteEntity"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntityResponse"
                                       qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getLiteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getCompleteEntity = 
                              (Operation){
                                 name = "getCompleteEntity"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntity"
                                       qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getCompleteEntity"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityResponse"
                                       qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getCompleteEntityByList = 
                              (Operation){
                                 name = "getCompleteEntityByList"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityByList"
                                       qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityByListResponse"
                                       qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getOntologyParents = 
                              (Operation){
                                 name = "getOntologyParents"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyParents"
                                       qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getOntologyParents"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyParentsResponse"
                                       qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getOntologyChildren = 
                              (Operation){
                                 name = "getOntologyChildren"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyChildren"
                                       qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getOntologyChildren"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyChildrenResponse"
                                       qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getAllOntologyChildrenInPath = 
                              (Operation){
                                 name = "getAllOntologyChildrenInPath"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getAllOntologyChildrenInPath"
                                       qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntityResponse"
                                       qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getLiteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getStructureSearch = 
                              (Operation){
                                 name = "getStructureSearch"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getStructureSearch"
                                       qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getStructureSearch"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getStructureSearchResponse"
                                       qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getStructureSearchResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getUpdatedPolymer = 
                              (Operation){
                                 name = "getUpdatedPolymer"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getUpdatedPolymer"
                                       qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getUpdatedPolymerResponse"
                                       qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         _WObject__resolved = True
         name = "ChebiWebServiceService"
         qname = "(ChebiWebServiceService, https://www.ebi.ac.uk/webservices/chebi)"
         ports[] = 
            (Port){
               _WObject__resolved = False
               name = "ChebiWebServicePort"
               qname = "(ChebiWebServicePort, https://www.ebi.ac.uk/webservices/chebi)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     _WObject__resolved = True
                     name = "ChebiWebServiceBinding"
                     qname = "(ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi)"
                     operations = 
                        {
                           getCompleteEntity = 
                              (Operation){
                                 name = "getCompleteEntity"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getCompleteEntityByList = 
                              (Operation){
                                 name = "getCompleteEntityByList"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getLiteEntity = 
                              (Operation){
                                 name = "getLiteEntity"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getLiteEntity"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getOntologyParents = 
                              (Operation){
                                 name = "getOntologyParents"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getOntologyParents"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getOntologyChildren = 
                              (Operation){
                                 name = "getOntologyChildren"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getAllOntologyChildrenInPath = 
                              (Operation){
                                 name = "getAllOntologyChildrenInPath"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getStructureSearch = 
                              (Operation){
                                 name = "getStructureSearch"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getStructureSearch"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getUpdatedPolymer = 
                              (Operation){
                                 name = "getUpdatedPolymer"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           _WObject__resolved = True
                           name = "ChebiWebServicePortType"
                           qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
                           operations = 
                              {
                                 getLiteEntity = 
                                    (Operation){
                                       name = "getLiteEntity"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntity"
                                             qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntityResponse"
                                             qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getCompleteEntity = 
                                    (Operation){
                                       name = "getCompleteEntity"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntity"
                                             qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityResponse"
                                             qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getCompleteEntityByList = 
                                    (Operation){
                                       name = "getCompleteEntityByList"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityByList"
                                             qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityByListResponse"
                                             qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getOntologyParents = 
                                    (Operation){
                                       name = "getOntologyParents"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyParents"
                                             qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyParentsResponse"
                                             qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getOntologyChildren = 
                                    (Operation){
                                       name = "getOntologyChildren"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyChildren"
                                             qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyChildrenResponse"
                                             qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getAllOntologyChildrenInPath = 
                                    (Operation){
                                       name = "getAllOntologyChildrenInPath"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getAllOntologyChildrenInPath"
                                             qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntityResponse"
                                             qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getStructureSearch = 
                                    (Operation){
                                       name = "getStructureSearch"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getStructureSearch"
                                             qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getStructureSearchResponse"
                                             qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getUpdatedPolymer = 
                                    (Operation){
                                       name = "getUpdatedPolymer"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getUpdatedPolymer"
                                             qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getUpdatedPolymerResponse"
                                             qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
               methods = 
                  {
                     getLiteEntity = 
                        (Method){
                           name = "getLiteEntity"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16fcf2cd0>
                                 output = <suds.bindings.document.Document object at 0x16fcf2cd0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntity = 
                        (Method){
                           name = "getCompleteEntity"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16fcf2cd0>
                                 output = <suds.bindings.document.Document object at 0x16fcf2cd0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntityByList = 
                        (Method){
                           name = "getCompleteEntityByList"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16fcf2cd0>
                                 output = <suds.bindings.document.Document object at 0x16fcf2cd0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyParents = 
                        (Method){
                           name = "getOntologyParents"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16fcf2cd0>
                                 output = <suds.bindings.document.Document object at 0x16fcf2cd0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyChildren = 
                        (Method){
                           name = "getOntologyChildren"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16fcf2cd0>
                                 output = <suds.bindings.document.Document object at 0x16fcf2cd0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getAllOntologyChildrenInPath = 
                        (Method){
                           name = "getAllOntologyChildrenInPath"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16fcf2cd0>
                                 output = <suds.bindings.document.Document object at 0x16fcf2cd0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getStructureSearch = 
                        (Method){
                           name = "getStructureSearch"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16fcf2cd0>
                                 output = <suds.bindings.document.Document object at 0x16fcf2cd0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getUpdatedPolymer = 
                        (Method){
                           name = "getUpdatedPolymer"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16fcf2cd0>
                                 output = <suds.bindings.document.Document object at 0x16fcf2cd0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                  }
            },
      },
 }
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc657c0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getCompleteEntity' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65940 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getCompleteEntityByList' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65610 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getLiteEntity' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65ac0 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getOntologyParents' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65c40 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getOntologyChildren' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65dc0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getAllOntologyChildrenInPath' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65fa0 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getStructureSearch' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fe1b0a0 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getUpdatedPolymer' created: started: 1686224054 (running)
DEBUG:suds.xsd.sxbasic:Element:0x16fc65e20, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fc65e20 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16fc65eb0, resolving: ('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "RelationshipType",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65eb0 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x16fc651f0 name="RelationshipType" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65ee0, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fc65ee0 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (boolean)
DEBUG:suds.xsd.sxbasic:Element:0x16fc65820, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fc65820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16fc659a0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fc659a0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16fc65580, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fc65580 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16fc656a0, resolving: ('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "SearchCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc656a0 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x2b2710d00 name="SearchCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc656d0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fc656d0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (int)
DEBUG:suds.xsd.sxbasic:Element:0x16fc65700, resolving: ('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "StarsCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65700 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x16fc652e0 name="StarsCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65ca0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fc65ca0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16fc65b20, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fc65b20 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b040, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fe1b040 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b0d0, resolving: ('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "StructureType",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fe1b0d0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureType', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x2b2710d60 name="StructureType" />
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b100, resolving: ('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "StructureSearchCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fe1b100 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x2b2710cd0 name="StructureSearchCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b130, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fe1b130 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (int)
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b160, resolving: ('float', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "float",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fe1b160 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (float)
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b1c0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fe1b1c0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16fe1b250, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fe1b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fe1b250 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fe1b610, found builtin (string)
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc657c0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc657c0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.mx.core:processing:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x16fc65820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x16fe1b3d0 />
 }
DEBUG:suds.mx.core:appending parent:
<?xml version="1.0" encoding="UTF-8"?>
content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x16fc65820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x16fe1b3d0 />
 }
DEBUG:suds.mx.literal:starting content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x16fc65820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x16fe1b3d0 />
 }
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x16ff70310>)
<suds.resolver.Frame object at 0x16ff70310>
DEBUG:suds.mx.literal:created - node:
<tns:chebiId xmlns:tns="https://www.ebi.ac.uk/webservices/chebi"/>
DEBUG:suds.mx.literal:ending content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x16fc65820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x16fe1b3d0 />
   ancestry[] = <empty>
 }
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x16ff70310>)

DEBUG:suds.metrics:message for 'getCompleteEntity' created: 0 (ms)
DEBUG:suds.client:sending to (http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice)
message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="https://www.ebi.ac.uk/webservices/chebi">
   <SOAP-ENV:Header/>
   <ns0:Body>
      <ns1:getCompleteEntity>
         <ns1:chebiId>CHEBI:27732</ns1:chebiId>
      </ns1:getCompleteEntity>
   </ns0:Body>
</SOAP-ENV:Envelope>
DEBUG:suds.client:headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'""'}
DEBUG:suds.transport.http:sending:
URL: http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'""', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'""'}
MESSAGE:
<?xml version="1.0" encoding="UTF-8"?><SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="https://www.ebi.ac.uk/webservices/chebi"><SOAP-ENV:Header/><ns0:Body><ns1:getCompleteEntity><ns1:chebiId>CHEBI:27732</ns1:chebiId></ns1:getCompleteEntity></ns0:Body></SOAP-ENV:Envelope>
DEBUG:suds.wsdl:reading WSDL at: http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl ...
DEBUG:suds.xsd.sxbase:Element:0x16ff93820, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff93670, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff935e0, convert type='xsd:float' to ('float', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff93550, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff93730, convert type='tns:LiteEntity' to ('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff933a0, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff931f0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff93070, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89f40, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89d00, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89c70, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89be0, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff89dc0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff899a0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89940, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89880, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff897f0, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff89a30, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff895b0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89520, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff894c0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89400, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89370, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff892e0, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff89640, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89070, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff89130, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7ff10, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7feb0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7fe50, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7fd90, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7fd00, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7ffa0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7fa60, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f9d0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f970, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f910, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f850, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f7c0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f700, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f670, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f5e0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f550, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f490, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f400, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f370, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f310, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f2b0, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f1f0, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f160, convert type='tns:StructureDataItem' to ('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff7f0a0, convert type='tns:DataItem' to ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff7fb20, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff75f10, convert type='tns:OntologyDataItem' to ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff75e80, convert type='tns:CommentDataItem' to ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff75dc0, convert type='tns:CompoundOriginDataItem' to ('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff75fd0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff75b20, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff75a90, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff75a00, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff75be0, convert type='tns:LiteEntityList' to ('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff759a0, convert type='tns:getLiteEntityResponse' to ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Restriction:0x16ff75940, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b26f4190, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x16ff6db50, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b26f40d0, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x16ff6dac0, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b26f4190, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x16ff6d7c0, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b26f40d0, found builtin (string)
DEBUG:suds.xsd.sxbase:Restriction:0x16ff64e80, convert ref='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.query:TypeQuery:0x2b26f4190, found builtin (string)
DEBUG:suds.xsd.sxbase:Element:0x16ff64dc0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff64a30, convert type='tns:SearchCategory' to ('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff649d0, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff64910, convert type='tns:StarsCategory' to ('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff64bb0, convert type='tns:getLiteEntity' to ('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff647c0, convert type='tns:Entity' to ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff64a90, convert type='tns:getCompleteEntityResponse' to ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff64580, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff646a0, convert type='tns:getCompleteEntity' to ('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff64340, convert type='tns:Entity' to ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16ff644c0, convert type='tns:getCompleteEntityByListResponse' to ('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270bfd0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16ff641f0, convert type='tns:getCompleteEntityByList' to ('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270be50, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270bf70, convert type='tns:getOntologyParentsResponse' to ('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270bbe0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b270bd00, convert type='tns:getOntologyParents' to ('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270b9d0, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270bb20, convert type='tns:getOntologyChildrenResponse' to ('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270b790, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b270b880, convert type='tns:getOntologyChildren' to ('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270b520, convert type='tns:OntologyDataItemList' to ('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270b670, convert type='tns:getAllOntologyChildrenInPathResponse' to ('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270b280, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b270b0a0, convert type='tns:RelationshipType' to ('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b270b130, convert type='xsd:boolean' to ('boolean', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b270b3d0, convert type='tns:getAllOntologyChildrenInPath' to ('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4f10, convert type='tns:LiteEntityList' to ('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4fd0, convert type='tns:getLiteEntityResponse' to ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4c40, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4af0, convert type='tns:StructureType' to ('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4a30, convert type='tns:StructureSearchCategory' to ('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4970, convert type='xsd:int' to ('int', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b26f48b0, convert type='xsd:float' to ('float', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4d90, convert type='tns:getStructureSearch' to ('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4730, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b26f44f0, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4b50, convert type='tns:getUpdatedPolymer' to ('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f4370, convert type='tns:UpdatedPolymer' to ('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f45b0, convert type='tns:getUpdatedPolymerResponse' to ('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x2b26f41f0, convert type='tns:ChebiWebServiceFault' to ('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')
DEBUG:suds.xsd.sxbase:Element:0x16fcf8730, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.sxbase:Element:0x16fcf8d30, convert type='xsd:string' to ('string', 'http://www.w3.org/2001/XMLSchema')
DEBUG:suds.xsd.schema:loaded:

schema collection
   Schema:0x16ff93d90
   (raw)
      <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://www.ebi.ac.uk/webservices/chebi">
         <xsd:complexType name="LiteEntity">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="chebiAsciiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="searchScore" type="xsd:float"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="LiteEntityList">
            <xsd:sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:LiteEntity"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="OntologyDataItemList">
            <xsd:sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:OntologyDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="CommentDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="text" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="date" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="DataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="data" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="source" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="StructureDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="structure" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="dimension" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="defaultStructure" type="xsd:boolean"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="OntologyDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="cyclicRelationship" type="xsd:boolean"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyElement" type="tns:OntologyDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="CompoundOriginDataItem">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="speciesText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="speciesAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="componentText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="componentAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="strainText" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="strainAccession" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="SourceType" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="SourceAccession" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="Entity">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiAsciiName" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="definition" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="smiles" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="inchi" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="inchiKey" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="charge" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="mass" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="monoisotopicMass" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="SecondaryChEBIIds" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Synonyms" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="IupacNames" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Formulae" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="RegistryNumbers" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="Citations" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChemicalStructures" type="tns:StructureDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="DatabaseLinks" type="tns:DataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyParents" type="tns:OntologyDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyChildren" type="tns:OntologyDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="GeneralComments" type="tns:CommentDataItem"/>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="CompoundOrigins" type="tns:CompoundOriginDataItem"/>
            </xsd:sequence>
         </xsd:complexType>
         <xsd:complexType name="UpdatedPolymer">
            <xsd:sequence>
               <xsd:element maxOccurs="1" minOccurs="1" name="updatedStructure" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="globalFormula" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="globalCharge" type="xsd:string"/>
               <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            </xsd:sequence>
         </xsd:complexType>
         <complexType name="getLiteEntityResponse">
            <sequence>
               <element name="return" type="tns:LiteEntityList"/>
            </sequence>
         </complexType>
         <element name="getLiteEntityResponse" type="tns:getLiteEntityResponse"/>
         <simpleType name="SearchCategory">
            <restriction base="xsd:string">
               <enumeration value="ALL"/>
               <enumeration value="CHEBI ID"/>
               <enumeration value="CHEBI NAME"/>
               <enumeration value="DEFINITION"/>
               <enumeration value="ALL NAMES"/>
               <enumeration value="IUPAC NAME"/>
               <enumeration value="CITATIONS"/>
               <enumeration value="REGISTRY NUMBERS"/>
               <enumeration value="MANUAL XREFS"/>
               <enumeration value="AUTOMATIC XREFS"/>
               <enumeration value="FORMULA"/>
               <enumeration value="MASS"/>
               <enumeration value="MONOISOTOPIC MASS"/>
               <enumeration value="CHARGE"/>
               <enumeration value="INCHI/INCHI KEY"/>
               <enumeration value="SMILES"/>
               <enumeration value="SPECIES"/>
            </restriction>
         </simpleType>
         <simpleType name="StructureSearchCategory">
            <restriction base="xsd:string">
               <enumeration value="IDENTITY"/>
               <enumeration value="SUBSTRUCTURE"/>
               <enumeration value="SIMILARITY"/>
            </restriction>
         </simpleType>
         <simpleType name="StructureType">
            <restriction base="xsd:string">
               <enumeration value="MOLFILE"/>
               <enumeration value="CML"/>
               <enumeration value="SMILES"/>
            </restriction>
         </simpleType>
         <simpleType name="RelationshipType">
            <restriction base="xsd:string">
               <enumeration value="is a"/>
               <enumeration value="has part"/>
               <enumeration value="is conjugate base of"/>
               <enumeration value="is conjugate acid of"/>
               <enumeration value="is tautomer of"/>
               <enumeration value="is enantiomer of"/>
               <enumeration value="has functional parent"/>
               <enumeration value="has parent hydride"/>
               <enumeration value="is substituent group from"/>
               <enumeration value="has role"/>
            </restriction>
         </simpleType>
         <simpleType name="StarsCategory">
            <restriction base="xsd:string">
               <enumeration value="ALL"/>
               <enumeration value="TWO ONLY"/>
               <enumeration value="THREE ONLY"/>
            </restriction>
         </simpleType>
         <complexType name="getLiteEntity">
            <sequence>
               <element name="search" type="xsd:string"/>
               <element name="searchCategory" type="tns:SearchCategory"/>
               <element name="maximumResults" type="xsd:int"/>
               <element name="stars" type="tns:StarsCategory"/>
            </sequence>
         </complexType>
         <element name="getLiteEntity" type="tns:getLiteEntity"/>
         <complexType name="getCompleteEntityResponse">
            <sequence>
               <element name="return" type="tns:Entity"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityResponse" type="tns:getCompleteEntityResponse"/>
         <complexType name="getCompleteEntity">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntity" type="tns:getCompleteEntity"/>
         <complexType name="getCompleteEntityByListResponse">
            <sequence>
               <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:Entity"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityByListResponse" type="tns:getCompleteEntityByListResponse"/>
         <complexType name="getCompleteEntityByList">
            <sequence>
               <xsd:element maxOccurs="50" minOccurs="0" name="ListOfChEBIIds" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getCompleteEntityByList" type="tns:getCompleteEntityByList"/>
         <complexType name="getOntologyParentsResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getOntologyParentsResponse" type="tns:getOntologyParentsResponse"/>
         <complexType name="getOntologyParents">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getOntologyParents" type="tns:getOntologyParents"/>
         <complexType name="getOntologyChildrenResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getOntologyChildrenResponse" type="tns:getOntologyChildrenResponse"/>
         <complexType name="getOntologyChildren">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getOntologyChildren" type="tns:getOntologyChildren"/>
         <complexType name="getAllOntologyChildrenInPathResponse">
            <sequence>
               <element name="return" type="tns:OntologyDataItemList"/>
            </sequence>
         </complexType>
         <element name="getAllOntologyChildrenInPathResponse" type="tns:getAllOntologyChildrenInPathResponse"/>
         <complexType name="getAllOntologyChildrenInPath">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
               <element name="relationshipType" type="tns:RelationshipType"/>
               <element name="structureOnly" type="xsd:boolean"/>
            </sequence>
         </complexType>
         <element name="getAllOntologyChildrenInPath" type="tns:getAllOntologyChildrenInPath"/>
         <complexType name="getStructureSearchResponse">
            <sequence>
               <element name="return" type="tns:LiteEntityList"/>
            </sequence>
         </complexType>
         <element name="getStructureSearchResponse" type="tns:getLiteEntityResponse"/>
         <complexType name="getStructureSearch">
            <sequence>
               <element name="structure" type="xsd:string"/>
               <element name="type" type="tns:StructureType"/>
               <element name="structureSearchCategory" type="tns:StructureSearchCategory"/>
               <element name="totalResults" type="xsd:int"/>
               <element name="tanimotoCutoff" type="xsd:float"/>
            </sequence>
         </complexType>
         <element name="getStructureSearch" type="tns:getStructureSearch"/>
         <complexType name="getUpdatedPolymer">
            <sequence>
               <element name="chebiId" type="xsd:string"/>
               <xsd:element maxOccurs="unbounded" minOccurs="1" name="polymerisationIndex" type="xsd:string"/>
            </sequence>
         </complexType>
         <element name="getUpdatedPolymer" type="tns:getUpdatedPolymer"/>
         <complexType name="getUpdatedPolymerResponse">
            <sequence>
               <element name="return" type="tns:UpdatedPolymer"/>
            </sequence>
         </complexType>
         <element name="getUpdatedPolymerResponse" type="tns:getUpdatedPolymerResponse"/>
         <element name="ChebiWebServiceFault" type="tns:ChebiWebServiceFault"/>
         <complexType name="ChebiWebServiceFault">
            <sequence>
               <element name="faultInfo" type="xsd:string"/>
               <element name="message" type="xsd:string"/>
            </sequence>
         </complexType>
      </xsd:schema>
   (model)
      <Complex:0x16ff93a60 name="LiteEntity">
         <Sequence:0x16ff93970>
            <Element:0x16ff93820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff93670 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff935e0 name="searchScore" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff93550 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff938b0 name="LiteEntityList">
         <Sequence:0x16ff93790>
            <Element:0x16ff93730 name="ListElement" type="('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff934f0 name="OntologyDataItemList">
         <Sequence:0x16ff93430>
            <Element:0x16ff933a0 name="ListElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff93310 name="CommentDataItem">
         <Sequence:0x16ff932b0>
            <Element:0x16ff931f0 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff93070 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff93160 name="DataItem">
         <Sequence:0x16ff89eb0>
            <Element:0x16ff89f40 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89d00 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89c70 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89be0 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff930d0 name="StructureDataItem">
         <Sequence:0x16ff89e20>
            <Element:0x16ff89dc0 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff899a0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89940 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89880 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff897f0 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff89b80 name="OntologyDataItem">
         <Sequence:0x16ff89ac0>
            <Element:0x16ff89a30 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff895b0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89520 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff894c0 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89400 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89370 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff892e0 name="OntologyElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff89760 name="CompoundOriginDataItem">
         <Sequence:0x16ff89700>
            <Element:0x16ff89640 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89070 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff89130 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7ff10 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7feb0 name="strainText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7fe50 name="strainAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7fd90 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7fd00 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff89280 name="Entity">
         <Sequence:0x16ff7fc40>
            <Element:0x16ff7ffa0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7fa60 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f9d0 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f970 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f910 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f850 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f7c0 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f700 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f670 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f5e0 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f550 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f490 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff7f400 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff7f370 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff7f310 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff7f2b0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff7f1f0 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff7f160 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff7f0a0 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff7fb20 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff75f10 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff75e80 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff75dc0 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff891c0 name="UpdatedPolymer">
         <Sequence:0x16ff75d30>
            <Element:0x16ff75fd0 name="updatedStructure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff75b20 name="globalFormula" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff75a90 name="globalCharge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff75a00 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Complex:0x16ff7fbb0 name="getLiteEntityResponse">
         <Sequence:0x16ff75c70>
            <Element:0x16ff75be0 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16ff759a0 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Simple:0x16ff757c0 name="SearchCategory">
         <Restriction:0x16ff75940 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16ff75730 name="ALL" />
            <Enumeration:0x16ff755b0 name="CHEBI ID" />
            <Enumeration:0x16ff75550 name="CHEBI NAME" />
            <Enumeration:0x16ff75460 name="DEFINITION" />
            <Enumeration:0x16ff753d0 name="ALL NAMES" />
            <Enumeration:0x16ff75310 name="IUPAC NAME" />
            <Enumeration:0x16ff75280 name="CITATIONS" />
            <Enumeration:0x16ff751c0 name="REGISTRY NUMBERS" />
            <Enumeration:0x16ff75130 name="MANUAL XREFS" />
            <Enumeration:0x16ff75070 name="AUTOMATIC XREFS" />
            <Enumeration:0x16ff75610 name="FORMULA" />
            <Enumeration:0x16ff6df10 name="MASS" />
            <Enumeration:0x16ff6deb0 name="MONOISOTOPIC MASS" />
            <Enumeration:0x16ff6de50 name="CHARGE" />
            <Enumeration:0x16ff6dd60 name="INCHI/INCHI KEY" />
            <Enumeration:0x16ff6dca0 name="SMILES" />
            <Enumeration:0x16ff6dbe0 name="SPECIES" />
         </Restriction>
      </Simple>
      <Simple:0x16ff75880 name="StructureSearchCategory">
         <Restriction:0x16ff6db50 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16ff6dfa0 name="IDENTITY" />
            <Enumeration:0x16ff6d9d0 name="SUBSTRUCTURE" />
            <Enumeration:0x16ff6d910 name="SIMILARITY" />
         </Restriction>
      </Simple>
      <Simple:0x16ff756a0 name="StructureType">
         <Restriction:0x16ff6dac0 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16ff6da60 name="MOLFILE" />
            <Enumeration:0x16ff6d6a0 name="CML" />
            <Enumeration:0x16ff6d640 name="SMILES" />
         </Restriction>
      </Simple>
      <Simple:0x16ff6d880 name="RelationshipType">
         <Restriction:0x16ff6d7c0 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16ff6d730 name="is a" />
            <Enumeration:0x16ff6d3d0 name="has part" />
            <Enumeration:0x16ff6d340 name="is conjugate base of" />
            <Enumeration:0x16ff6d2b0 name="is conjugate acid of" />
            <Enumeration:0x16ff6d250 name="is tautomer of" />
            <Enumeration:0x16ff6d1f0 name="is enantiomer of" />
            <Enumeration:0x16ff6d130 name="has functional parent" />
            <Enumeration:0x16ff6d0a0 name="has parent hydride" />
            <Enumeration:0x16ff6d490 name="is substituent group from" />
            <Enumeration:0x16ff64f10 name="has role" />
         </Restriction>
      </Simple>
      <Simple:0x16ff6d5e0 name="StarsCategory">
         <Restriction:0x16ff64e80 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
            <Enumeration:0x16ff64fa0 name="ALL" />
            <Enumeration:0x16ff64d00 name="TWO ONLY" />
            <Enumeration:0x16ff64c70 name="THREE ONLY" />
         </Restriction>
      </Simple>
      <Complex:0x16ff6d520 name="getLiteEntity">
         <Sequence:0x16ff64e20>
            <Element:0x16ff64dc0 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff64a30 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x16ff649d0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16ff64910 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16ff64bb0 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16ff64880 name="getCompleteEntityResponse">
         <Sequence:0x16ff64b20>
            <Element:0x16ff647c0 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16ff64a90 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16ff64610 name="getCompleteEntity">
         <Sequence:0x16ff64730>
            <Element:0x16ff64580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16ff646a0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16ff643d0 name="getCompleteEntityByListResponse">
         <Sequence:0x16ff64520>
            <Element:0x16ff64340 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x16ff644c0 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16ff64130 name="getCompleteEntityByList">
         <Sequence:0x16ff64280>
            <Element:0x2b270bfd0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x16ff641f0 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x16ff640a0 name="getOntologyParentsResponse">
         <Sequence:0x2b270bf10>
            <Element:0x2b270be50 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b270bf70 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b270bc70 name="getOntologyParents">
         <Sequence:0x2b270bdc0>
            <Element:0x2b270bbe0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b270bd00 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b270ba60 name="getOntologyChildrenResponse">
         <Sequence:0x2b270bb80>
            <Element:0x2b270b9d0 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b270bb20 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b270b7f0 name="getOntologyChildren">
         <Sequence:0x2b270b910>
            <Element:0x2b270b790 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b270b880 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b270b5e0 name="getAllOntologyChildrenInPathResponse">
         <Sequence:0x2b270b730>
            <Element:0x2b270b520 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b270b670 name="getAllOntologyChildrenInPathResponse" type="('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b270b340 name="getAllOntologyChildrenInPath">
         <Sequence:0x2b270b490>
            <Element:0x2b270b280 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b270b0a0 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b270b130 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b270b3d0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b270b1f0 name="getStructureSearchResponse">
         <Sequence:0x2b26f4f70>
            <Element:0x2b26f4f10 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b26f4fd0 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b26f4cd0 name="getStructureSearch">
         <Sequence:0x2b26f4e50>
            <Element:0x2b26f4c40 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b26f4af0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b26f4a30 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
            <Element:0x2b26f4970 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b26f48b0 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b26f4d90 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b26f47f0 name="getUpdatedPolymer">
         <Sequence:0x2b26f4be0>
            <Element:0x2b26f4730 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x2b26f44f0 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>
      <Element:0x2b26f4b50 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b26f4430 name="getUpdatedPolymerResponse">
         <Sequence:0x2b26f4670>
            <Element:0x2b26f4370 name="return" type="('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
         </Sequence>
      </Complex>
      <Element:0x2b26f45b0 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Element:0x2b26f41f0 name="ChebiWebServiceFault" type="('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')" />
      <Complex:0x2b26f4280 name="ChebiWebServiceFault">
         <Sequence:0x2b26f42e0>
            <Element:0x16fcf8730 name="faultInfo" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
            <Element:0x16fcf8d30 name="message" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         </Sequence>
      </Complex>

DEBUG:suds.xsd.schema:MERGED:
Schema:0x16ff93d90
(raw)
   <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="https://www.ebi.ac.uk/webservices/chebi">
      <xsd:complexType name="LiteEntity">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="chebiAsciiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="searchScore" type="xsd:float"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LiteEntityList">
         <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:LiteEntity"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OntologyDataItemList">
         <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListElement" type="tns:OntologyDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CommentDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="text" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="date" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="data" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="source" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="StructureDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="structure" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dimension" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="defaultStructure" type="xsd:boolean"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="OntologyDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="cyclicRelationship" type="xsd:boolean"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Comments" type="tns:CommentDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyElement" type="tns:OntologyDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="CompoundOriginDataItem">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="speciesText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="speciesAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="componentText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="componentAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="strainText" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="strainAccession" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="SourceType" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="SourceAccession" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Entity">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiAsciiName" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="definition" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="smiles" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="inchi" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="inchiKey" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="charge" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mass" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monoisotopicMass" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="entityStar" type="xsd:int"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="SecondaryChEBIIds" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Synonyms" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="IupacNames" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Formulae" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="RegistryNumbers" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Citations" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChemicalStructures" type="tns:StructureDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="DatabaseLinks" type="tns:DataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyParents" type="tns:OntologyDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="OntologyChildren" type="tns:OntologyDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="GeneralComments" type="tns:CommentDataItem"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="CompoundOrigins" type="tns:CompoundOriginDataItem"/>
         </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="UpdatedPolymer">
         <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="updatedStructure" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="globalFormula" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="globalCharge" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="chebiId" type="xsd:string"/>
         </xsd:sequence>
      </xsd:complexType>
      <complexType name="getLiteEntityResponse">
         <sequence>
            <element name="return" type="tns:LiteEntityList"/>
         </sequence>
      </complexType>
      <element name="getLiteEntityResponse" type="tns:getLiteEntityResponse"/>
      <simpleType name="SearchCategory">
         <restriction base="xsd:string">
            <enumeration value="ALL"/>
            <enumeration value="CHEBI ID"/>
            <enumeration value="CHEBI NAME"/>
            <enumeration value="DEFINITION"/>
            <enumeration value="ALL NAMES"/>
            <enumeration value="IUPAC NAME"/>
            <enumeration value="CITATIONS"/>
            <enumeration value="REGISTRY NUMBERS"/>
            <enumeration value="MANUAL XREFS"/>
            <enumeration value="AUTOMATIC XREFS"/>
            <enumeration value="FORMULA"/>
            <enumeration value="MASS"/>
            <enumeration value="MONOISOTOPIC MASS"/>
            <enumeration value="CHARGE"/>
            <enumeration value="INCHI/INCHI KEY"/>
            <enumeration value="SMILES"/>
            <enumeration value="SPECIES"/>
         </restriction>
      </simpleType>
      <simpleType name="StructureSearchCategory">
         <restriction base="xsd:string">
            <enumeration value="IDENTITY"/>
            <enumeration value="SUBSTRUCTURE"/>
            <enumeration value="SIMILARITY"/>
         </restriction>
      </simpleType>
      <simpleType name="StructureType">
         <restriction base="xsd:string">
            <enumeration value="MOLFILE"/>
            <enumeration value="CML"/>
            <enumeration value="SMILES"/>
         </restriction>
      </simpleType>
      <simpleType name="RelationshipType">
         <restriction base="xsd:string">
            <enumeration value="is a"/>
            <enumeration value="has part"/>
            <enumeration value="is conjugate base of"/>
            <enumeration value="is conjugate acid of"/>
            <enumeration value="is tautomer of"/>
            <enumeration value="is enantiomer of"/>
            <enumeration value="has functional parent"/>
            <enumeration value="has parent hydride"/>
            <enumeration value="is substituent group from"/>
            <enumeration value="has role"/>
         </restriction>
      </simpleType>
      <simpleType name="StarsCategory">
         <restriction base="xsd:string">
            <enumeration value="ALL"/>
            <enumeration value="TWO ONLY"/>
            <enumeration value="THREE ONLY"/>
         </restriction>
      </simpleType>
      <complexType name="getLiteEntity">
         <sequence>
            <element name="search" type="xsd:string"/>
            <element name="searchCategory" type="tns:SearchCategory"/>
            <element name="maximumResults" type="xsd:int"/>
            <element name="stars" type="tns:StarsCategory"/>
         </sequence>
      </complexType>
      <element name="getLiteEntity" type="tns:getLiteEntity"/>
      <complexType name="getCompleteEntityResponse">
         <sequence>
            <element name="return" type="tns:Entity"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityResponse" type="tns:getCompleteEntityResponse"/>
      <complexType name="getCompleteEntity">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntity" type="tns:getCompleteEntity"/>
      <complexType name="getCompleteEntityByListResponse">
         <sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:Entity"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityByListResponse" type="tns:getCompleteEntityByListResponse"/>
      <complexType name="getCompleteEntityByList">
         <sequence>
            <xsd:element maxOccurs="50" minOccurs="0" name="ListOfChEBIIds" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getCompleteEntityByList" type="tns:getCompleteEntityByList"/>
      <complexType name="getOntologyParentsResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getOntologyParentsResponse" type="tns:getOntologyParentsResponse"/>
      <complexType name="getOntologyParents">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getOntologyParents" type="tns:getOntologyParents"/>
      <complexType name="getOntologyChildrenResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getOntologyChildrenResponse" type="tns:getOntologyChildrenResponse"/>
      <complexType name="getOntologyChildren">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getOntologyChildren" type="tns:getOntologyChildren"/>
      <complexType name="getAllOntologyChildrenInPathResponse">
         <sequence>
            <element name="return" type="tns:OntologyDataItemList"/>
         </sequence>
      </complexType>
      <element name="getAllOntologyChildrenInPathResponse" type="tns:getAllOntologyChildrenInPathResponse"/>
      <complexType name="getAllOntologyChildrenInPath">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
            <element name="relationshipType" type="tns:RelationshipType"/>
            <element name="structureOnly" type="xsd:boolean"/>
         </sequence>
      </complexType>
      <element name="getAllOntologyChildrenInPath" type="tns:getAllOntologyChildrenInPath"/>
      <complexType name="getStructureSearchResponse">
         <sequence>
            <element name="return" type="tns:LiteEntityList"/>
         </sequence>
      </complexType>
      <element name="getStructureSearchResponse" type="tns:getLiteEntityResponse"/>
      <complexType name="getStructureSearch">
         <sequence>
            <element name="structure" type="xsd:string"/>
            <element name="type" type="tns:StructureType"/>
            <element name="structureSearchCategory" type="tns:StructureSearchCategory"/>
            <element name="totalResults" type="xsd:int"/>
            <element name="tanimotoCutoff" type="xsd:float"/>
         </sequence>
      </complexType>
      <element name="getStructureSearch" type="tns:getStructureSearch"/>
      <complexType name="getUpdatedPolymer">
         <sequence>
            <element name="chebiId" type="xsd:string"/>
            <xsd:element maxOccurs="unbounded" minOccurs="1" name="polymerisationIndex" type="xsd:string"/>
         </sequence>
      </complexType>
      <element name="getUpdatedPolymer" type="tns:getUpdatedPolymer"/>
      <complexType name="getUpdatedPolymerResponse">
         <sequence>
            <element name="return" type="tns:UpdatedPolymer"/>
         </sequence>
      </complexType>
      <element name="getUpdatedPolymerResponse" type="tns:getUpdatedPolymerResponse"/>
      <element name="ChebiWebServiceFault" type="tns:ChebiWebServiceFault"/>
      <complexType name="ChebiWebServiceFault">
         <sequence>
            <element name="faultInfo" type="xsd:string"/>
            <element name="message" type="xsd:string"/>
         </sequence>
      </complexType>
   </xsd:schema>
(model)
   <Complex:0x16ff93a60 name="LiteEntity">
      <Sequence:0x16ff93970>
         <Element:0x16ff93820 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff93670 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff935e0 name="searchScore" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff93550 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff938b0 name="LiteEntityList">
      <Sequence:0x16ff93790>
         <Element:0x16ff93730 name="ListElement" type="('LiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff934f0 name="OntologyDataItemList">
      <Sequence:0x16ff93430>
         <Element:0x16ff933a0 name="ListElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff93310 name="CommentDataItem">
      <Sequence:0x16ff932b0>
         <Element:0x16ff931f0 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff93070 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff93160 name="DataItem">
      <Sequence:0x16ff89eb0>
         <Element:0x16ff89f40 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89d00 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89c70 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89be0 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff930d0 name="StructureDataItem">
      <Sequence:0x16ff89e20>
         <Element:0x16ff89dc0 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff899a0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89940 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89880 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff897f0 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff89b80 name="OntologyDataItem">
      <Sequence:0x16ff89ac0>
         <Element:0x16ff89a30 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff895b0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89520 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff894c0 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89400 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89370 name="Comments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff892e0 name="OntologyElement" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff89760 name="CompoundOriginDataItem">
      <Sequence:0x16ff89700>
         <Element:0x16ff89640 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89070 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff89130 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7ff10 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7feb0 name="strainText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7fe50 name="strainAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7fd90 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7fd00 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff89280 name="Entity">
      <Sequence:0x16ff7fc40>
         <Element:0x16ff7ffa0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7fa60 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f9d0 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f970 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f910 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f850 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f7c0 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f700 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f670 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f5e0 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f550 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f490 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff7f400 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff7f370 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff7f310 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff7f2b0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff7f1f0 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff7f160 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff7f0a0 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff7fb20 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff75f10 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff75e80 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff75dc0 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff891c0 name="UpdatedPolymer">
      <Sequence:0x16ff75d30>
         <Element:0x16ff75fd0 name="updatedStructure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff75b20 name="globalFormula" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff75a90 name="globalCharge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff75a00 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Complex:0x16ff7fbb0 name="getLiteEntityResponse">
      <Sequence:0x16ff75c70>
         <Element:0x16ff75be0 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16ff759a0 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Simple:0x16ff757c0 name="SearchCategory">
      <Restriction:0x16ff75940 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16ff75730 name="ALL" />
         <Enumeration:0x16ff755b0 name="CHEBI ID" />
         <Enumeration:0x16ff75550 name="CHEBI NAME" />
         <Enumeration:0x16ff75460 name="DEFINITION" />
         <Enumeration:0x16ff753d0 name="ALL NAMES" />
         <Enumeration:0x16ff75310 name="IUPAC NAME" />
         <Enumeration:0x16ff75280 name="CITATIONS" />
         <Enumeration:0x16ff751c0 name="REGISTRY NUMBERS" />
         <Enumeration:0x16ff75130 name="MANUAL XREFS" />
         <Enumeration:0x16ff75070 name="AUTOMATIC XREFS" />
         <Enumeration:0x16ff75610 name="FORMULA" />
         <Enumeration:0x16ff6df10 name="MASS" />
         <Enumeration:0x16ff6deb0 name="MONOISOTOPIC MASS" />
         <Enumeration:0x16ff6de50 name="CHARGE" />
         <Enumeration:0x16ff6dd60 name="INCHI/INCHI KEY" />
         <Enumeration:0x16ff6dca0 name="SMILES" />
         <Enumeration:0x16ff6dbe0 name="SPECIES" />
      </Restriction>
   </Simple>
   <Simple:0x16ff75880 name="StructureSearchCategory">
      <Restriction:0x16ff6db50 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16ff6dfa0 name="IDENTITY" />
         <Enumeration:0x16ff6d9d0 name="SUBSTRUCTURE" />
         <Enumeration:0x16ff6d910 name="SIMILARITY" />
      </Restriction>
   </Simple>
   <Simple:0x16ff756a0 name="StructureType">
      <Restriction:0x16ff6dac0 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16ff6da60 name="MOLFILE" />
         <Enumeration:0x16ff6d6a0 name="CML" />
         <Enumeration:0x16ff6d640 name="SMILES" />
      </Restriction>
   </Simple>
   <Simple:0x16ff6d880 name="RelationshipType">
      <Restriction:0x16ff6d7c0 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16ff6d730 name="is a" />
         <Enumeration:0x16ff6d3d0 name="has part" />
         <Enumeration:0x16ff6d340 name="is conjugate base of" />
         <Enumeration:0x16ff6d2b0 name="is conjugate acid of" />
         <Enumeration:0x16ff6d250 name="is tautomer of" />
         <Enumeration:0x16ff6d1f0 name="is enantiomer of" />
         <Enumeration:0x16ff6d130 name="has functional parent" />
         <Enumeration:0x16ff6d0a0 name="has parent hydride" />
         <Enumeration:0x16ff6d490 name="is substituent group from" />
         <Enumeration:0x16ff64f10 name="has role" />
      </Restriction>
   </Simple>
   <Simple:0x16ff6d5e0 name="StarsCategory">
      <Restriction:0x16ff64e80 ref="('string', 'http://www.w3.org/2001/XMLSchema')">
         <Enumeration:0x16ff64fa0 name="ALL" />
         <Enumeration:0x16ff64d00 name="TWO ONLY" />
         <Enumeration:0x16ff64c70 name="THREE ONLY" />
      </Restriction>
   </Simple>
   <Complex:0x16ff6d520 name="getLiteEntity">
      <Sequence:0x16ff64e20>
         <Element:0x16ff64dc0 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff64a30 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x16ff649d0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16ff64910 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16ff64bb0 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16ff64880 name="getCompleteEntityResponse">
      <Sequence:0x16ff64b20>
         <Element:0x16ff647c0 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16ff64a90 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16ff64610 name="getCompleteEntity">
      <Sequence:0x16ff64730>
         <Element:0x16ff64580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16ff646a0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16ff643d0 name="getCompleteEntityByListResponse">
      <Sequence:0x16ff64520>
         <Element:0x16ff64340 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x16ff644c0 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16ff64130 name="getCompleteEntityByList">
      <Sequence:0x16ff64280>
         <Element:0x2b270bfd0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x16ff641f0 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x16ff640a0 name="getOntologyParentsResponse">
      <Sequence:0x2b270bf10>
         <Element:0x2b270be50 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b270bf70 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b270bc70 name="getOntologyParents">
      <Sequence:0x2b270bdc0>
         <Element:0x2b270bbe0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b270bd00 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b270ba60 name="getOntologyChildrenResponse">
      <Sequence:0x2b270bb80>
         <Element:0x2b270b9d0 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b270bb20 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b270b7f0 name="getOntologyChildren">
      <Sequence:0x2b270b910>
         <Element:0x2b270b790 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b270b880 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b270b5e0 name="getAllOntologyChildrenInPathResponse">
      <Sequence:0x2b270b730>
         <Element:0x2b270b520 name="return" type="('OntologyDataItemList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b270b670 name="getAllOntologyChildrenInPathResponse" type="('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b270b340 name="getAllOntologyChildrenInPath">
      <Sequence:0x2b270b490>
         <Element:0x2b270b280 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b270b0a0 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b270b130 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b270b3d0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b270b1f0 name="getStructureSearchResponse">
      <Sequence:0x2b26f4f70>
         <Element:0x2b26f4f10 name="return" type="('LiteEntityList', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b26f4fd0 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b26f4cd0 name="getStructureSearch">
      <Sequence:0x2b26f4e50>
         <Element:0x2b26f4c40 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b26f4af0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b26f4a30 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />
         <Element:0x2b26f4970 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b26f48b0 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b26f4d90 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b26f47f0 name="getUpdatedPolymer">
      <Sequence:0x2b26f4be0>
         <Element:0x2b26f4730 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x2b26f44f0 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>
   <Element:0x2b26f4b50 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b26f4430 name="getUpdatedPolymerResponse">
      <Sequence:0x2b26f4670>
         <Element:0x2b26f4370 name="return" type="('UpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
      </Sequence>
   </Complex>
   <Element:0x2b26f45b0 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Element:0x2b26f41f0 name="ChebiWebServiceFault" type="('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')" />
   <Complex:0x2b26f4280 name="ChebiWebServiceFault">
      <Sequence:0x2b26f42e0>
         <Element:0x16fcf8730 name="faultInfo" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
         <Element:0x16fcf8d30 name="message" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
      </Sequence>
   </Complex>

DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff646a0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff646a0, resolving: ('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8e80"
   ref[] = 
      "getCompleteEntity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff646a0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff64610 name="getCompleteEntity" />
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff64a90 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff64a90, resolving: ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8eb0"
   ref[] = 
      "getCompleteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff64a90 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff64880 name="getCompleteEntityResponse" />
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff641f0 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff641f0, resolving: ('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8e80"
   ref[] = 
      "getCompleteEntityByList",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff641f0 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff64130 name="getCompleteEntityByList" />
DEBUG:suds.xsd.query:('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff644c0 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff644c0, resolving: ('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8eb0"
   ref[] = 
      "getCompleteEntityByListResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff644c0 name="getCompleteEntityByListResponse" type="('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff643d0 name="getCompleteEntityByListResponse" />
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff64bb0 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff64bb0, resolving: ('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8e80"
   ref[] = 
      "getLiteEntity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff64bb0 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff6d520 name="getLiteEntity" />
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff759a0 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff759a0, resolving: ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8eb0"
   ref[] = 
      "getLiteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff759a0 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff7fbb0 name="getLiteEntityResponse" />
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b270bd00 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b270bd00, resolving: ('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8e80"
   ref[] = 
      "getOntologyParents",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b270bd00 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b270bc70 name="getOntologyParents" />
DEBUG:suds.xsd.query:('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b270bf70 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b270bf70, resolving: ('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8eb0"
   ref[] = 
      "getOntologyParentsResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b270bf70 name="getOntologyParentsResponse" type="('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff640a0 name="getOntologyParentsResponse" />
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b270b880 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b270b880, resolving: ('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8e80"
   ref[] = 
      "getOntologyChildren",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b270b880 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b270b7f0 name="getOntologyChildren" />
DEBUG:suds.xsd.query:('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b270bb20 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b270bb20, resolving: ('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8eb0"
   ref[] = 
      "getOntologyChildrenResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b270bb20 name="getOntologyChildrenResponse" type="('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b270ba60 name="getOntologyChildrenResponse" />
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b270b3d0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b270b3d0, resolving: ('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8e80"
   ref[] = 
      "getAllOntologyChildrenInPath",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b270b3d0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b270b340 name="getAllOntologyChildrenInPath" />
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff759a0 name="getLiteEntityResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b26f4d90 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b26f4d90, resolving: ('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8e80"
   ref[] = 
      "getStructureSearch",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b26f4d90 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b26f4cd0 name="getStructureSearch" />
DEBUG:suds.xsd.query:('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b26f4fd0 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b26f4fd0, resolving: ('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8eb0"
   ref[] = 
      "getLiteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b26f4fd0 name="getStructureSearchResponse" type="('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff7fbb0 name="getLiteEntityResponse" />
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b26f4b50 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b26f4b50, resolving: ('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8e80"
   ref[] = 
      "getUpdatedPolymer",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b26f4b50 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b26f47f0 name="getUpdatedPolymer" />
DEBUG:suds.xsd.query:('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b26f45b0 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x2b26f45b0, resolving: ('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8eb0"
   ref[] = 
      "getUpdatedPolymerResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b26f45b0 name="getUpdatedPolymerResponse" type="('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b26f4430 name="getUpdatedPolymerResponse" />
DEBUG:suds.wsdl:WSDL at 'http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl' loaded:
(Definitions){
   _WObject__resolved = False
   id = "Definitions:0x16ff879d0"
   options = Definitions:
	cache: classes=(<class 'suds.cache.Cache'>,), default=<suds.cache.NoCache object at 0x16ff709a0>
	documentStore: classes=(<class 'suds.store.DocumentStore'>,), default=<suds.store.DocumentStore object at 0x2b24931f0>
	extraArgumentErrors: classes=(<class 'bool'>,), default=True
	allowUnknownMessageParts: classes=(<class 'bool'>,), default=False
	faults: classes=(<class 'bool'>,), default=True
	transport: classes=(<class 'suds.transport.Transport'>,), default=None
	service: classes=(<class 'int'>, <class 'str'>), default=None
	port: classes=(<class 'int'>, <class 'str'>), default=None
	location: classes=(<class 'str'>,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(<class 'suds.wsse.Security'>,), default=None
	doctor: classes=(<class 'suds.xsd.doctor.Doctor'>,), default=None
	xstq: classes=(<class 'bool'>,), default=True
	prefixes: classes=(<class 'bool'>,), default=True
	retxml: classes=(<class 'bool'>,), default=False
	prettyxml: classes=(<class 'bool'>,), default=False
	autoblend: classes=(<class 'bool'>,), default=False
	cachingpolicy: classes=(<class 'int'>,), default=0
	plugins: classes=(<class 'list'>, <class 'tuple'>), default=[]
	nosend: classes=(<class 'bool'>,), default=False
	unwrap: classes=(<class 'bool'>,), default=True
	sortNamespaces: classes=(<class 'bool'>,), default=True
Content:
	('cache', <suds.cache.ObjectCache object at 0x16ff87880>)
	('documentStore', <suds.store.DocumentStore object at 0x2b24931f0>)
	('extraArgumentErrors', True)
	('allowUnknownMessageParts', False)
	('faults', True)
	('transport', <suds.transport.https.HttpAuthenticated object at 0x16ff87310>)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
	('sortNamespaces', True)
Linked:
Definitions:
	proxy: classes=(<class 'dict'>,), default={}
	timeout: classes=(<class 'int'>, <class 'float'>), default=90
	headers: classes=(<class 'dict'>,), default={}
	username: classes=(<class 'str'>,), default=None
	password: classes=(<class 'str'>,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(<class 'suds.cache.Cache'>,), default=<suds.cache.NoCache object at 0x16ff709a0>
	documentStore: classes=(<class 'suds.store.DocumentStore'>,), default=<suds.store.DocumentStore object at 0x2b24931f0>
	extraArgumentErrors: classes=(<class 'bool'>,), default=True
	allowUnknownMessageParts: classes=(<class 'bool'>,), default=False
	faults: classes=(<class 'bool'>,), default=True
	transport: classes=(<class 'suds.transport.Transport'>,), default=None
	service: classes=(<class 'int'>, <class 'str'>), default=None
	port: classes=(<class 'int'>, <class 'str'>), default=None
	location: classes=(<class 'str'>,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(<class 'suds.wsse.Security'>,), default=None
	doctor: classes=(<class 'suds.xsd.doctor.Doctor'>,), default=None
	xstq: classes=(<class 'bool'>,), default=True
	prefixes: classes=(<class 'bool'>,), default=True
	retxml: classes=(<class 'bool'>,), default=False
	prettyxml: classes=(<class 'bool'>,), default=False
	autoblend: classes=(<class 'bool'>,), default=False
	cachingpolicy: classes=(<class 'int'>,), default=0
	plugins: classes=(<class 'list'>, <class 'tuple'>), default=[]
	nosend: classes=(<class 'bool'>,), default=False
	unwrap: classes=(<class 'bool'>,), default=True
	sortNamespaces: classes=(<class 'bool'>,), default=True
Content:
	('cache', <suds.cache.ObjectCache object at 0x16ff87880>)
	('documentStore', <suds.store.DocumentStore object at 0x2b24931f0>)
	('extraArgumentErrors', True)
	('allowUnknownMessageParts', False)
	('faults', True)
	('transport', <suds.transport.https.HttpAuthenticated object at 0x16ff87310>)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
	('sortNamespaces', True)
   url = "http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl"
   tns[] = 
      "tns",
      "https://www.ebi.ac.uk/webservices/chebi",
   types[] = 
      (Types){
         _WObject__resolved = True
         definitions = (Definitions)...
      },
   schema = "<Schema:0x16ff93d90 tns="https://www.ebi.ac.uk/webservices/chebi"/>"
   imports[] = <empty>
   messages = 
      {
         (getLiteEntity, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getLiteEntity"
               qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getLiteEntity"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getLiteEntityResponse"
               qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getLiteEntityResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntity"
               qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getCompleteEntity"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityResponse"
               qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getCompleteEntityResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityByList"
               qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getCompleteEntityByListResponse"
               qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyParents, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyParents"
               qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getOntologyParents"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyParentsResponse"
               qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getOntologyParentsResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyChildren"
               qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getOntologyChildren"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getOntologyChildrenResponse"
               qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getAllOntologyChildrenInPath"
               qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getAllOntologyChildrenInPathResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getAllOntologyChildrenInPathResponse"
               qname = "(getAllOntologyChildrenInPathResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getAllOntologyChildrenInPathResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getAllOntologyChildrenInPathResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getStructureSearch, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getStructureSearch"
               qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getStructureSearch"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getStructureSearchResponse"
               qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getStructureSearchResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getUpdatedPolymer"
               qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                     _WObject__resolved = False
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "getUpdatedPolymerResponse"
               qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                     _WObject__resolved = False
                     name = "result"
                     qname[] = 
                        "result",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
         (chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Message){
               _WObject__resolved = True
               name = "chebiWebServiceFault"
               qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
               parts[] = 
                  (Part){
                     root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                     _WObject__resolved = False
                     name = "ChebiWebServiceFault"
                     qname[] = 
                        "ChebiWebServiceFault",
                        "https://www.ebi.ac.uk/webservices/chebi",
                     element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (PortType){
               _WObject__resolved = True
               name = "ChebiWebServicePortType"
               qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
               operations = 
                  {
                     getLiteEntity = 
                        (Operation){
                           name = "getLiteEntity"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntity"
                                 qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getLiteEntity"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntityResponse"
                                 qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getLiteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getCompleteEntity = 
                        (Operation){
                           name = "getCompleteEntity"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntity"
                                 qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getCompleteEntity"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityResponse"
                                 qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getCompleteEntityByList = 
                        (Operation){
                           name = "getCompleteEntityByList"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityByList"
                                 qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getCompleteEntityByListResponse"
                                 qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getOntologyParents = 
                        (Operation){
                           name = "getOntologyParents"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyParents"
                                 qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getOntologyParents"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyParentsResponse"
                                 qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getOntologyChildren = 
                        (Operation){
                           name = "getOntologyChildren"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyChildren"
                                 qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getOntologyChildren"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getOntologyChildrenResponse"
                                 qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getAllOntologyChildrenInPath = 
                        (Operation){
                           name = "getAllOntologyChildrenInPath"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getAllOntologyChildrenInPath"
                                 qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getLiteEntityResponse"
                                 qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getLiteEntityResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getStructureSearch = 
                        (Operation){
                           name = "getStructureSearch"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getStructureSearch"
                                 qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getStructureSearch"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getStructureSearchResponse"
                                 qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getStructureSearchResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                     getUpdatedPolymer = 
                        (Operation){
                           name = "getUpdatedPolymer"
                           tns[] = 
                              "tns",
                              "https://www.ebi.ac.uk/webservices/chebi",
                           input = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getUpdatedPolymer"
                                 qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                       _WObject__resolved = False
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 _WObject__resolved = True
                                 name = "getUpdatedPolymerResponse"
                                 qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                 parts[] = 
                                    (Part){
                                       root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                       _WObject__resolved = False
                                       name = "result"
                                       qname[] = 
                                          "result",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                       type = "None"
                                    },
                              }
                           faults[] = 
                              (Fault){
                                 name = "chebiWebServiceFault"
                                 message = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "chebiWebServiceFault"
                                       qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                              },
                        }
                  }
            }
      }
   bindings = 
      {
         (ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi, ) = 
            (Binding){
               _WObject__resolved = True
               name = "ChebiWebServiceBinding"
               qname = "(ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi)"
               operations = 
                  {
                     getCompleteEntity = 
                        (Operation){
                           name = "getCompleteEntity"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntityByList = 
                        (Operation){
                           name = "getCompleteEntityByList"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getLiteEntity = 
                        (Operation){
                           name = "getLiteEntity"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyParents = 
                        (Operation){
                           name = "getOntologyParents"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyChildren = 
                        (Operation){
                           name = "getOntologyChildren"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getAllOntologyChildrenInPath = 
                        (Operation){
                           name = "getAllOntologyChildrenInPath"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getStructureSearch = 
                        (Operation){
                           name = "getStructureSearch"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getUpdatedPolymer = 
                        (Operation){
                           name = "getUpdatedPolymer"
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                  }
               type = 
                  (PortType){
                     _WObject__resolved = True
                     name = "ChebiWebServicePortType"
                     qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
                     operations = 
                        {
                           getLiteEntity = 
                              (Operation){
                                 name = "getLiteEntity"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntity"
                                       qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getLiteEntity"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntityResponse"
                                       qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getLiteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getCompleteEntity = 
                              (Operation){
                                 name = "getCompleteEntity"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntity"
                                       qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getCompleteEntity"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityResponse"
                                       qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getCompleteEntityByList = 
                              (Operation){
                                 name = "getCompleteEntityByList"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityByList"
                                       qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getCompleteEntityByListResponse"
                                       qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getOntologyParents = 
                              (Operation){
                                 name = "getOntologyParents"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyParents"
                                       qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getOntologyParents"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyParentsResponse"
                                       qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getOntologyChildren = 
                              (Operation){
                                 name = "getOntologyChildren"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyChildren"
                                       qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getOntologyChildren"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getOntologyChildrenResponse"
                                       qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getAllOntologyChildrenInPath = 
                              (Operation){
                                 name = "getAllOntologyChildrenInPath"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getAllOntologyChildrenInPath"
                                       qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getLiteEntityResponse"
                                       qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getLiteEntityResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getStructureSearch = 
                              (Operation){
                                 name = "getStructureSearch"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getStructureSearch"
                                       qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getStructureSearch"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getStructureSearchResponse"
                                       qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getStructureSearchResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                           getUpdatedPolymer = 
                              (Operation){
                                 name = "getUpdatedPolymer"
                                 tns[] = 
                                    "tns",
                                    "https://www.ebi.ac.uk/webservices/chebi",
                                 input = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getUpdatedPolymer"
                                       qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                             _WObject__resolved = False
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       _WObject__resolved = True
                                       name = "getUpdatedPolymerResponse"
                                       qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                       parts[] = 
                                          (Part){
                                             root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                             _WObject__resolved = False
                                             name = "result"
                                             qname[] = 
                                                "result",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       message = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "chebiWebServiceFault"
                                             qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                    },
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         _WObject__resolved = True
         name = "ChebiWebServiceService"
         qname = "(ChebiWebServiceService, https://www.ebi.ac.uk/webservices/chebi)"
         ports[] = 
            (Port){
               _WObject__resolved = False
               name = "ChebiWebServicePort"
               qname = "(ChebiWebServicePort, https://www.ebi.ac.uk/webservices/chebi)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     _WObject__resolved = True
                     name = "ChebiWebServiceBinding"
                     qname = "(ChebiWebServiceBinding, https://www.ebi.ac.uk/webservices/chebi)"
                     operations = 
                        {
                           getCompleteEntity = 
                              (Operation){
                                 name = "getCompleteEntity"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getCompleteEntityByList = 
                              (Operation){
                                 name = "getCompleteEntityByList"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getLiteEntity = 
                              (Operation){
                                 name = "getLiteEntity"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getLiteEntity"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getOntologyParents = 
                              (Operation){
                                 name = "getOntologyParents"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getOntologyParents"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getOntologyChildren = 
                              (Operation){
                                 name = "getOntologyChildren"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getAllOntologyChildrenInPath = 
                              (Operation){
                                 name = "getAllOntologyChildrenInPath"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getStructureSearch = 
                              (Operation){
                                 name = "getStructureSearch"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getStructureSearch"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                           getUpdatedPolymer = 
                              (Operation){
                                 name = "getUpdatedPolymer"
                                 soap = 
                                    (soap){
                                       action = """"
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                         _WObject__resolved = False
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                         _WObject__resolved = False
                                                         name = "result"
                                                         qname[] = 
                                                            "result",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   wrapped = True
                                                }
                                             headers[] = <empty>
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             use = "literal"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                   _WObject__resolved = False
                                                   name = "ChebiWebServiceFault"
                                                   qname[] = 
                                                      "ChebiWebServiceFault",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          },
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           _WObject__resolved = True
                           name = "ChebiWebServicePortType"
                           qname = "(ChebiWebServicePortType, https://www.ebi.ac.uk/webservices/chebi)"
                           operations = 
                              {
                                 getLiteEntity = 
                                    (Operation){
                                       name = "getLiteEntity"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntity"
                                             qname = "(getLiteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntityResponse"
                                             qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getCompleteEntity = 
                                    (Operation){
                                       name = "getCompleteEntity"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntity"
                                             qname = "(getCompleteEntity, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityResponse"
                                             qname = "(getCompleteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getCompleteEntityByList = 
                                    (Operation){
                                       name = "getCompleteEntityByList"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityByList"
                                             qname = "(getCompleteEntityByList, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getCompleteEntityByListResponse"
                                             qname = "(getCompleteEntityByListResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getOntologyParents = 
                                    (Operation){
                                       name = "getOntologyParents"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyParents"
                                             qname = "(getOntologyParents, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyParentsResponse"
                                             qname = "(getOntologyParentsResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getOntologyChildren = 
                                    (Operation){
                                       name = "getOntologyChildren"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyChildren"
                                             qname = "(getOntologyChildren, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getOntologyChildrenResponse"
                                             qname = "(getOntologyChildrenResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getAllOntologyChildrenInPath = 
                                    (Operation){
                                       name = "getAllOntologyChildrenInPath"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getAllOntologyChildrenInPath"
                                             qname = "(getAllOntologyChildrenInPath, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getLiteEntityResponse"
                                             qname = "(getLiteEntityResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getStructureSearch = 
                                    (Operation){
                                       name = "getStructureSearch"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getStructureSearch"
                                             qname = "(getStructureSearch, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getStructureSearchResponse"
                                             qname = "(getStructureSearchResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                                 getUpdatedPolymer = 
                                    (Operation){
                                       name = "getUpdatedPolymer"
                                       tns[] = 
                                          "tns",
                                          "https://www.ebi.ac.uk/webservices/chebi",
                                       input = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getUpdatedPolymer"
                                             qname = "(getUpdatedPolymer, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             _WObject__resolved = True
                                             name = "getUpdatedPolymerResponse"
                                             qname = "(getUpdatedPolymerResponse, https://www.ebi.ac.uk/webservices/chebi)"
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = 
                                          (Fault){
                                             name = "chebiWebServiceFault"
                                             message = 
                                                (Message){
                                                   _WObject__resolved = True
                                                   name = "chebiWebServiceFault"
                                                   qname = "(chebiWebServiceFault, https://www.ebi.ac.uk/webservices/chebi)"
                                                   parts[] = 
                                                      (Part){
                                                         root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                                         _WObject__resolved = False
                                                         name = "ChebiWebServiceFault"
                                                         qname[] = 
                                                            "ChebiWebServiceFault",
                                                            "https://www.ebi.ac.uk/webservices/chebi",
                                                         element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                         type = "None"
                                                      },
                                                }
                                          },
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
               methods = 
                  {
                     getLiteEntity = 
                        (Method){
                           name = "getLiteEntity"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16ff939d0>
                                 output = <suds.bindings.document.Document object at 0x16ff939d0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getLiteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntity = 
                        (Method){
                           name = "getCompleteEntity"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16ff939d0>
                                 output = <suds.bindings.document.Document object at 0x16ff939d0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntity"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getCompleteEntityByList = 
                        (Method){
                           name = "getCompleteEntityByList"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16ff939d0>
                                 output = <suds.bindings.document.Document object at 0x16ff939d0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getCompleteEntityByList"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getCompleteEntityByListResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getCompleteEntityByListResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyParents = 
                        (Method){
                           name = "getOntologyParents"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16ff939d0>
                                 output = <suds.bindings.document.Document object at 0x16ff939d0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyParents"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyParentsResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyParentsResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getOntologyChildren = 
                        (Method){
                           name = "getOntologyChildren"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16ff939d0>
                                 output = <suds.bindings.document.Document object at 0x16ff939d0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getOntologyChildren"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getOntologyChildrenResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getOntologyChildrenResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getAllOntologyChildrenInPath = 
                        (Method){
                           name = "getAllOntologyChildrenInPath"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16ff939d0>
                                 output = <suds.bindings.document.Document object at 0x16ff939d0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getAllOntologyChildrenInPath"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getLiteEntityResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getLiteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getStructureSearch = 
                        (Method){
                           name = "getStructureSearch"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16ff939d0>
                                 output = <suds.bindings.document.Document object at 0x16ff939d0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getStructureSearch"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getStructureSearchResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getStructureSearchResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                     getUpdatedPolymer = 
                        (Method){
                           name = "getUpdatedPolymer"
                           location = "http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice"
                           binding = 
                              (binding){
                                 input = <suds.bindings.document.Document object at 0x16ff939d0>
                                 output = <suds.bindings.document.Document object at 0x16ff939d0>
                              }
                           soap = 
                              (soap){
                                 action = """"
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="parameters" element="tns:getUpdatedPolymer"/>
                                                   _WObject__resolved = False
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = <part name="result" element="tns:getUpdatedPolymerResponse"/>
                                                   _WObject__resolved = False
                                                   name = "result"
                                                   qname[] = 
                                                      "result",
                                                      "https://www.ebi.ac.uk/webservices/chebi",
                                                   element = "('getUpdatedPolymerResponse', 'https://www.ebi.ac.uk/webservices/chebi')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             wrapped = True
                                          }
                                       headers[] = <empty>
                                    }
                                 faults[] = 
                                    (Fault){
                                       name = "chebiWebServiceFault"
                                       use = "literal"
                                       parts[] = 
                                          (Part){
                                             root = <part name="ChebiWebServiceFault" element="tns:ChebiWebServiceFault"/>
                                             _WObject__resolved = False
                                             name = "ChebiWebServiceFault"
                                             qname[] = 
                                                "ChebiWebServiceFault",
                                                "https://www.ebi.ac.uk/webservices/chebi",
                                             element = "('ChebiWebServiceFault', 'https://www.ebi.ac.uk/webservices/chebi')"
                                             type = "None"
                                          },
                                    },
                              }
                        }
                  }
            },
      },
 }
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff646a0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getCompleteEntity' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff641f0 name="getCompleteEntityByList" type="('getCompleteEntityByList', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getCompleteEntityByList' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff64bb0 name="getLiteEntity" type="('getLiteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getLiteEntity' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b270bd00 name="getOntologyParents" type="('getOntologyParents', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getOntologyParents' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b270b880 name="getOntologyChildren" type="('getOntologyChildren', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getOntologyChildren' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b270b3d0 name="getAllOntologyChildrenInPath" type="('getAllOntologyChildrenInPath', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getAllOntologyChildrenInPath' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b26f4d90 name="getStructureSearch" type="('getStructureSearch', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getStructureSearch' created: started: 1686224054 (running)
DEBUG:suds.xsd.query:('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x2b26f4b50 name="getUpdatedPolymer" type="('getUpdatedPolymer', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.metrics:method 'getUpdatedPolymer' created: started: 1686224054 (running)
DEBUG:suds.xsd.sxbasic:Element:0x2b270b280, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8640"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b270b280 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8640, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b270b0a0, resolving: ('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fc86040"
   ref[] = 
      "RelationshipType",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b270b0a0 name="relationshipType" type="('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('RelationshipType', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x16ff6d880 name="RelationshipType" />
DEBUG:suds.xsd.sxbasic:Element:0x2b270b130, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fc86040"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b270b130 name="structureOnly" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fc86040, found builtin (boolean)
DEBUG:suds.xsd.sxbasic:Element:0x16ff64580, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff64580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b270bfd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b270bfd0 name="ListOfChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16ff64dc0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff64dc0 name="search" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x16ff64a30, resolving: ('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "SearchCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff64a30 name="searchCategory" type="('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('SearchCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x16ff757c0 name="SearchCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff649d0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff649d0 name="maximumResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (int)
DEBUG:suds.xsd.sxbasic:Element:0x16ff64910, resolving: ('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "StarsCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff64910 name="stars" type="('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StarsCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x16ff6d5e0 name="StarsCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x2b270b790, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b270b790 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b270bbe0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b270bbe0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b26f4c40, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b26f4c40 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b26f4af0, resolving: ('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "StructureType",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b26f4af0 name="type" type="('StructureType', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureType', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x16ff756a0 name="StructureType" />
DEBUG:suds.xsd.sxbasic:Element:0x2b26f4a30, resolving: ('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "StructureSearchCategory",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b26f4a30 name="structureSearchCategory" type="('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureSearchCategory', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Simple:0x16ff75880 name="StructureSearchCategory" />
DEBUG:suds.xsd.sxbasic:Element:0x2b26f4970, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b26f4970 name="totalResults" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (int)
DEBUG:suds.xsd.sxbasic:Element:0x2b26f48b0, resolving: ('float', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "float",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b26f48b0 name="tanimotoCutoff" type="('float', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (float)
DEBUG:suds.xsd.sxbasic:Element:0x2b26f4730, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b26f4730 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (string)
DEBUG:suds.xsd.sxbasic:Element:0x2b26f44f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x16fcf8b20"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b26f44f0 name="polymerisationIndex" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x16fcf8b20, found builtin (string)
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff646a0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.query:('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff646a0 name="getCompleteEntity" type="('getCompleteEntity', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.mx.core:processing:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x16ff64580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x16fcf8640 />
 }
DEBUG:suds.mx.core:appending parent:
<?xml version="1.0" encoding="UTF-8"?>
content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x16ff64580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x16fcf8640 />
 }
DEBUG:suds.mx.literal:starting content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x16ff64580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x16fcf8640 />
 }
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b257f5b0>)
<suds.resolver.Frame object at 0x2b257f5b0>
DEBUG:suds.mx.literal:created - node:
<tns:chebiId xmlns:tns="https://www.ebi.ac.uk/webservices/chebi"/>
DEBUG:suds.mx.literal:ending content:
(Content){
   tag = "chebiId"
   value = "CHEBI:27732"
   type = <Element:0x16ff64580 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />
   real = <XString:0x16fcf8640 />
   ancestry[] = <empty>
 }
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b257f5b0>)

DEBUG:suds.metrics:message for 'getCompleteEntity' created: 0 (ms)
DEBUG:suds.client:sending to (http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice)
message:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="https://www.ebi.ac.uk/webservices/chebi">
   <SOAP-ENV:Header/>
   <ns0:Body>
      <ns1:getCompleteEntity>
         <ns1:chebiId>CHEBI:27732</ns1:chebiId>
      </ns1:getCompleteEntity>
   </ns0:Body>
</SOAP-ENV:Envelope>
DEBUG:suds.client:headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'""'}
DEBUG:suds.transport.http:sending:
URL: http://www.ebi.ac.uk:80/webservices/chebi/2.0/webservice
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'""', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'""'}
MESSAGE:
<?xml version="1.0" encoding="UTF-8"?><SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="https://www.ebi.ac.uk/webservices/chebi"><SOAP-ENV:Header/><ns0:Body><ns1:getCompleteEntity><ns1:chebiId>CHEBI:27732</ns1:chebiId></ns1:getCompleteEntity></ns0:Body></SOAP-ENV:Envelope>
DEBUG:suds.transport.http:received:
CODE: HTTPStatus.OK
HEADERS: Server: Apache-Coyote/1.1
Content-Type: text/xml;charset=utf-8
Date: Thu, 08 Jun 2023 11:34:14 GMT
Transfer-Encoding: chunked
Connection: close


MESSAGE:
<?xml version='1.0' encoding='UTF-8'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>
  Marvin  02080816422D          

 14 15  0  0  0  0            999 V2000
   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
 10  1  2  0  0  0  0
  1  2  1  0  0  0  0
 14  2  1  0  0  0  0
  8  3  1  0  0  0  0
  4  3  2  0  0  0  0
  7  4  1  0  0  0  0
  1  5  1  0  0  0  0
  5  3  1  0  0  0  0
 12  5  1  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  1  0  0  0  0
 13  7  1  0  0  0  0
  9  8  2  0  0  0  0
M  END
</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>
  Marvin  02080816422D          

 14 15  0  0  0  0            999 V2000
   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0
   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0
    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0
    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0
    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0
    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0
   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0
   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0
   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0
    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
  8  1  1  0  0  0  0
  2  1  2  0  0  0  0
  7  2  1  0  0  0  0
  3  1  1  0  0  0  0
  5  4  1  0  0  0  0
  5  3  1  0  0  0  0
 10  5  2  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  1  0  0  0  0
  9  8  2  0  0  0  0
 12  3  1  0  0  0  0
 13  7  1  0  0  0  0
 14  4  1  0  0  0  0
M  APO  3  12   1  13   1  14   1
M  STY  3   1 SUP   2 SUP   3 SUP
M  SAL   1  1  12
M  SBL   1  1  13
M  SMT   1 Me
M  SAL   2  1  13
M  SBL   2  1  14
M  SMT   2 Me
M  SAL   3  1  14
M  SBL   3  1  15
M  SMT   3 Me
M  END
</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>
  Marvin  02080816533D          

 24 25  0  0  0  0            999 V2000
   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0
    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0
   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0
    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0
   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0
    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0
    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0
   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0
   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0
   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0
    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0
   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0
    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0
   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0
   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0
   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0
   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0
    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0
    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0
  8  1  4  0  0  0  0
  2  1  4  0  0  0  0
  7  2  4  0  0  0  0
  3  1  1  0  0  0  0
  5  4  1  0  0  0  0
  5  3  1  0  0  0  0
 10  5  2  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  4  0  0  0  0
  9  8  4  0  0  0  0
  9 15  1  0  0  0  0
 12  3  1  0  0  0  0
 13  7  1  0  0  0  0
 14  4  1  0  0  0  0
 12 16  1  0  0  0  0
 12 17  1  0  0  0  0
 12 18  1  0  0  0  0
 13 19  1  0  0  0  0
 13 20  1  0  0  0  0
 13 21  1  0  0  0  0
 14 22  1  0  0  0  0
 14 23  1  0  0  0  0
 14 24  1  0  0  0  0
M  APO  3  12   1  13   1  14   1
M  STY  3   1 SUP   2 SUP   3 SUP
M  SAL   1  4  12  16  17  18
M  SBL   1  1  14
M  SMT   1 Me
M  SDS EXP  1   1
M  SAL   2  4  13  19  20  21
M  SBL   2  1  15
M  SMT   2 Me
M  SDS EXP  1   2
M  SAL   3  4  14  22  23  24
M  SBL   3  1  16
M  SMT   3 Me
M  SDS EXP  1   3
M  END
</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>
DEBUG:suds.metrics:waited 503 (ms) on server reply
DEBUG:suds.client:Reply HTTP status - 200
b'<?xml version=\'1.0\' encoding=\'UTF-8\'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n 10  1  2  0  0  0  0\n  1  2  1  0  0  0  0\n 14  2  1  0  0  0  0\n  8  3  1  0  0  0  0\n  4  3  2  0  0  0  0\n  7  4  1  0  0  0  0\n  1  5  1  0  0  0  0\n  5  3  1  0  0  0  0\n 12  5  1  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n 13  7  1  0  0  0  0\n  9  8  2  0  0  0  0\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0\n   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0\n   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0\n    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  1  0  0  0  0\n  2  1  2  0  0  0  0\n  7  2  1  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n  9  8  2  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  1  12\nM  SBL   1  1  13\nM  SMT   1 Me\nM  SAL   2  1  13\nM  SBL   2  1  14\nM  SMT   2 Me\nM  SAL   3  1  14\nM  SBL   3  1  15\nM  SMT   3 Me\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816533D          \n\n 24 25  0  0  0  0            999 V2000\n   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0\n    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0\n   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0\n   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0\n    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0\n    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0\n   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0\n    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0\n    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0\n    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  4  0  0  0  0\n  2  1  4  0  0  0  0\n  7  2  4  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  4  0  0  0  0\n  9  8  4  0  0  0  0\n  9 15  1  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\n 12 16  1  0  0  0  0\n 12 17  1  0  0  0  0\n 12 18  1  0  0  0  0\n 13 19  1  0  0  0  0\n 13 20  1  0  0  0  0\n 13 21  1  0  0  0  0\n 14 22  1  0  0  0  0\n 14 23  1  0  0  0  0\n 14 24  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  4  12  16  17  18\nM  SBL   1  1  14\nM  SMT   1 Me\nM  SDS EXP  1   1\nM  SAL   2  4  13  19  20  21\nM  SBL   2  1  15\nM  SMT   2 Me\nM  SDS EXP  1   2\nM  SAL   3  4  14  22  23  24\nM  SBL   3  1  16\nM  SMT   3 Me\nM  SDS EXP  1   3\nM  END\n</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>'
DEBUG:suds.metrics:b'<?xml version=\'1.0\' encoding=\'UTF-8\'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n 10  1  2  0  0  0  0\n  1  2  1  0  0  0  0\n 14  2  1  0  0  0  0\n  8  3  1  0  0  0  0\n  4  3  2  0  0  0  0\n  7  4  1  0  0  0  0\n  1  5  1  0  0  0  0\n  5  3  1  0  0  0  0\n 12  5  1  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n 13  7  1  0  0  0  0\n  9  8  2  0  0  0  0\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0\n   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0\n   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0\n    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  1  0  0  0  0\n  2  1  2  0  0  0  0\n  7  2  1  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n  9  8  2  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  1  12\nM  SBL   1  1  13\nM  SMT   1 Me\nM  SAL   2  1  13\nM  SBL   2  1  14\nM  SMT   2 Me\nM  SAL   3  1  14\nM  SBL   3  1  15\nM  SMT   3 Me\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816533D          \n\n 24 25  0  0  0  0            999 V2000\n   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0\n    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0\n   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0\n   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0\n    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0\n    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0\n   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0\n    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0\n    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0\n    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  4  0  0  0  0\n  2  1  4  0  0  0  0\n  7  2  4  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  4  0  0  0  0\n  9  8  4  0  0  0  0\n  9 15  1  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\n 12 16  1  0  0  0  0\n 12 17  1  0  0  0  0\n 12 18  1  0  0  0  0\n 13 19  1  0  0  0  0\n 13 20  1  0  0  0  0\n 13 21  1  0  0  0  0\n 14 22  1  0  0  0  0\n 14 23  1  0  0  0  0\n 14 24  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  4  12  16  17  18\nM  SBL   1  1  14\nM  SMT   1 Me\nM  SDS EXP  1   1\nM  SAL   2  4  13  19  20  21\nM  SBL   2  1  15\nM  SMT   2 Me\nM  SDS EXP  1   2\nM  SAL   3  4  14  22  23  24\nM  SBL   3  1  16\nM  SMT   3 Me\nM  SDS EXP  1   3\nM  END\n</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>'
sax duration: 5 (ms)
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16fc65670 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65670, resolving: ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21a3340"
   ref[] = 
      "getCompleteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65670 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fc65730 name="getCompleteEntityResponse" />
DEBUG:suds.xsd.sxbasic:Element:0x16fc65760, resolving: ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21a3340"
   ref[] = 
      "Entity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16fc65760 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('Entity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b27104c0 name="Entity" />
DEBUG:suds.umx.typed:reset
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x16ff70280>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (chebiId)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710520, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25944c0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710520 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25944c0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2587eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2587eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2587eb0>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (chebiAsciiName)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710730, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2587ee0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710730 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2587ee0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cbb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b267cbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cbb0>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (definition)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710760, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2594880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710760 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2594880, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b267cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b267cf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b267cf10>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (status)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710790, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2594e50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710790 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2594e50, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2587eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2587eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2587eb0>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (smiles)
DEBUG:suds.xsd.sxbasic:Element:0x2b27107c0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2587d60"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b27107c0 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2587d60, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (inchi)
DEBUG:suds.xsd.sxbasic:Element:0x2b27107f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2594880"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b27107f0 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2594880, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (inchiKey)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710820, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25940d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710820 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25940d0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (charge)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710850, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2587d60"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710850 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2587d60, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (mass)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710880, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2594fd0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710880 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2594fd0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (monoisotopicMass)
DEBUG:suds.xsd.sxbasic:Element:0x2b27108b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25aa5b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b27108b0 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25aa5b0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (entityStar)
DEBUG:suds.xsd.sxbasic:Element:0x2b27108e0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2587eb0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b27108e0 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2587eb0, found builtin (int)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710910, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25aa070"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710910 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25aa070, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710940, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25aa340"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710940 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fcf2fa0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710040, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25e10d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710040 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25e10d0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25bc6d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25bc6d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25bc6d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710130, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25e1040"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710130 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25e1040, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25bc3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25bc3d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25bc3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710160, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25e1250"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710160 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b25e1250, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25bc6d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25bc6d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25bc6d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25e1100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25e1100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25e1100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25e10a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25e10a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25e10a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25e1100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25e1100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25e1100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576df0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576df0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25e11c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25e11c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25e11c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576df0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576df0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576e50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576e50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576e50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576fd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576fd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576a90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576a90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576b50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576b50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576b50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576a90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576a90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576d90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576d90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25769a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25769a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25769a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25769a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25769a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25769a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25768e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25768e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25768e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576790>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576790>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25768e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25768e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25768e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25765e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25765e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25765e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25765e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25765e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25765e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25768b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25768b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25768b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25767f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25767f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25767f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25765b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25765b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25765b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25766d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25766d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25766d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25765b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25765b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25765b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25764f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25764f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25764f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576610>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576610>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25764f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25764f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25764f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576280>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576280>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25764c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25764c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25764c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576280>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576280>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25761f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25761f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25761f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2576430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25761f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25761f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25761f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576160>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576160>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576130>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576130>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576160>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576160>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25767f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25767f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25767f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25760d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25760d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25760d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25767f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25767f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25767f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25764c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25764c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25764c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2576310>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2576310>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2576310>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25764c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25764c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25764c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (IupacNames)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710970, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2576130"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710970 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fcf2fa0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566e20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566e20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566e20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566e20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Formulae)
DEBUG:suds.xsd.sxbasic:Element:0x2b27109a0, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b25760d0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b27109a0 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fcf2fa0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566ee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566ee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566d90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566d90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.xsd.sxbasic:Element:0x2b27109d0, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2576130"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b27109d0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fcf2fa0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566d00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566d00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566d30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566d30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566d30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566d00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566d00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566c70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566c70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566c70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566c70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566c70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566c70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566bb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566bb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566bb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566bb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566bb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566bb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566f10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566f10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566b80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566b80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566b80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710a00, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2566ca0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710a00 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fcf2fa0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566af0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566af0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25667c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25667c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25667c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566610>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566610>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25669d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25669d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25669d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566610>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566610>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566b50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566b50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566b50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25666d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25666d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25666d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25664f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25664f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25664f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25665e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25665e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25665e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25664f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25664f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25664f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25663a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25663a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25663a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25665b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25665b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25665b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25663a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25663a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25663a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25664c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25664c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25664c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2566190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566130>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566130>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2566130>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2566130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2566130>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25666d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25666d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25666d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25661c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25661c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25661c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25666d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25666d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25666d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25665b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25665b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25665b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25666d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25666d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25666d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25665b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25665b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25665b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559610>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559610>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559ee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559ee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559ee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559ee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559d60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559d60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559dc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559dc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559d60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559d60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559fa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559b20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559b20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559b20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559f40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559f40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559b20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559b20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559b20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559940>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25598b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25598b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25598b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559af0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559af0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25598b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25598b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25598b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559a60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559a60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559a60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25599d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25599d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25599d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25595b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25595b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25595b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25597f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25597f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25597f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25595b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25595b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25595b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559760>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559760>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25596d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25596d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25596d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25594f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25594f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25594f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559280>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559280>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559460>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559460>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559280>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559280>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559340>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559340>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25590d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25590d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25590d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2559250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25590d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25590d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25590d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25594f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25594f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25594f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559760>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2559760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559760>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25594f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25594f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25594f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25590d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25590d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25590d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554f40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554f40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554f40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554f40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554ac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554ac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554fa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554fa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554df0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554df0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554df0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554df0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554d60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554d60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554310>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554310>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554310>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554d60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554d60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554f10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554f10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554cd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554cd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554af0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554af0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554e80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554e80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554af0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554af0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554a60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554a60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554a60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554a60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554a60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554a60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25549a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25549a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25549a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554c10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554c10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25549a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25549a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25549a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25548e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25548e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25548e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554b80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554b80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554b80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25548e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25548e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25548e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554850>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554850>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554850>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554850>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25548b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25548b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25548b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25545e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25545e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25545e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25545e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25545e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25545e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25545b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b25545b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25545b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
<suds.resolver.Frame object at 0x2b2554370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554370>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b261ac70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b261ac70>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25542e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25542e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25542e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25542e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25542e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25542e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b2554970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b2554220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b2554970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554070>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554070>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25548b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25548b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25548b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554070>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b2554070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554070>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d5e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d5e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254daf0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254daf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254daf0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d5e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d5e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d4f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d4f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d4f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d4f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254dac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dbe0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254dbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dbe0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254dac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254de50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254de50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254de50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254da30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254da30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254da30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254de50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254de50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254de50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254df10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254df10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254df10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254dfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254df10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254df10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254df10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dd00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254dd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dd00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d790>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d790>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dd00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254dd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dd00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dc10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254dc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dc10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254ddc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254ddc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254ddc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dc10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254dc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dc10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254db20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254db20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254db20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254de20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254de20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254de20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254db20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254db20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254db20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254da60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254da60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254da60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dd90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254dd90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dd90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254da60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254da60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254da60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d9d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d9d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d9d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254dca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d9d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d9d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d9d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254dbb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254dbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254dbb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d8e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d9a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d9a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d9a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d8e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d7f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d7f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d7f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d8b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d8b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d8b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d520>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d340>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d340>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d340>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d340>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710a30, resolving: ('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b254d8b0"
   ref[] = 
      "StructureDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710a30 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fcf2fd0 name="StructureDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (structure)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710100, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b254d370"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710100 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b254d370, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710250, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b254d280"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710250 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b254d280, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d5b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d5b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (dimension)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710280, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b254d3d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710280 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b254d3d0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.xsd.sxbasic:Element:0x2b27102b0, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b254d070"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b27102b0 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b254d070, found builtin (boolean)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d5b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d5b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (structure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d2b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d2b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d2b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (dimension)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d190>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d2b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b254d2b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d2b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (structure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d2b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d2b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d2b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d0d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d0d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (dimension)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d2b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d2b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d2b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fd0 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b254d0d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b254d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b254d0d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710a60, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b254d8b0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710a60 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fcf2fa0 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bb20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252bb20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bb20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bb50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252bb50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bb50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252bfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b0d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b0d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bd90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252bd90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bd90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252be80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252be80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252be80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bd00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252bd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bd00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bcd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252bcd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bcd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252ba60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252ba60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252ba60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252bc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b8e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b6d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b6d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b6d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b9d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b9d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b9d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b7c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b7c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b7c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b790>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b790>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2fa0 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710a90, resolving: ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b7c0"
   ref[] = 
      "OntologyDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710a90 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b27101c0 name="OntologyDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710220, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b7f0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710220 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b7f0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.xsd.sxbasic:Element:0x2b27103a0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b460"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b27103a0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b460, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x2b27103d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b760"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b27103d0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b760, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710400, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b2e0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710400 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b2e0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710430, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b5b0"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710430 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b5b0, found builtin (boolean)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b7c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b7c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b7c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b3d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b3d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252bbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252bbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b070>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b070>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b070>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b070>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252b1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef580>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b252b3d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24eff40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24eff40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24eff40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24eff40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24eff40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24eff40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef700>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b252bbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef5e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef5e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24efe50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24efe50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24efe50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24efe50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24efe50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24efe50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef1c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef1c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef1c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef1c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef3d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef3d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24efe50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24efe50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24efe50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef6a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef6a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef6a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24eff10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24eff10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24eff10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef6a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef6a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef6a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24eff10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24eff10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24eff10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef490>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef040>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef040>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef040>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef040>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef1c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24ef1c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef1c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ce50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ce50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ce50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cb20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cb20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cb20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ce50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ce50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ce50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cb20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cb20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cb20>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24ef1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef1f0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cd90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cd90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cee0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24eff10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24eff10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24eff10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cf40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cf40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ce80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ce80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cfd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cfd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cfd0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cdc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cdc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cdc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cdc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cdc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cdc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cfa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyChildren)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710ac0, resolving: ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250ce80"
   ref[] = 
      "OntologyDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710ac0 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b27101c0 name="OntologyDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c310>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c310>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c310>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c310>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c310>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c310>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ce80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyChildren)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cdc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cdc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cdc0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (OntologyChildren)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27101c0 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c250>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (GeneralComments)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710af0, resolving: ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250c310"
   ref[] = 
      "CommentDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710af0 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16fcf2f10 name="CommentDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2f10 name="CommentDataItem" />) for (text)
DEBUG:suds.xsd.sxbasic:Element:0x16fcf2f70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250c730"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16fcf2f70 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250c730, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x16fcf2f10 name="CommentDataItem" />) for (date)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710070, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250c6a0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710070 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250c6a0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710b20, resolving: ('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250c400"
   ref[] = 
      "CompoundOriginDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x2b2710b20 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x2b2710310 name="CompoundOriginDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710370, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250c9d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710370 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250c9d0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710550, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250ca00"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710550 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250ca00, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c850>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c850>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710640, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250c2e0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710640 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250c2e0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710670, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250cac0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710670 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250cac0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c850>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c850>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cf70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cf70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cf70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cf70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c8e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c8e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c8e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cd60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c040>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c040>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cd60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd60>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c040>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c040>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.xsd.sxbasic:Element:0x2b2710580, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250cd60"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b2710580 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250cd60, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c640>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.xsd.sxbasic:Element:0x2b27105b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250cb50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x2b27105b0 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250cb50, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250cf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c100>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24fae80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250c910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c910>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fadf0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24fadf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fadf0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24fae80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fadf0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24fadf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fadf0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24fae80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250c400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c400>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b24fae80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24fae80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24faeb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24faeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24faeb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24fae80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fae80>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24faeb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24faeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24faeb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b250cf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cf10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24faeb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b24faeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24faeb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b12b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b12b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b12b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b10a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b10a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b10a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b12b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b12b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b12b0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b10a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b10a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b10a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b10a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b10a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b10a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b11c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b11c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b11c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1430>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b11c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b11c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b11c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b17c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b17c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b17c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b17c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b17c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b17c0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1f70>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b15e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b15e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b15e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b15e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b15e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b15e0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1eb0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1fa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1f10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1f10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1fa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1fa0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1f10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1f10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1c10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1c10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1d00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1d00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1c10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1c10>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1d00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1d00>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1e50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1e50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1e50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1e50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1e50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1e50>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1c40>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1d30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1d30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1d30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1d30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1d30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1d30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1ca0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b19a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b19a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b19a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1a90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1a90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b19a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b19a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b19a0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1a90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1a90>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b19d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b19d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b19d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1be0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b19d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b19d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b19d0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1ac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1ac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1ac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1ac0>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1a30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1670>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
<suds.resolver.Frame object at 0x2b25b1820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1820>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b2554550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2554550>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:searching parent (<Complex:0x2b27104c0 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1760>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1760>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1970>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:searching parent (<Complex:0x2b2710310 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25b1760>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
<suds.resolver.Frame object at 0x2b25b1760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25b1760>)
<suds.resolver.Frame object at 0x16ff70280>
<suds.resolver.Frame object at 0x2b259cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b259cd30>)
<suds.resolver.Frame object at 0x16ff70280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x16ff70280>)

DEBUG:suds.metrics:method 'getCompleteEntity' invoked: 572 (ms)
INFO:pygls.protocol:Sending data: {"id": 1, "jsonrpc": "2.0", "result": "BLL"}
DEBUG:suds.transport.http:received:
CODE: HTTPStatus.OK
HEADERS: Server: Apache-Coyote/1.1
Content-Type: text/xml;charset=utf-8
Date: Thu, 08 Jun 2023 11:34:14 GMT
Transfer-Encoding: chunked
Connection: close


MESSAGE:
<?xml version='1.0' encoding='UTF-8'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>
  Marvin  02080816422D          

 14 15  0  0  0  0            999 V2000
   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0
    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
 10  1  2  0  0  0  0
  1  2  1  0  0  0  0
 14  2  1  0  0  0  0
  8  3  1  0  0  0  0
  4  3  2  0  0  0  0
  7  4  1  0  0  0  0
  1  5  1  0  0  0  0
  5  3  1  0  0  0  0
 12  5  1  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  1  0  0  0  0
 13  7  1  0  0  0  0
  9  8  2  0  0  0  0
M  END
</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>
  Marvin  02080816422D          

 14 15  0  0  0  0            999 V2000
   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0
   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0
    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0
    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0
    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0
    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0
   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0
   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0
   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0
    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
  8  1  1  0  0  0  0
  2  1  2  0  0  0  0
  7  2  1  0  0  0  0
  3  1  1  0  0  0  0
  5  4  1  0  0  0  0
  5  3  1  0  0  0  0
 10  5  2  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  1  0  0  0  0
  9  8  2  0  0  0  0
 12  3  1  0  0  0  0
 13  7  1  0  0  0  0
 14  4  1  0  0  0  0
M  APO  3  12   1  13   1  14   1
M  STY  3   1 SUP   2 SUP   3 SUP
M  SAL   1  1  12
M  SBL   1  1  13
M  SMT   1 Me
M  SAL   2  1  13
M  SBL   2  1  14
M  SMT   2 Me
M  SAL   3  1  14
M  SBL   3  1  15
M  SMT   3 Me
M  END
</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>
  Marvin  02080816533D          

 24 25  0  0  0  0            999 V2000
   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0
    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0
   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0
    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0
   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0
    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0
    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0
   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0
   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0
   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0
    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0
   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0
    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0
    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0
   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0
   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0
   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0
   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0
    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0
    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0
    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0
  8  1  4  0  0  0  0
  2  1  4  0  0  0  0
  7  2  4  0  0  0  0
  3  1  1  0  0  0  0
  5  4  1  0  0  0  0
  5  3  1  0  0  0  0
 10  5  2  0  0  0  0
  6  2  1  0  0  0  0
  6  4  1  0  0  0  0
 11  6  2  0  0  0  0
  9  7  4  0  0  0  0
  9  8  4  0  0  0  0
  9 15  1  0  0  0  0
 12  3  1  0  0  0  0
 13  7  1  0  0  0  0
 14  4  1  0  0  0  0
 12 16  1  0  0  0  0
 12 17  1  0  0  0  0
 12 18  1  0  0  0  0
 13 19  1  0  0  0  0
 13 20  1  0  0  0  0
 13 21  1  0  0  0  0
 14 22  1  0  0  0  0
 14 23  1  0  0  0  0
 14 24  1  0  0  0  0
M  APO  3  12   1  13   1  14   1
M  STY  3   1 SUP   2 SUP   3 SUP
M  SAL   1  4  12  16  17  18
M  SBL   1  1  14
M  SMT   1 Me
M  SDS EXP  1   1
M  SAL   2  4  13  19  20  21
M  SBL   2  1  15
M  SMT   2 Me
M  SDS EXP  1   2
M  SAL   3  4  14  22  23  24
M  SBL   3  1  16
M  SMT   3 Me
M  SDS EXP  1   3
M  END
</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>
DEBUG:suds.metrics:waited 484 (ms) on server reply
DEBUG:suds.client:Reply HTTP status - 200
b'<?xml version=\'1.0\' encoding=\'UTF-8\'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n 10  1  2  0  0  0  0\n  1  2  1  0  0  0  0\n 14  2  1  0  0  0  0\n  8  3  1  0  0  0  0\n  4  3  2  0  0  0  0\n  7  4  1  0  0  0  0\n  1  5  1  0  0  0  0\n  5  3  1  0  0  0  0\n 12  5  1  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n 13  7  1  0  0  0  0\n  9  8  2  0  0  0  0\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0\n   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0\n   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0\n    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  1  0  0  0  0\n  2  1  2  0  0  0  0\n  7  2  1  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n  9  8  2  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  1  12\nM  SBL   1  1  13\nM  SMT   1 Me\nM  SAL   2  1  13\nM  SBL   2  1  14\nM  SMT   2 Me\nM  SAL   3  1  14\nM  SBL   3  1  15\nM  SMT   3 Me\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816533D          \n\n 24 25  0  0  0  0            999 V2000\n   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0\n    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0\n   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0\n   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0\n    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0\n    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0\n   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0\n    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0\n    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0\n    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  4  0  0  0  0\n  2  1  4  0  0  0  0\n  7  2  4  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  4  0  0  0  0\n  9  8  4  0  0  0  0\n  9 15  1  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\n 12 16  1  0  0  0  0\n 12 17  1  0  0  0  0\n 12 18  1  0  0  0  0\n 13 19  1  0  0  0  0\n 13 20  1  0  0  0  0\n 13 21  1  0  0  0  0\n 14 22  1  0  0  0  0\n 14 23  1  0  0  0  0\n 14 24  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  4  12  16  17  18\nM  SBL   1  1  14\nM  SMT   1 Me\nM  SDS EXP  1   1\nM  SAL   2  4  13  19  20  21\nM  SBL   2  1  15\nM  SMT   2 Me\nM  SDS EXP  1   2\nM  SAL   3  4  14  22  23  24\nM  SBL   3  1  16\nM  SMT   3 Me\nM  SDS EXP  1   3\nM  END\n</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>'
DEBUG:suds.metrics:b'<?xml version=\'1.0\' encoding=\'UTF-8\'?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><getCompleteEntityResponse xmlns="https://www.ebi.ac.uk/webservices/chebi"><return><chebiId>CHEBI:27732</chebiId><chebiAsciiName>caffeine</chebiAsciiName><definition>A trimethylxanthine in which the three methyl groups are located at positions 1, 3, and 7. A purine alkaloid that occurs naturally in tea and coffee.</definition><status>CHECKED</status><smiles>Cn1cnc2n(C)c(=O)n(C)c(=O)c12</smiles><inchi>InChI=1S/C8H10N4O2/c1-10-4-9-6-5(10)7(13)12(3)8(14)11(6)2/h4H,1-3H3</inchi><inchiKey>RYYVLZVUVIJVGH-UHFFFAOYSA-N</inchiKey><charge>0</charge><mass>194.19076</mass><monoisotopicMass>194.08038</monoisotopicMass><entityStar>3</entityStar><SecondaryChEBIIds>CHEBI:3295</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:41472</SecondaryChEBIIds><SecondaryChEBIIds>CHEBI:22982</SecondaryChEBIIds><Synonyms><data>1,3,7-trimethyl-2,6-dioxopurine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>1,3,7-trimethylpurine-2,6-dione</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>1,3,7-Trimethylxanthine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>1,3,7-trimethylxanthine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>1-methyltheobromine</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>3,7-Dihydro-1,3,7-trimethyl-1H-purin-2,6-dion</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>7-methyltheophylline</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><Synonyms><data>anhydrous caffeine</data><type>SYNONYM</type><source>KEGG DRUG</source></Synonyms><Synonyms><data>cafeina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>cafeine</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>CAFFEINE</data><type>SYNONYM</type><source>PDBeChem</source></Synonyms><Synonyms><data>Caffeine</data><type>SYNONYM</type><source>KEGG COMPOUND</source></Synonyms><Synonyms><data>caffeine</data><type>SYNONYM</type><source>UniProt</source></Synonyms><Synonyms><data>Coffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>guaranine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>Koffein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>mateina</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>methyltheobromine</data><type>SYNONYM</type><source>IUPHAR</source></Synonyms><Synonyms><data>teina</data><type>SYNONYM</type><source>ChEBI</source></Synonyms><Synonyms><data>Thein</data><type>SYNONYM</type><source>ChemIDplus</source></Synonyms><Synonyms><data>theine</data><type>SYNONYM</type><source>NIST Chemistry WebBook</source></Synonyms><IupacNames><data>1,3,7-trimethyl-3,7-dihydro-1H-purine-2,6-dione</data><type>IUPAC NAME</type><source>IUPAC</source></IupacNames><Formulae><data>C8H10N4O2</data><source>KEGG COMPOUND</source></Formulae><RegistryNumbers><data>103040</data><type>Gmelin Registry Number</type><source>Gmelin</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Beilstein Registry Number</type><source>Beilstein</source></RegistryNumbers><RegistryNumbers><data>17705</data><type>Reaxys Registry Number</type><source>Reaxys</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>KEGG COMPOUND</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>NIST Chemistry WebBook</source></RegistryNumbers><RegistryNumbers><data>58-08-2</data><type>CAS Registry Number</type><source>ChemIDplus</source></RegistryNumbers><Citations><data>10510174</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10796597</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10803761</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10822912</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10884512</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10924888</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>10983026</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11014293</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11022879</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11209966</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11312039</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11410911</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11431501</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11815511</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>11949272</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12397877</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12457274</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12574990</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12915014</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>12943586</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14521986</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>14607010</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15257305</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15280431</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15681408</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15718055</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>15840517</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16143823</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16391865</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16528931</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16644114</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16709440</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16805851</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>16856769</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17132260</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17387608</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17508167</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17724925</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17932622</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>17957400</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18068204</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18258404</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18421070</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18513215</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18625110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>18647558</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19007524</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19047957</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19084078</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19088793</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19418355</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>19879252</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20164568</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>20470411</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22114686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>22770225</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>23551936</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>24039592</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7441110</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>7689104</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8332255</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8347173</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>8679661</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9063686</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9067318</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9132918</data><type>PubMed citation</type><source>Europe PMC</source></Citations><Citations><data>9218278</data><type>PubMed citation</type><source>Europe PMC</source></Citations><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\n    1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n    0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n 10  1  2  0  0  0  0\n  1  2  1  0  0  0  0\n 14  2  1  0  0  0  0\n  8  3  1  0  0  0  0\n  4  3  2  0  0  0  0\n  7  4  1  0  0  0  0\n  1  5  1  0  0  0  0\n  5  3  1  0  0  0  0\n 12  5  1  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n 13  7  1  0  0  0  0\n  9  8  2  0  0  0  0\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>true</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816422D          \n\n 14 15  0  0  0  0            999 V2000\n   -0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  4  0  0\n   -0.7145    0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  5  0  0\n    0.0000   -0.8250    0.0000 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.7145    0.4125    0.0000 N   0  0  0  0  0  0  0  0  0  1  0  0\n    0.7145   -0.4125    0.0000 C   0  0  0  0  0  0  0  0  0  2  0  0\n    0.0000    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  6  0  0\n   -1.4992    0.6674    0.0000 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.4992   -0.6675    0.0000 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -1.9841    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  8  0  0\n    1.4289   -0.8250    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001    1.6500    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.0001   -1.6500    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -1.7541    1.4520    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.4289    0.8250    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  1  0  0  0  0\n  2  1  2  0  0  0  0\n  7  2  1  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  1  0  0  0  0\n  9  8  2  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  1  12\nM  SBL   1  1  13\nM  SMT   1 Me\nM  SAL   2  1  13\nM  SBL   2  1  14\nM  SMT   2 Me\nM  SAL   3  1  14\nM  SBL   3  1  15\nM  SMT   3 Me\nM  END\n</structure><type>mol</type><dimension>2D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><ChemicalStructures><structure>\n  Marvin  02080816533D          \n\n 24 25  0  0  0  0            999 V2000\n   -0.8679    0.6241   -0.3283 C   0  0  0  0  0  0  0  0  0  4  0  0\n    0.4615    0.7009    0.0829 C   0  0  0  0  0  0  0  0  0  5  0  0\n   -1.5328   -0.5430   -0.4078 N   0  0  0  0  0  0  0  0  0  3  0  0\n    0.4263   -1.6660    0.3115 N   0  0  0  0  0  0  0  0  0  1  0  0\n   -0.8724   -1.6645   -0.0706 C   0  0  0  0  0  0  0  0  0  2  0  0\n    1.0847   -0.4998    0.4105 C   0  0  0  0  0  0  0  0  0  6  0  0\n    0.8268    2.0015    0.0556 N   0  0  0  0  0  0  0  0  0  7  0  0\n   -1.2810    1.8740   -0.5971 N   0  0  0  0  0  0  0  0  0  9  0  0\n   -0.2509    2.6938   -0.3617 C   0  0  0  0  0  0  0  0  0  8  0  0\n   -1.4930   -2.7256   -0.1152 O   0  0  0  0  0  0  0  0  0  0  0  0\n    2.2466   -0.4019    0.7856 O   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.8808   -0.5274   -0.8405 C   0  0  0  0  0  0  0  0  0  0  0  0\n    2.0890    2.5724    0.3917 C   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0842   -2.8976    0.5960 C   0  0  0  0  0  0  0  0  0  0  0  0\n   -0.3058    3.7063   -0.4907 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.5287   -0.9307   -0.0601 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -2.9888   -1.1295   -1.7447 H   0  0  0  0  0  0  0  0  0  0  0  0\n   -3.2978    0.4525   -1.0903 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.8617    2.1595   -0.2585 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.3281    2.3436    1.4313 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1008    3.6589    0.2773 H   0  0  0  0  0  0  0  0  0  0  0  0\n    1.0715   -3.5477   -0.2828 H   0  0  0  0  0  0  0  0  0  0  0  0\n    0.5843   -3.4214    1.4149 H   0  0  0  0  0  0  0  0  0  0  0  0\n    2.1343   -2.8322    0.8911 H   0  0  0  0  0  0  0  0  0  0  0  0\n  8  1  4  0  0  0  0\n  2  1  4  0  0  0  0\n  7  2  4  0  0  0  0\n  3  1  1  0  0  0  0\n  5  4  1  0  0  0  0\n  5  3  1  0  0  0  0\n 10  5  2  0  0  0  0\n  6  2  1  0  0  0  0\n  6  4  1  0  0  0  0\n 11  6  2  0  0  0  0\n  9  7  4  0  0  0  0\n  9  8  4  0  0  0  0\n  9 15  1  0  0  0  0\n 12  3  1  0  0  0  0\n 13  7  1  0  0  0  0\n 14  4  1  0  0  0  0\n 12 16  1  0  0  0  0\n 12 17  1  0  0  0  0\n 12 18  1  0  0  0  0\n 13 19  1  0  0  0  0\n 13 20  1  0  0  0  0\n 13 21  1  0  0  0  0\n 14 22  1  0  0  0  0\n 14 23  1  0  0  0  0\n 14 24  1  0  0  0  0\nM  APO  3  12   1  13   1  14   1\nM  STY  3   1 SUP   2 SUP   3 SUP\nM  SAL   1  4  12  16  17  18\nM  SBL   1  1  14\nM  SMT   1 Me\nM  SDS EXP  1   1\nM  SAL   2  4  13  19  20  21\nM  SBL   2  1  15\nM  SMT   2 Me\nM  SDS EXP  1   2\nM  SAL   3  4  14  22  23  24\nM  SBL   3  1  16\nM  SMT   3 Me\nM  SDS EXP  1   3\nM  END\n</structure><type>mol</type><dimension>3D</dimension><defaultStructure>false</defaultStructure></ChemicalStructures><DatabaseLinks><data>1-3-7-TRIMETHYLXANTHINE</data><type>MetaCyc accession</type></DatabaseLinks><DatabaseLinks><data>463</data><type>Drug Central accession</type></DatabaseLinks><DatabaseLinks><data>C00001492</data><type>KNApSAcK accession</type></DatabaseLinks><DatabaseLinks><data>C07481</data><type>KEGG COMPOUND accession</type></DatabaseLinks><DatabaseLinks><data>Caffeine</data><type>Wikipedia accession</type></DatabaseLinks><DatabaseLinks><data>CFF</data><type>PDBeChem accession</type></DatabaseLinks><DatabaseLinks><data>D00528</data><type>KEGG DRUG accession</type></DatabaseLinks><DatabaseLinks><data>DB00201</data><type>DrugBank accession</type></DatabaseLinks><DatabaseLinks><data>HMDB0001847</data><type>HMDB accession</type></DatabaseLinks><DatabaseLinks><data>LSM-2026</data><type>LINCS accession</type></DatabaseLinks><OntologyParents><chebiName>EC 3.1.4.* (phosphoric diester hydrolase) inhibitor</chebiName><chebiId>CHEBI:50218</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mouse metabolite</chebiName><chebiId>CHEBI:75771</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>geroprotector</chebiName><chebiId>CHEBI:176497</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>EC 2.7.11.1 (non-specific serine/threonine protein kinase) inhibitor</chebiName><chebiId>CHEBI:50925</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>ryanodine receptor agonist</chebiName><chebiId>CHEBI:67114</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>fungal metabolite</chebiName><chebiId>CHEBI:76946</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>purine alkaloid</chebiName><chebiId>CHEBI:26385</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine A2A receptor antagonist</chebiName><chebiId>CHEBI:53121</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>psychotropic drug</chebiName><chebiId>CHEBI:35471</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>diuretic</chebiName><chebiId>CHEBI:35498</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>food additive</chebiName><chebiId>CHEBI:64047</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adjuvant</chebiName><chebiId>CHEBI:60809</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>central nervous system stimulant</chebiName><chebiId>CHEBI:35337</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>adenosine receptor antagonist</chebiName><chebiId>CHEBI:71232</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>plant metabolite</chebiName><chebiId>CHEBI:76924</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>human blood serum metabolite</chebiName><chebiId>CHEBI:85234</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>environmental contaminant</chebiName><chebiId>CHEBI:78298</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>xenobiotic</chebiName><chebiId>CHEBI:35703</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>trimethylxanthine</chebiName><chebiId>CHEBI:27134</chebiId><type>is a</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyParents><chebiName>mutagen</chebiName><chebiId>CHEBI:25435</chebiId><type>has role</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyParents><OntologyChildren><chebiName>caffeine monohydrate</chebiName><chebiId>CHEBI:31332</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>8-(3-chlorostyryl)caffeine</chebiName><chebiId>CHEBI:53115</chebiId><type>has functional parent</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><OntologyChildren><chebiName>sodium caffeine benzoate</chebiName><chebiId>CHEBI:32140</chebiId><type>has part</type><status>CHECKED</status><cyclicRelationship>false</cyclicRelationship></OntologyChildren><GeneralComments><text>Stravs M, Schymanski E, Singer H, Department of Environmental Chemistry, Eawag</text><date>2014-10-29</date></GeneralComments><CompoundOrigins><speciesText>Mus musculus</speciesText><speciesAccession>NCBI:txid10090</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>19425150</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Theobroma cacao</speciesText><speciesAccession>NCBI:txid3641</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Camellia sinensis</speciesText><speciesAccession>NCBI:txid4442</speciesAccession><SourceType>PubMed Id</SourceType><SourceAccession>18068204</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Claviceps sorghicola</speciesText><speciesAccession>NCBI:txid83213</speciesAccession><SourceType>DOI</SourceType><SourceAccession>10.1016/S0031-9422(00)00169-2</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood</componentText><componentAccession>UBERON:0000178</componentAccession><SourceType>Article</SourceType><SourceAccession>McPherson, Richard A., ed. Tietz Clinical Guide to Laboratory</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>cerebrospinal fluid</componentText><componentAccession>UBERON:0001359</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>17684518</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>saliva</componentText><componentAccession>UBERON:0001836</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>12097436</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>urine</componentText><componentAccession>BTO:0001419</componentAccession><SourceType>PubMed Id</SourceType><SourceAccession>21389975</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><componentText>blood serum</componentText><componentAccession>BTO:0000133</componentAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS88</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS266</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS263</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS124</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS264</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS93</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS87</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS90</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS267</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS265</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS100</SourceAccession></CompoundOrigins><CompoundOrigins><speciesText>Homo sapiens</speciesText><speciesAccession>NCBI:txid9606</speciesAccession><SourceType>MetaboLights</SourceType><SourceAccession>MTBLS20</SourceAccession></CompoundOrigins></return></getCompleteEntityResponse></S:Body></S:Envelope>'
sax duration: 2 (ms)
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Element:0x16ff64a90 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff64a90, resolving: ('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x28d1c3ac0"
   ref[] = 
      "getCompleteEntityResponse",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff64a90 name="getCompleteEntityResponse" type="('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('getCompleteEntityResponse', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff64880 name="getCompleteEntityResponse" />
DEBUG:suds.xsd.sxbasic:Element:0x16ff647c0, resolving: ('Entity', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x28d1c3ac0"
   ref[] = 
      "Entity",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff647c0 name="return" type="('Entity', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('Entity', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff89280 name="Entity" />
DEBUG:suds.umx.typed:reset
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdced90>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (chebiId)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7ffa0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e4130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7ffa0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e4130, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e40a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e40a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e40a0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (chebiAsciiName)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7fa60, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e4490"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7fa60 name="chebiAsciiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e4490, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (definition)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f9d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e41c0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f9d0 name="definition" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e41c0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e40a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e40a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e40a0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (status)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f970, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e4730"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f970 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e4730, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (smiles)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f910, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e45e0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f910 name="smiles" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e45e0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (inchi)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f850, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e4850"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f850 name="inchi" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e4850, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (inchiKey)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f7c0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e40a0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f7c0 name="inchiKey" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e40a0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (charge)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f700, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e45b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f700 name="charge" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e45b0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (mass)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f670, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e47f0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f670 name="mass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e47f0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (monoisotopicMass)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f5e0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e4a00"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f5e0 name="monoisotopicMass" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e4a00, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (entityStar)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f550, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e4280"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f550 name="entityStar" type="('int', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e4280, found builtin (int)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f490, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e4670"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7f490 name="SecondaryChEBIIds" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21e4670, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (SecondaryChEBIIds)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f400, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21e43a0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff7f400 name="Synonyms" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff93160 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89f40, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x28d1add30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89f40 name="data" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x28d1add30, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1b8610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1b8610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1b8610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89d00, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x28d1addc0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89d00 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x28d1addc0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1b89a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1b89a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1b89a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89c70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x28d1adf40"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89c70 name="source" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x28d1adf40, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1b8610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1b8610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1b8610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1adee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1ad9a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1add30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1add30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1add30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1ad9a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1add90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1add90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1add90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adf40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1adf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adf40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1add90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1add90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1add90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adfa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1adfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adfa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad040>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1ad040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad040>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adfa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1adfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adfa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adaf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1adaf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adaf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad5b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad5b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adaf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1adaf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adaf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1adca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adf10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1adf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adf10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1adca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1adca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1adca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1ad880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1ad700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d1ad880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad5b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad5b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d1ad5b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d1ad5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d1ad5b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0160>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0160>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0bb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0bb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0bb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0160>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0160>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c06a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c06a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c06a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0a00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0a00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0a00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c06a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c06a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c06a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0310>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0310>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0310>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0310>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0310>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0310>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0eb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0eb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0430>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0430>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0eb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0eb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0ee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0ee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0ee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0ee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0f40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0f40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0f40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0f40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0490>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0490>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c08b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c08b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c08b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0490>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0490>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0490>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c05e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c05e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c05e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0fa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0fa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0fa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c05e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c05e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c05e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Synonyms)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (IupacNames)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f370, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x28d2c08b0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff7f370 name="IupacNames" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff93160 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c09a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c09a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c09a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c09a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c09a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c09a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Formulae)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f310, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x28d2c0fa0"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff7f310 name="Formulae" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff93160 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c02b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c02b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c02b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f2b0, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x28d2c0f70"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff7f2b0 name="RegistryNumbers" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff93160 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0040>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0040>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0040>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0040>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c08b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c08b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c08b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c08b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c08b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c08b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0d00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0d00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0850>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0850>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (RegistryNumbers)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28d2c0a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f1f0, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x28d2c0d00"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff7f1f0 name="Citations" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff93160 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28d2c0c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28d2c0c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28d2c0c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2a90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2a90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc2550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2040>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc2040>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2040>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc2550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2dc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2dc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc25e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc25e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc25e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc26d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc26d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc26d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc5190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc5190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc5190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2dc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2dc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc2130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2a00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc2a00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2a00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc2130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc2190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc2190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc2190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3dbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3deb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3deb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3deb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3dbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3ddc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3ddc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3ddc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3dd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3ddc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3ddc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3ddc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3dd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dd60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3dd60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dd60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3dd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d9a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d9d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d9d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d9d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3db80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3db80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3db80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d9d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d9d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d9d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d640>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d640>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d640>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d640>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3da30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3da30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3da30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d6a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d6a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d6a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d6d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d6d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d6d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3ddf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3ddf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3ddf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3ddf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3ddf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3ddf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d790>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d790>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d790>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d790>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d1f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d1f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d160>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d160>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d1f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d1f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d1f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dbb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3dbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dbb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d430>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d430>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dbb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3dbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dbb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dfd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3dfd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dfd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dfd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3dfd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dfd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fde1f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fde1f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fde1f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dfd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3dfd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dfd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc9400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28fdc9400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc9400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3dfd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3dfd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3dfd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdc9940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdc9940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdc9940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d5b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d5b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d5b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff2e670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff2e670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff2e670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff2e100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff2e100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff2e100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d8e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d8e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d8e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d8e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff3d8e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d8e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff3d0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff3d0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12ac0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12ac0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12bb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12bb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12bb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdd2b50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdd2b50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdd2b50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff094c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff094c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff094c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff09430>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff09430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff09430>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff094c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff094c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff094c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff09430>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff09430>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff09430>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff12d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff12070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff12070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff12070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff435b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff435b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff435b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff435b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff435b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff435b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43d00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43d00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43a00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43a00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43a00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43e20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43e20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43e20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43e20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff438e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff438e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff438e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43d30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43d30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43d30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff438e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff438e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff438e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43e50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43e50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43e50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43850>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43850>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43e50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43e50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43e50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43b20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43b20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43b20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43ee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43ee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43ee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43ee0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43ee0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43fd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43fd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43b20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43b20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43b20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43d30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43d30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43d30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28fdec7f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28fdec7f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdec7f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43fd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43fd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43fd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff43ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43fa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43fa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43fa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43c40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43c40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff43fa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff43fa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff43fa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21559a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b21559a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21559a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21559a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b21559a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21559a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21554c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b21554c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21554c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155df0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155df0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155af0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155af0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155af0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155af0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155af0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21554f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b21554f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21554f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155e20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155e20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155790>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155790>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155790>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155e20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155e20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155e20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155dc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155dc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155dc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155f70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155f70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155eb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155eb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155f40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155f40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155f40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155eb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155eb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155eb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (Citations)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21553d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b21553d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21553d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (source)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21553d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b21553d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21553d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f160, resolving: ('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2155f40"
   ref[] = 
      "StructureDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff7f160 name="ChemicalStructures" type="('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('StructureDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff930d0 name="StructureDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (structure)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89dc0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b21557c0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89dc0 name="structure" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b21557c0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x16ff899a0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2155550"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff899a0 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2155550, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155310>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155310>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155310>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (dimension)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89940, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2155b80"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89940 name="dimension" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2155b80, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89880, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2155820"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89880 name="defaultStructure" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b2155820, found builtin (boolean)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155310>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155310>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155310>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (structure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155640>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155640>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (dimension)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155640>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155640>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155640>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (ChemicalStructures)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (structure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (dimension)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff930d0 name="StructureDataItem" />) for (defaultStructure)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155d90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155d90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7f0a0, resolving: ('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b2155f40"
   ref[] = 
      "DataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff7f0a0 name="DatabaseLinks" type="('DataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('DataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff93160 name="DataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155160>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155160>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155160>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155c10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155c10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155c10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21558b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b21558b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21558b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155c70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155c70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155c70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155c70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155c70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155c70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155d30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2155d30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155d30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff04760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff04760>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff04760>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2155700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2155700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2155700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff04850>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff04850>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff04850>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff043d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff043d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff043d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff00a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff00a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff00a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff04e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff04e80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff04e80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff00c70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff00c70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff00c70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff00f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff00f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff00f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff00f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff00f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff00f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff00a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff00a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff00a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (DatabaseLinks)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (data)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24faeb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24faeb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24faeb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93160 name="DataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff006a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff006a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff006a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7fb20, resolving: ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x28ff00f10"
   ref[] = 
      "OntologyDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff7fb20 name="OntologyParents" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff89b80 name="OntologyDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89a30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b24ef0d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89a30 name="chebiName" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b24ef0d0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24faf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24faf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24faf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.xsd.sxbasic:Element:0x16ff895b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b24faee0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff895b0 name="chebiId" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b24faee0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fafa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24fafa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fafa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89520, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b24fafd0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89520 name="type" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b24fafd0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24faf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24faf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24faf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.xsd.sxbasic:Element:0x16ff894c0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b24faf70"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff894c0 name="status" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b24faf70, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fafa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24fafa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fafa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89400, resolving: ('boolean', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b24faf70"
   ref[] = 
      "boolean",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89400 name="cyclicRelationship" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b24faf70, found builtin (boolean)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff00f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x28ff00f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff00f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x28ff006a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x28ff006a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28ff006a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef580>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef580>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef580>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef580>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24fadf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24fadf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24fadf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef700>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef700>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef460>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef460>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24faf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24faf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24faf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef0d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef0d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef550>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef550>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef4c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef4c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250ce80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250ce80>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ce80>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b24ef190>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef190>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c9a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c970>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c970>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c9a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c9a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b24ef250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b24ef250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b24ef250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250cd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250cd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c6a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c6a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c6a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cac0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cac0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250cd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cb50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cb50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cb50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cb50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cb50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cb50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ccd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250ccd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ccd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c670>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c670>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cb50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250cb50>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cb50>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250ceb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250ceb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyParents)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c340>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c340>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c340>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c340>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c610>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c610>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyChildren)
DEBUG:suds.xsd.sxbasic:Element:0x16ff75f10, resolving: ('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250c370"
   ref[] = 
      "OntologyDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff75f10 name="OntologyChildren" type="('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('OntologyDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff89b80 name="OntologyDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c370>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c370>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyChildren)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cbb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250cbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cbb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cbb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250cbb0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cbb0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c280>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c280>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (OntologyChildren)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiName)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (chebiId)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (type)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c5e0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c5e0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (status)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250cd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89b80 name="OntologyDataItem" />) for (cyclicRelationship)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c340>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b250c340>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c340>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (GeneralComments)
DEBUG:suds.xsd.sxbasic:Element:0x16ff75e80, resolving: ('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250cbe0"
   ref[] = 
      "CommentDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff75e80 name="GeneralComments" type="('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('CommentDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff93310 name="CommentDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93310 name="CommentDataItem" />) for (text)
DEBUG:suds.xsd.sxbasic:Element:0x16ff931f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b790"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff931f0 name="text" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b790, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250cc40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250cc40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250cc40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff93310 name="CommentDataItem" />) for (date)
DEBUG:suds.xsd.sxbasic:Element:0x16ff93070, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250c1c0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff93070 name="date" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b250c1c0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b250c2b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b250c2b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b250c2b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.xsd.sxbasic:Element:0x16ff75dc0, resolving: ('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')
 using:(TypeQuery){
   id = "TypeQuery:0x2b250cbb0"
   ref[] = 
      "CompoundOriginDataItem",
      "https://www.ebi.ac.uk/webservices/chebi",
   history[] = 
      <Element:0x16ff75dc0 name="CompoundOrigins" type="('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:('CompoundOriginDataItem', 'https://www.ebi.ac.uk/webservices/chebi'), found as: <Complex:0x16ff89760 name="CompoundOriginDataItem" />
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89640, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b610"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89640 name="speciesText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b610, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89070, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b7c0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89070 name="speciesAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b7c0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7fd90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b550"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7fd90 name="SourceType" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b550, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b520>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b520>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7fd00, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252b220"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7fd00 name="SourceAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252b220, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b0a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b0a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b0a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b0a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b0a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b0a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b100>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b100>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b3d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b3d0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b3d0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bf70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bf70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bfa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bfa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bbe0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bbe0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bfa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bfa0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bfa0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bb20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bb20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bb20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bf40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bf40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.xsd.sxbasic:Element:0x16ff89130, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252bbe0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff89130 name="componentText" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252bbe0, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bb20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bb20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bb20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.xsd.sxbasic:Element:0x16ff7ff10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2b252bb50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      <Element:0x16ff7ff10 name="componentAccession" type="('string', 'http://www.w3.org/2001/XMLSchema')" />,
   resolved = False
 }
DEBUG:suds.xsd.query:TypeQuery:0x2b252bb50, found builtin (string)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bf40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bf40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bf40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bf40>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bf40>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252ba00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252ba00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252ba00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b220>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b220>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252ba00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252ba00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252ba00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252ba00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252ba00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252ba00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bd00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bd00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b580>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b580>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b580>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b4f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b4f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bc70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bc70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bc70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b880>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b880>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bc70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bc70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bc70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252b130>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b130>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bc70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bc70>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bc70>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bdf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bdf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bdf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bf10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bf10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bdf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bdf0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bdf0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (componentAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bf10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bf10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b250>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b250>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bf10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bf10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bf10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252ba90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252ba90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252ba90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252ba90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252ba90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252ba90>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bd30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bd30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b910>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b910>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bcd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bcd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bcd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bcd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bcd0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bcd0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bdc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bdc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bdc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252b730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252b730>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252b730>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bdc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b252bdc0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bdc0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559400>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559400>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b252bc10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b252bc10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559d00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559d00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559070>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559070>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559d00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559d00>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559d00>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559f10>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559f10>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559d60>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559d60>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559ca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559ca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559be0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559be0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559ac0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559ac0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559b20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559b20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559b20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559ac0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559ac0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559ac0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559b20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b2559b20>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559b20>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559a30>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559a30>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559940>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559940>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25599a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b25599a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25599a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25598b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b25598b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25598b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25599a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b25599a0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25599a0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25598b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
<suds.resolver.Frame object at 0x2b25598b0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25598b0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b221eca0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b221eca0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89280 name="Entity" />) for (CompoundOrigins)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesText)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25597c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b25597c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25597c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (speciesAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceType)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b25597c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b25597c0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b25597c0>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:searching parent (<Complex:0x16ff89760 name="CompoundOriginDataItem" />) for (SourceAccession)
DEBUG:suds.resolver:push: (<suds.resolver.Frame object at 0x2b2559820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
<suds.resolver.Frame object at 0x2b2559820>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b2559820>)
<suds.resolver.Frame object at 0x28fdced90>
<suds.resolver.Frame object at 0x2b21e44f0>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x2b21e44f0>)
<suds.resolver.Frame object at 0x28fdced90>
DEBUG:suds.resolver:pop: (<suds.resolver.Frame object at 0x28fdced90>)

DEBUG:suds.metrics:method 'getCompleteEntity' invoked: 534 (ms)
INFO:pygls.protocol:Sending data: {"id": 2, "jsonrpc": "2.0", "result": "BLL"}
DEBUG:pygls.server:Content length: 44
DEBUG:pygls.protocol:Received b'Content-Length: 44\r\n\r\n{"jsonrpc":"2.0","id":3,"method":"shutdown"}'
DEBUG:pygls.protocol:Request message received.
INFO:pygls.protocol:Sending data: {"id": 3, "jsonrpc": "2.0", "result": null}
DEBUG:pygls.server:Content length: 33
DEBUG:pygls.protocol:Received b'Content-Length: 33\r\n\r\n{"jsonrpc":"2.0","method":"exit"}'
DEBUG:pygls.protocol:Notification message received.
INFO:pygls.server:Shutting down the server
INFO:pygls.server:Closing the event loop.
